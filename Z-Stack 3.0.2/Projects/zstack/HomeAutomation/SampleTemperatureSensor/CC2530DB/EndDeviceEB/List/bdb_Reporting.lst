###############################################################################
#
# IAR C/C++ Compiler V10.30.1.6000 for 8051               21/Jul/2020  00:36:33
# Copyright 2004-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        D:\AA\Z-Stack 3.0.2\Components\stack\bdb\bdb_Reporting.c
#    Command line       =  
#        -f C:\Users\sunli\AppData\Local\Temp\EW11C6.tmp ("D:\AA\Z-Stack
#        3.0.2\Components\stack\bdb\bdb_Reporting.c" -D BDB_REPORTING -D
#        SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D xNV_RESTORE -D xPOWER_SAVING
#        -D NWK_AUTO_POLL -D xZTOOL_P1 -D xMT_TASK -D xMT_APP_FUNC -D
#        xMT_SYS_FUNC -D xMT_ZDO_FUNC -D xMT_APP_CNF_FUNC -D
#        LCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D ZCL_READ -D
#        ZCL_DISCOVER -D ZCL_WRITE -D ZCL_BASIC -D ZCL_IDENTIFY -D
#        ZCL_TEMPERATURE_MEASUREMENT -D ZCL_GROUPS -D ZCL_ON_OFF -D ZCL_REPORT
#        -D ZCL_REPORT_DESTINATION_DEVICE -lC "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\EndDeviceEB\List"
#        -lA "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\EndDeviceEB\List"
#        --diag_suppress Pe001,Pa010 -o "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\EndDeviceEB\Obj"
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 16 -f "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg"
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
#        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0} -DMAC_MAX_FRAME_SIZE=116
#        -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const __code"
#        -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000
#        -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440
#        -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000 -DENABLE_LED4_DISABLE_S1)
#        -f "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\Source\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\Source\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\ZMain\TI2530DB\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\hal\include\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\include\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mt\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\osal\include\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\services\saddr\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\services\sdata\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\af\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\bdb\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\gp\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sec\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sys\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\zmac\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
#        -Om --require_prototypes --no_unroll --no_inline --no_tbaa
#        --no_cross_call)
#    Locale             =  Chinese (Simplified)_CHN.936
#    List file          =  
#        D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\EndDeviceEB\List\bdb_Reporting.lst
#    Object file        =  
#        D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\EndDeviceEB\Obj\bdb_Reporting.r51
#
###############################################################################

D:\AA\Z-Stack 3.0.2\Components\stack\bdb\bdb_Reporting.c
      1          /**************************************************************************************************
      2            Filename:       bdb_Reporting.c
      3            Revised:        $Date: 2016-02-25 11:51:49 -0700 (Thu, 25 Feb 2016) $
      4            Revision:       $Revision: - $
      5          
      6            Description:    This file contains the Reporting Attributes functions.
      7          
      8          
      9            Copyright 2006-2015 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          #ifdef BDB_REPORTING
     41          /*********************************************************************
     42           * INCLUDES
     43           */
     44           
     45          #include "bdb.h"
     46          #include "zcl.h"
     47          #include "ZDObject.h"
     48          #include "bdb_Reporting.h"
     49          #include "OSAL.h"
     50          #include "zcl_ms.h"
     51          #include "bdb_interface.h"
     52             
     53          /*********************************************************************
     54           * MACROS
     55           */
     56          #define EQUAL_LLISTITEMDATA( a, b ) ( a.attrID == b.attrID )
     57          #define EQUAL_LLISTCFGATTRITEMDATA( a, b ) ( a.endpoint == b.endpoint &&  a.attrID == b.attrID && a.cluster == b.cluster )
     58          #define FLAGS_TURNOFFALLFLAGS( flags ) ( flags = 0x00 )
     59          #define FLAGS_TURNOFFFLAG( flags, flagMask ) ( flags &= ~flagMask )
     60          #define FLAGS_TURNONFLAG( flags, flagMask ) ( flags |= flagMask )
     61          #define FLAGS_CHECKFLAG( flags, flagMask ) ( (flags & flagMask) > 0? BDBREPORTING_TRUE: BDBREPORTING_FALSE )
     62          
     63           /*********************************************************************
     64           * CONSTANTS
     65           */
     66          #define BDBREPORTING_HASBINDING_FLAG_MASK      0x01
     67          #define BDBREPORTING_NONEXTINCREMENT_FLAG_MASK 0x02
     68          
     69             
     70          #if BDBREPORTING_MAX_ANALOG_ATTR_SIZE == 8   
     71          #define BDBREPORTING_DEFAULTCHANGEVALUE {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
     72          #endif
     73          #if BDBREPORTING_MAX_ANALOG_ATTR_SIZE == 4   
     74          #define BDBREPORTING_DEFAULTCHANGEVALUE {0x00, 0x00, 0x00, 0x00}
     75          #endif
     76          #if BDBREPORTING_MAX_ANALOG_ATTR_SIZE == 2   
     77          #define BDBREPORTING_DEFAULTCHANGEVALUE {0x00, 0x00}
     78          #endif
     79          
     80          #define BDBREPORTING_MAXINTERVAL_DEFAULT 0x0000
     81          #define BDBREPORTING_MININTERVAL_DEFAULT 0xFFFF
     82             
     83          /*********************************************************************
     84           * TYPEDEFS
     85           */
     86          //Data to hold informaation about an attribute in a linked list thats inside
     87          //the cluster-endpoint entry 
     88          typedef struct
     89          {
     90            uint16 attrID;
     91            uint8  lastValueReported[BDBREPORTING_MAX_ANALOG_ATTR_SIZE];
     92            uint8  reportableChange[BDBREPORTING_MAX_ANALOG_ATTR_SIZE];
     93          } bdbReportAttrLive_t;
     94             
     95             
     96          //This structrue holds the data of a attribute reporting configiration that
     97          //is used at runtime and it's saved in the NV
     98          typedef struct
     99          {
    100            uint8 endpoint;
    101            uint16 cluster;
    102            uint16 attrID;
    103            uint16 minReportInt;
    104            uint16 maxReportInt;
    105            uint16 defaultMinReportInt;
    106            uint16 defaultMaxReportInt;
    107            uint8  reportableChange[BDBREPORTING_MAX_ANALOG_ATTR_SIZE];
    108            uint8  defaultReportableChange[BDBREPORTING_MAX_ANALOG_ATTR_SIZE];
    109          } bdbReportAttrCfgData_t;   
    110          
    111          //This structure represents a node in the linked list of the attributes 
    112          //data in the cluster-endpoint entry
    113          typedef struct bdbLinkedListAttrItem
    114          {
    115            bdbReportAttrLive_t* data;
    116            struct bdbLinkedListAttrItem *next;
    117          } bdbLinkedListAttrItem_t;
    118          
    119          
    120          //This structure represents a linked list of the attributes 
    121          //data in the cluster-endpoint entry
    122          typedef struct bdbAttrLinkedListAttr
    123          {
    124            uint8 numItems;
    125            bdbLinkedListAttrItem_t *head;
    126          } bdbAttrLinkedListAttr_t;
    127             
    128          // This structure is an entry of a cluster-endpoint table used by the reporting
    129          //code (the consolidated values) to actually report periodically
    130          typedef struct
    131          {
    132            uint8 flags;
    133            uint8  endpoint;             // status field
    134            uint16  cluster;          // to send or receive reports of the attribute
    135            uint16  consolidatedMinReportInt;             // attribute ID
    136            uint16  consolidatedMaxReportInt;           // attribute data type
    137            uint16  timeSinceLastReport;
    138            bdbAttrLinkedListAttr_t attrLinkedList;
    139          } bdbReportAttrClusterEndpoint_t;   
    140          
    141          
    142          //This structure serves to hold the flags data of a bdbReportAttrClusterEndpoint_t 
    143          //with key =(endpoint,cluster) in instance of the bdb reporting where the table is regenerated
    144          typedef struct
    145          {
    146            uint8 flags;
    147            uint8  endpoint;            
    148            uint16  cluster;
    149          } bdbReportFlagsHolder_t;
    150          
    151          //This structure holds the data of a default attribute reporting configuration
    152          //entered by the application
    153          typedef struct
    154          {
    155            uint8 endpoint; 
    156            uint16 cluster; 
    157            uint16 attrID;
    158            uint16 minReportInt;
    159            uint16 maxReportInt;
    160            uint8  reportableChange[BDBREPORTING_MAX_ANALOG_ATTR_SIZE];
    161          } bdbReportAttrDefaultCfgData_t;
    162             
    163          //This structure represents a node in the linked list of the default attributes 
    164          //configurations entered by the application
    165          typedef struct bdbRepAttrDefaultCfgRecordLinkedListItem
    166          {
    167            bdbReportAttrDefaultCfgData_t* data;
    168            struct bdbRepAttrDefaultCfgRecordLinkedListItem *next;
    169          } bdbRepAttrDefaultCfgRecordLinkedListItem_t;
    170          
    171          //This structure represents the linked list of the default attributes 
    172          //configurations entered by the application
    173          typedef struct bdbRepAttrDefaultCfgRecordLinkedList
    174          {
    175            uint8 numItems;
    176            bdbRepAttrDefaultCfgRecordLinkedListItem_t *head;
    177          } bdbRepAttrDefaultCfgRecordLinkedList_t;
    178          
    179          
    180          
    181          /*********************************************************************
    182           * GLOBAL VARIABLES
    183           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    184          uint8 gAttrDataValue[BDBREPORTING_MAX_ANALOG_ATTR_SIZE];
   \                     gAttrDataValue:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z
    185          
    186          /*********************************************************************
    187           * EXTERNAL VARIABLES
    188           */
    189          
    190          /*********************************************************************
    191           * EXTERNAL FUNCTIONS
    192           */
    193          
    194          /*********************************************************************
    195           * LOCAL VARIABLES
    196           */
    197          
    198          //Table of cluster-endpoint entries used to report periodically

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    199          bdbReportAttrClusterEndpoint_t bdb_reportingClusterEndpointArray[BDB_MAX_CLUSTERENDPOINTS_REPORTING];
   \                     bdb_reportingClusterEndpointArray:
   \   000000                DS 65
   \   000041                REQUIRE __INIT_XDATA_Z
    200          //Current size of the cluster-endpoint table  

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    201          uint8 bdb_reportingClusterEndpointArrayCount;
   \                     bdb_reportingClusterEndpointArrayCount:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    202          //This variable has the timeout value of the currrent timer use to report peridically

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    203          uint16 bdb_reportingNextEventTimeout;
   \                     bdb_reportingNextEventTimeout:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    204          //This variable hasthe index of the cluster-endpoint entry that trigger the current
    205          //timer use to report periodically 

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    206          uint8 bdb_reportingNextClusterEndpointIndex;
   \                     bdb_reportingNextClusterEndpointIndex:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    207          //This is the table that holds in the memory the attribute reporting configurations (dynamic table)

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    208          bdbReportAttrCfgData_t* bdb_reportingAttrCfgRecordsArray;
   \                     bdb_reportingAttrCfgRecordsArray:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    209          //Current size of the attribute reporting configurations table

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    210          uint8 bdb_reportingAttrCfgRecordsArrayCount;
   \                     bdb_reportingAttrCfgRecordsArrayCount:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    211          //Max size of the attribute reporting configurations table

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    212          uint8 bdb_reportingAttrCfgRecordsArrayMaxSize;
   \                     bdb_reportingAttrCfgRecordsArrayMaxSize:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    213          //Linked list for holding the default attribute reporting configurations
    214          //enteres by the application

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    215          bdbRepAttrDefaultCfgRecordLinkedList_t attrDefaultCfgRecordLinkedList;
   \                     attrDefaultCfgRecordLinkedList:
   \   000000                DS 3
   \   000003                REQUIRE __INIT_XDATA_Z
    216          //Flag used to signal when not to accept more default attribute reporting configurations

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    217          uint8 bdb_reportingAcceptDefaultConfs;
   \                     bdb_reportingAcceptDefaultConfs:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    218          
    219          /*********************************************************************
    220           * PUBLIC FUNCTIONS PROTOYPES
    221           */
    222          
    223          /*********************************************************************
    224           * LOCAL FUNCTIONS PROTOYPES
    225           */
    226          
    227          //Begin: Single linked list for attributes in a cluster-endpoint live entry methods 
    228          static void bdb_InitReportAttrLiveValues( bdbReportAttrLive_t* item );
    229          static void bdb_linkedListAttrInit( bdbAttrLinkedListAttr_t *list );
    230          static uint8 bdb_linkedListAttrAdd( bdbAttrLinkedListAttr_t *list, bdbReportAttrLive_t* data );
    231          static bdbLinkedListAttrItem_t* bdb_linkedListAttrSearch( bdbAttrLinkedListAttr_t *list, bdbReportAttrLive_t* searchdata );
    232          static bdbReportAttrLive_t* bdb_linkedListAttrRemove( bdbAttrLinkedListAttr_t *list );
    233          static uint8 bdb_linkedListAttrFreeAll( bdbAttrLinkedListAttr_t *list );
    234          static void bdb_linkedListAttrClearList( bdbAttrLinkedListAttr_t *list );
    235          static bdbLinkedListAttrItem_t* bdb_linkedListAttrGetAtIndex( bdbAttrLinkedListAttr_t *list, uint8 index );
    236          //End: Single Linked List methods
    237          
    238          //Begin: Cluster-endpoint array live methods
    239          static void bdb_clusterEndpointArrayInit( void );
    240          static uint8 bdb_clusterEndpointArrayAdd( uint8 endpoint, uint16 cluster, uint16 consolidatedMinReportInt, uint16 consolidatedMaxReportInt, uint16 timeSinceLastReport );
    241          static uint8 bdb_clusterEndpointArrayGetMin( void );
    242          static void bdb_clusterEndpointArrayMoveTo( uint8 indexSrc, uint8 indexDest );
    243          static uint8 bdb_clusterEndpointArrayUpdateAt( uint8 index, uint16 newTimeSinceLastReport, uint8 markHasBinding, uint8 noNextIncrement );
    244          static void bdb_clusterEndpointArrayFreeAll( void );
    245          static uint8 bdb_clusterEndpointArraySearch( uint8 endpoint, uint16 cluster );
    246          static uint8 bdb_clusterEndpointArrayRemoveAt( uint8 index );
    247          static void bdb_clusterEndpointArrayIncrementAll( uint16 timeSinceLastReportIncrement, uint8 CheckNoIncrementFlag );
    248          //End: Cluster-endpoint array live methods
    249          
    250          //Begin: Single linked list default attr cfg records methods
    251          static void bdb_repAttrDefaultCfgRecordInitValues( bdbReportAttrDefaultCfgData_t* item );
    252          static void bdb_repAttrDefaultCfgRecordsLinkedListInit( bdbRepAttrDefaultCfgRecordLinkedList_t *list );
    253          static uint8 bdb_repAttrDefaultCfgRecordsLinkedListAdd( bdbRepAttrDefaultCfgRecordLinkedList_t *list, bdbReportAttrDefaultCfgData_t* data );
    254          static bdbRepAttrDefaultCfgRecordLinkedListItem_t* bdb_repAttrDefaultCfgRecordsLinkedListSearch( bdbRepAttrDefaultCfgRecordLinkedList_t *list, 
    255                                                                                                          bdbReportAttrDefaultCfgData_t searchdata );
    256          static bdbReportAttrDefaultCfgData_t* bdb_repAttrDefaultCfgRecordsLinkedListRemove( bdbRepAttrDefaultCfgRecordLinkedList_t *list );
    257          static uint8 bdb_repAttrDefaultCfgRecordsLinkedListFreeAll( bdbRepAttrDefaultCfgRecordLinkedList_t *list );
    258          //End: Single linked list default attr cfg records methods
    259          
    260          //Begin: Reporting attr configuration array methods
    261          static void bdb_repAttrCfgRecordsArrayInit( void );
    262          static uint8 bdb_repAttrCfgRecordsArrayCreate( uint8 maxNumRepAttrConfRecords );
    263          static uint8 bdb_repAttrCfgRecordsArrayAdd( uint8 endpoint, uint16 cluster, uint16 attrID, uint16 minReportInt, 
    264                                                     uint16 maxReportInt, uint8  reportableChange[], uint16 defMinReportInt, uint16 defMaxReportInt, uint8 defReportChange[] );
    265          static void bdb_repAttrCfgRecordsArrayFreeAll( void );
    266          static uint8 bdb_repAttrCfgRecordsArraySearch( uint8 endpoint, uint16 cluster, uint16 attrID );
    267          static uint8 bdb_repAttrCfgRecordsArrayConsolidateValues( uint8 endpoint, uint16 cluster,  uint16* consolidatedMinReportInt, uint16* consolidatedMaxReportInt );
    268          //End: Reporting attr configuration array methods
    269          
    270          
    271          static uint8 bdb_repAttrBuildClusterEndPointArrayBasedOnConfRecordsArray( void );
    272          static uint8 bdb_RepConstructAttrCfgArray( void );
    273          static void bdb_RepInitAttrCfgRecords( void );
    274          
    275          static endPointDesc_t* bdb_FindEpDesc( uint8 endPoint );
    276          static uint8 bdb_RepFindAttrEntry( uint8 endpoint, uint16 cluster, uint16 attrID, zclAttribute_t* attrRes );
    277          static uint8 bdb_RepLoadCfgRecords( void );
    278          static uint8 bdb_isAttrValueChangedSurpassDelta( uint8 datatype, uint8* delta, uint8* curValue, uint8* lastValue );
    279          static uint16 bdb_RepCalculateEventElapsedTime( uint32 remainingTimeoutTimer, uint16 nextEventTimeout );
    280          static void bdb_RepRestartNextEventTimer( void );
    281          
    282          static void bdb_RepStartReporting( void );
    283          static void bdb_RepStopEventTimer( void );
    284          static void bdb_RepSetupReporting( void );
    285          static void bdb_RepReport( uint8 indexClusterEndpoint );
    286          
    287          extern zclAttrRecsList *zclFindAttrRecsList( uint8 endpoint ); //Definition is located in zcl.h
    288          
    289          /*********************************************************************
    290           * PUBLIC FUNCTIONS DEFINITIONS
    291           */
    292          
    293           /*********************************************************************
    294           * @fn          bdb_RepInit
    295           *
    296           * @brief       Initiates the tables and linked list used in the reporting code.
    297           *
    298           * @param       none
    299           *
    300           * @return      none
    301           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    302          void bdb_RepInit( void )
   \                     bdb_RepInit:
    303          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    304            bdb_reportingNextEventTimeout = 0;
   \   000004   90....       MOV       DPTR,#bdb_reportingNextEventTimeout
   \   000007   E4           CLR       A
   \   000008   F0           MOVX      @DPTR,A
   \   000009   A3           INC       DPTR
   \   00000A   F0           MOVX      @DPTR,A
    305            bdb_reportingAcceptDefaultConfs = BDBREPORTING_TRUE;
   \   00000B   90....       MOV       DPTR,#bdb_reportingAcceptDefaultConfs
   \   00000E   04           INC       A
   \   00000F   F0           MOVX      @DPTR,A
    306            bdb_repAttrCfgRecordsArrayInit( );
   \   000010                ; Setup parameters for call to function bdb_repAttrCfgRecordsArrayInit
   \   000010   12....       LCALL     `??bdb_repAttrCfgRecordsArrayInit::?relay`; Banked call to: bdb_repAttrCfgRecordsArrayInit
    307            bdb_repAttrDefaultCfgRecordsLinkedListInit( &attrDefaultCfgRecordLinkedList );
   \   000013                ; Setup parameters for call to function bdb_repAttrDefaultCfgRecordsLinkedListInit
   \   000013   7A..         MOV       R2,#attrDefaultCfgRecordLinkedList & 0xff
   \   000015   7B..         MOV       R3,#(attrDefaultCfgRecordLinkedList >> 8) & 0xff
   \   000017   12....       LCALL     `??bdb_repAttrDefaultCfgRecordsLinkedListInit::?`; Banked call to: bdb_repAttrDefaultCfgRecordsLinkedListInit
    308            bdb_clusterEndpointArrayInit( );
   \   00001A                ; Setup parameters for call to function bdb_clusterEndpointArrayInit
   \   00001A   12....       LCALL     `??bdb_clusterEndpointArrayInit::?relay`; Banked call to: bdb_clusterEndpointArrayInit
    309          }
   \   00001D   D083         POP       DPH
   \   00001F   D082         POP       DPL
   \   000021   02....       LJMP      ?BRET
    310          
    311           /*********************************************************************
    312           * @fn          bdb_RepConstructReportingData
    313           *
    314           * @brief       Creates the attr reporting configurations by looking at 
    315           *              the app endpoints, cluster and attr definitions or loads 
    316           *              from NV the previous configurations.
    317           *
    318           * @param       none
    319           *
    320           * @return      none
    321           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    322          void bdb_RepConstructReportingData( void )
   \                     bdb_RepConstructReportingData:
    323          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    324            //Don't accept anymore default attribute configurations entries
    325            bdb_reportingAcceptDefaultConfs = BDBREPORTING_FALSE;
   \   000004   90....       MOV       DPTR,#bdb_reportingAcceptDefaultConfs
   \   000007   E4           CLR       A
   \   000008   F0           MOVX      @DPTR,A
    326            //Construct the attr cfg records
    327            bdb_RepInitAttrCfgRecords( );
   \   000009                ; Setup parameters for call to function bdb_RepInitAttrCfgRecords
   \   000009   12....       LCALL     `??bdb_RepInitAttrCfgRecords::?relay`; Banked call to: bdb_RepInitAttrCfgRecords
    328            //Construct the endpoint-cluster array
    329            bdb_repAttrBuildClusterEndPointArrayBasedOnConfRecordsArray( );
   \   00000C                ; Setup parameters for call to function bdb_repAttrBuildClusterEndPointArrayBasedOnConfRecordsArray
   \   00000C   12....       LCALL     ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo; Banked call to: bdb_repAttrBuildClusterEndPointArrayBasedOnConfRecordsArray
    330            //Delete reporting configuration array, it's saved in NV
    331            bdb_repAttrCfgRecordsArrayFreeAll( ); 
   \   00000F                ; Setup parameters for call to function bdb_repAttrCfgRecordsArrayFreeAll
   \   00000F   12....       LCALL     `??bdb_repAttrCfgRecordsArrayFreeAll::?relay`; Banked call to: bdb_repAttrCfgRecordsArrayFreeAll
    332          }
   \   000012   D083         POP       DPH
   \   000014   D082         POP       DPL
   \   000016   02....       LJMP      ?BRET
    333          
    334           /*********************************************************************
    335           * @fn          bdb_RepMarkHasBindingInEndpointClusterArray
    336           *
    337           * @brief       Marks the binding flag as ON at the entry containig the 
    338           *              cluster-endpoint pair.
    339           *
    340           * @param       endpoint - endpoint id of the entry to locate
    341           * @param       cluster - cluster id of the entry to locate
    342           *
    343           * @return      none
    344           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    345          void bdb_RepMarkHasBindingInEndpointClusterArray( uint8 endpoint, uint16 cluster, uint8 unMark, uint8 setNoNextIncrementFlag )
   \                     bdb_RepMarkHasBindingInEndpointClusterArray:
    346          {
   \   000000                REQUIRE ?V0
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   8C..         MOV       ?V0,R4
   \   000007   ED           MOV       A,R5
   \   000008   FE           MOV       R6,A
    347            uint8 foundIndex;
    348            if( bdb_reportingClusterEndpointArrayCount > 0 )
   \   000009   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   00000C   E0           MOVX      A,@DPTR
   \   00000D   6021         JZ        ??bdb_RepMarkHasBindingInEndpointClusterArray_0
    349            {
    350              foundIndex = bdb_clusterEndpointArraySearch( endpoint, cluster );
   \   00000F                ; Setup parameters for call to function bdb_clusterEndpointArraySearch
   \   00000F   12....       LCALL     `??bdb_clusterEndpointArraySearch::?relay`; Banked call to: bdb_clusterEndpointArraySearch
   \   000012   E9           MOV       A,R1
   \   000013   F9           MOV       R1,A
    351              if( foundIndex != BDBREPORTING_INVALIDINDEX )
   \   000014   74FF         MOV       A,#-0x1
   \   000016   69           XRL       A,R1
   \   000017   6017         JZ        ??bdb_RepMarkHasBindingInEndpointClusterArray_0
    352              {
    353                if( unMark == BDBREPORTING_TRUE )
   \   000019   7401         MOV       A,#0x1
   \   00001B   65..         XRL       A,?V0
   \   00001D   7006         JNZ       ??bdb_RepMarkHasBindingInEndpointClusterArray_1
    354                {
    355                  bdb_clusterEndpointArrayUpdateAt( foundIndex, 0, BDBREPORTING_FALSE, setNoNextIncrementFlag );
   \   00001F                ; Setup parameters for call to function bdb_clusterEndpointArrayUpdateAt
   \   00001F   EE           MOV       A,R6
   \   000020   FD           MOV       R5,A
   \   000021   7C00         MOV       R4,#0x0
   \   000023   8004         SJMP      ??bdb_RepMarkHasBindingInEndpointClusterArray_2
    356                }
    357                else
    358                {
    359                  bdb_clusterEndpointArrayUpdateAt( foundIndex, 0, BDBREPORTING_TRUE, setNoNextIncrementFlag );
   \                     ??bdb_RepMarkHasBindingInEndpointClusterArray_1:
   \   000025                ; Setup parameters for call to function bdb_clusterEndpointArrayUpdateAt
   \   000025   EE           MOV       A,R6
   \   000026   FD           MOV       R5,A
   \   000027   7C01         MOV       R4,#0x1
   \                     ??bdb_RepMarkHasBindingInEndpointClusterArray_2:
   \   000029   7A00         MOV       R2,#0x0
   \   00002B   7B00         MOV       R3,#0x0
   \   00002D   12....       LCALL     `??bdb_clusterEndpointArrayUpdateAt::?relay`; Banked call to: bdb_clusterEndpointArrayUpdateAt
    360                }
    361              }
    362            }
    363          }
   \                     ??bdb_RepMarkHasBindingInEndpointClusterArray_0:
   \   000030   7F01         MOV       R7,#0x1
   \   000032   02....       LJMP      ?BANKED_LEAVE_XDATA
    364          
    365           /*********************************************************************
    366           * @fn          bdb_RepStartReporting
    367           *
    368           * @brief       Restarts the periodic reporting timer, if the timer was already
    369           *              running it stops it and to before starting timer sets some state 
    370           *              variables.
    371           *
    372           * @return      none
    373           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    374          static void bdb_RepStartReporting( void )
   \                     bdb_RepStartReporting:
    375          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    376            //Stop if reporting timer is active
    377            if( !osal_get_timeoutEx( bdb_TaskID, BDB_REPORT_TIMEOUT ) )
   \   000004                ; Setup parameters for call to function osal_get_timeoutEx
   \   000004   7A80         MOV       R2,#-0x80
   \   000006   7B00         MOV       R3,#0x0
   \   000008   90....       MOV       DPTR,#bdb_TaskID
   \   00000B   E0           MOVX      A,@DPTR
   \   00000C   F9           MOV       R1,A
   \   00000D   12....       LCALL     `??osal_get_timeoutEx::?relay`; Banked call to: osal_get_timeoutEx
   \   000010   EA           MOV       A,R2
   \   000011   4B           ORL       A,R3
   \   000012   4C           ORL       A,R4
   \   000013   4D           ORL       A,R5
   \   000014   701C         JNZ       ??bdb_RepStartReporting_0
    378            {
    379              //timerElapsedTime is zero
    380              osal_stop_timerEx( bdb_TaskID, BDB_REPORT_TIMEOUT );
   \   000016                ; Setup parameters for call to function osal_stop_timerEx
   \   000016   7A80         MOV       R2,#-0x80
   \   000018   7B00         MOV       R3,#0x0
   \   00001A   90....       MOV       DPTR,#bdb_TaskID
   \   00001D   E0           MOVX      A,@DPTR
   \   00001E   F9           MOV       R1,A
   \   00001F   12....       LCALL     `??osal_stop_timerEx::?relay`; Banked call to: osal_stop_timerEx
    381              bdb_reportingNextEventTimeout = 0;
   \   000022   90....       MOV       DPTR,#bdb_reportingNextEventTimeout
   \   000025   E4           CLR       A
   \   000026   F0           MOVX      @DPTR,A
   \   000027   A3           INC       DPTR
   \   000028   F0           MOVX      @DPTR,A
    382              bdb_reportingNextClusterEndpointIndex = BDBREPORTING_INVALIDINDEX;
   \   000029   90....       MOV       DPTR,#bdb_reportingNextClusterEndpointIndex
   \   00002C   74FF         MOV       A,#-0x1
   \   00002E   F0           MOVX      @DPTR,A
    383              //Start Timer
    384              bdb_RepRestartNextEventTimer( );
   \   00002F                ; Setup parameters for call to function bdb_RepRestartNextEventTimer
   \   00002F   12....       LCALL     `??bdb_RepRestartNextEventTimer::?relay`; Banked call to: bdb_RepRestartNextEventTimer
    385            }
    386          }
   \                     ??bdb_RepStartReporting_0:
   \   000032   D083         POP       DPH
   \   000034   D082         POP       DPL
   \   000036   02....       LJMP      ?BRET
    387          
    388           /*********************************************************************
    389           * @fn          bdb_RepStartOrContinueReporting
    390           *
    391           * @brief       Restarts the periodic reporting timer, if the timer was already
    392           *              running it calculates the remaining time of timer before stopping it,
    393           *              then sustracts this elapsed time from the next event endpoint-cluster 
    394           *              table.
    395           *
    396           * @return      none
    397           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    398          void bdb_RepStartOrContinueReporting( void )
   \                     bdb_RepStartOrContinueReporting:
    399          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000   74F4         MOV       A,#-0xc
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
    400            //Stop if reporting timer is active
    401            uint32 remainingTimeOfEvent = osal_get_timeoutEx( bdb_TaskID, BDB_REPORT_TIMEOUT );
   \   000005                ; Setup parameters for call to function osal_get_timeoutEx
   \   000005   7A80         MOV       R2,#-0x80
   \   000007   7B00         MOV       R3,#0x0
   \   000009   90....       MOV       DPTR,#bdb_TaskID
   \   00000C   E0           MOVX      A,@DPTR
   \   00000D   F9           MOV       R1,A
   \   00000E   12....       LCALL     `??osal_get_timeoutEx::?relay`; Banked call to: osal_get_timeoutEx
    402            if( remainingTimeOfEvent == 0 )
   \   000011   EA           MOV       A,R2
   \   000012   4B           ORL       A,R3
   \   000013   4C           ORL       A,R4
   \   000014   4D           ORL       A,R5
   \   000015   601E         JZ        ??bdb_RepStartOrContinueReporting_0
    403            {
    404              //Timer was not running
    405              bdb_RepStartReporting( );
   \   000017                ; Setup parameters for call to function bdb_RepStartReporting
    406            }
    407            else
    408            {
    409              uint16 elapsedTime = bdb_RepCalculateEventElapsedTime( remainingTimeOfEvent, bdb_reportingNextEventTimeout );
   \   000017                ; Setup parameters for call to function bdb_RepCalculateEventElapsedTime
   \   000017   90....       MOV       DPTR,#bdb_reportingNextEventTimeout
   \   00001A   12....       LCALL     ?PUSH_XSTACK8_X_TWO
   \   00001D   12....       LCALL     `??bdb_RepCalculateEventElapsedTime::?relay`; Banked call to: bdb_RepCalculateEventElapsedTime
   \   000020   7402         MOV       A,#0x2
   \   000022   12....       LCALL     ?DEALLOC_XSTACK8
   \   000025   8A..         MOV       ?V0,R2
   \   000027   8B..         MOV       ?V1,R3
    410              bdb_RepStopEventTimer( );
   \   000029                ; Setup parameters for call to function bdb_RepStopEventTimer
   \   000029   12....       LCALL     `??bdb_RepStopEventTimer::?relay`; Banked call to: bdb_RepStopEventTimer
    411              
    412              bdb_clusterEndpointArrayIncrementAll( elapsedTime, BDBREPORTING_TRUE );
   \   00002C                ; Setup parameters for call to function bdb_clusterEndpointArrayIncrementAll
   \   00002C   7901         MOV       R1,#0x1
   \   00002E   AA..         MOV       R2,?V0
   \   000030   AB..         MOV       R3,?V1
   \   000032   12....       LCALL     `??bdb_clusterEndpointArrayIncrementAll::?relay`; Banked call to: bdb_clusterEndpointArrayIncrementAll
    413              bdb_RepStartReporting( );
   \   000035                ; Setup parameters for call to function bdb_RepStartReporting
   \                     ??bdb_RepStartOrContinueReporting_0:
   \   000035   12....       LCALL     `??bdb_RepStartReporting::?relay`; Banked call to: bdb_RepStartReporting
    414            }
    415            
    416          }
   \   000038   7F04         MOV       R7,#0x4
   \   00003A   02....       LJMP      ?BANKED_LEAVE_XDATA
    417          
    418           /*********************************************************************
    419           * @fn          bdb_RepCalculateEventElapsedTime
    420           *
    421           * @brief       Calculate the elapsed time of the currently running timer, 
    422           *              the remaining time is roundup.
    423           *
    424           * @param       remainingTimeoutTimer - timeout value from the osal_get_timeoutEx method, 
    425           *              its in milliseconds units
    426           * @param       nextEventTimeout - the timeout given to the timer when it started
    427           *
    428           * @return      the elapsed time in seconds
    429           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    430          static uint16 bdb_RepCalculateEventElapsedTime( uint32 remainingTimeoutTimer, uint16 nextEventTimeout )
   \                     bdb_RepCalculateEventElapsedTime:
    431          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000                REQUIRE ?V8
   \   000000                REQUIRE ?V9
   \   000000                REQUIRE ?V10
   \   000000                REQUIRE ?V11
   \   000000   74EC         MOV       A,#-0x14
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV       ?V8,R2
   \   000007   8B..         MOV       ?V9,R3
   \   000009   8C..         MOV       ?V10,R4
   \   00000B   8D..         MOV       ?V11,R5
    432            uint32 passTimeOfEvent = 0;
   \   00000D   75..00       MOV       ?V4,#0x0
   \   000010   75..00       MOV       ?V5,#0x0
   \   000013   75..00       MOV       ?V6,#0x0
   \   000016   75..00       MOV       ?V7,#0x0
   \   000019   7414         MOV       A,#0x14
   \   00001B   12....       LCALL     ?XSTACK_DISP0_8
   \   00001E   E0           MOVX      A,@DPTR
   \   00001F   F5..         MOV       ?V0,A
   \   000021   A3           INC       DPTR
   \   000022   E0           MOVX      A,@DPTR
   \   000023   F5..         MOV       ?V1,A
    433            passTimeOfEvent = nextEventTimeout*1000 >= remainingTimeoutTimer? nextEventTimeout*1000 - remainingTimeoutTimer: 0;
   \   000025   E5..         MOV       A,?V0
   \   000027   75F0E8       MOV       B,#-0x18
   \   00002A   A4           MUL       AB
   \   00002B   C5..         XCH       A,?V0
   \   00002D   A8F0         MOV       R0,B
   \   00002F   75F003       MOV       B,#0x3
   \   000032   A4           MUL       AB
   \   000033   28           ADD       A,R0
   \   000034   F8           MOV       R0,A
   \   000035   75F0E8       MOV       B,#-0x18
   \   000038   E5..         MOV       A,?V1
   \   00003A   A4           MUL       AB
   \   00003B   28           ADD       A,R0
   \   00003C   F5..         MOV       ?V1,A
   \   00003E   E4           CLR       A
   \   00003F   F5..         MOV       ?V2,A
   \   000041   F5..         MOV       ?V3,A
   \   000043   78..         MOV       R0,#?V8
   \   000045   79..         MOV       R1,#?V0
   \   000047   12....       LCALL     ?UL_GT
   \   00004A   400D         JC        ??bdb_RepCalculateEventElapsedTime_0
   \   00004C   85....       MOV       ?V4,?V0
   \   00004F   85....       MOV       ?V5,?V1
   \   000052   78..         MOV       R0,#?V4
   \   000054   79..         MOV       R1,#?V8
   \   000056   12....       LCALL     ?L_SUB
    434            uint16 elapsedTime = passTimeOfEvent / 1000;
   \                     ??bdb_RepCalculateEventElapsedTime_0:
   \   000059   85....       MOV       ?V0,?V4
   \   00005C   85....       MOV       ?V1,?V5
   \   00005F   85....       MOV       ?V2,?V6
   \   000062   85....       MOV       ?V3,?V7
   \   000065   90....       MOV       DPTR,#__Constant_3e8
   \   000068   78..         MOV       R0,#?V8
   \   00006A   12....       LCALL     ?L_MOV_X
   \   00006D   78..         MOV       R0,#?V0
   \   00006F   79..         MOV       R1,#?V8
   \   000071   12....       LCALL     ?UL_DIV_MOD
   \   000074   AA..         MOV       R2,?V0
   \   000076   AB..         MOV       R3,?V1
    435            elapsedTime = elapsedTime + ((passTimeOfEvent % 1000) >0 ? 1:0); //roundup
   \   000078   90....       MOV       DPTR,#__Constant_3e8
   \   00007B   78..         MOV       R0,#?V0
   \   00007D   12....       LCALL     ?L_MOV_X
   \   000080   78..         MOV       R0,#?V4
   \   000082   79..         MOV       R1,#?V0
   \   000084   12....       LCALL     ?UL_DIV_MOD
   \   000087   E5..         MOV       A,?V0
   \   000089   45..         ORL       A,?V1
   \   00008B   45..         ORL       A,?V2
   \   00008D   45..         ORL       A,?V3
   \   00008F   6005         JZ        ??bdb_RepCalculateEventElapsedTime_1
   \   000091   0A           INC       R2
   \   000092   EA           MOV       A,R2
   \   000093   7001         JNZ       ??bdb_RepCalculateEventElapsedTime_1
   \   000095   0B           INC       R3
    436            return elapsedTime;  
   \                     ??bdb_RepCalculateEventElapsedTime_1:
   \   000096   7F0C         MOV       R7,#0xc
   \   000098   02....       LJMP      ?BANKED_LEAVE_XDATA
    437          }
    438          
    439           /*********************************************************************
    440           * @fn          bdb_RepProcessEvent
    441           *
    442           * @brief       Method that process the timer expired event in the reporting 
    443           *              code, it calculate the next cluster-endpoint entry based 
    444           *              on the minimum with consolidatedMaxReportInt - timeSinceLastReport,
    445           *              updates timeSinceLastReport of all entries. If the minimum is zero,
    446           *              report the cluster-endpoint attrs.
    447           *
    448           * @return      none
    449           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    450          void bdb_RepProcessEvent( void )
   \                     bdb_RepProcessEvent:
    451          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    452            bdb_clusterEndpointArrayIncrementAll( bdb_reportingNextEventTimeout, BDBREPORTING_FALSE );
   \   000005                ; Setup parameters for call to function bdb_clusterEndpointArrayIncrementAll
   \   000005   7900         MOV       R1,#0x0
   \   000007   90....       MOV       DPTR,#bdb_reportingNextEventTimeout
   \   00000A   E0           MOVX      A,@DPTR
   \   00000B   FA           MOV       R2,A
   \   00000C   A3           INC       DPTR
   \   00000D   E0           MOVX      A,@DPTR
   \   00000E   FB           MOV       R3,A
   \   00000F   12....       LCALL     `??bdb_clusterEndpointArrayIncrementAll::?relay`; Banked call to: bdb_clusterEndpointArrayIncrementAll
    453            uint8 minIndex =  bdb_clusterEndpointArrayGetMin( );
   \   000012                ; Setup parameters for call to function bdb_clusterEndpointArrayGetMin
   \   000012   12....       LCALL     `??bdb_clusterEndpointArrayGetMin::?relay`; Banked call to: bdb_clusterEndpointArrayGetMin
   \   000015   E9           MOV       A,R1
   \   000016   FE           MOV       R6,A
    454            if( minIndex == BDBREPORTING_INVALIDINDEX )
   \   000017   74FF         MOV       A,#-0x1
   \   000019   6E           XRL       A,R6
   \   00001A   6068         JZ        ??bdb_RepProcessEvent_0
    455            {
    456              return;
    457            }
    458             uint16 minVal = bdb_reportingClusterEndpointArray[minIndex].consolidatedMaxReportInt - bdb_reportingClusterEndpointArray[minIndex].timeSinceLastReport;
   \   00001C   E9           MOV       A,R1
   \   00001D   75F00D       MOV       B,#0xd
   \   000020   A4           MUL       AB
   \   000021   F8           MOV       R0,A
   \   000022   A9F0         MOV       R1,B
   \   000024   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   000026   28           ADD       A,R0
   \   000027   F8           MOV       R0,A
   \   000028   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   00002A   39           ADDC      A,R1
   \   00002B   8882         MOV       DPL,R0
   \   00002D   F583         MOV       DPH,A
   \   00002F   A3           INC       DPTR
   \   000030   A3           INC       DPTR
   \   000031   A3           INC       DPTR
   \   000032   A3           INC       DPTR
   \   000033   A3           INC       DPTR
   \   000034   A3           INC       DPTR
   \   000035   C082         PUSH      DPL
   \   000037   C083         PUSH      DPH
   \   000039   8882         MOV       DPL,R0
   \   00003B   F583         MOV       DPH,A
   \   00003D   A3           INC       DPTR
   \   00003E   A3           INC       DPTR
   \   00003F   A3           INC       DPTR
   \   000040   A3           INC       DPTR
   \   000041   A3           INC       DPTR
   \   000042   A3           INC       DPTR
   \   000043   A3           INC       DPTR
   \   000044   A3           INC       DPTR
   \   000045   E0           MOVX      A,@DPTR
   \   000046   F8           MOV       R0,A
   \   000047   A3           INC       DPTR
   \   000048   E0           MOVX      A,@DPTR
   \   000049   F9           MOV       R1,A
   \   00004A   D083         POP       DPH
   \   00004C   D082         POP       DPL
   \   00004E   E0           MOVX      A,@DPTR
   \   00004F   C3           CLR       C
   \   000050   98           SUBB      A,R0
   \   000051   F8           MOV       R0,A
   \   000052   A3           INC       DPTR
   \   000053   E0           MOVX      A,@DPTR
   \   000054   99           SUBB      A,R1
   \   000055   F9           MOV       R1,A
    459             if( minVal>0 )
   \   000056   E8           MOV       A,R0
   \   000057   49           ORL       A,R1
   \   000058   6009         JZ        ??bdb_RepProcessEvent_1
    460             { 
    461               bdb_reportingNextEventTimeout = minVal;
   \   00005A   90....       MOV       DPTR,#bdb_reportingNextEventTimeout
   \   00005D   E8           MOV       A,R0
   \   00005E   F0           MOVX      @DPTR,A
   \   00005F   A3           INC       DPTR
   \   000060   E9           MOV       A,R1
   \   000061   801D         SJMP      ??bdb_RepProcessEvent_2
    462             }
    463             else
    464             {
    465               //Something was triggered, report clusterEndpoint with minIndex 
    466               bdb_reportingNextClusterEndpointIndex = minIndex;
   \                     ??bdb_RepProcessEvent_1:
   \   000063   EE           MOV       A,R6
   \   000064   90....       MOV       DPTR,#bdb_reportingNextClusterEndpointIndex
   \   000067   F0           MOVX      @DPTR,A
    467               bdb_RepReport( BDBREPORTING_INVALIDINDEX );
   \   000068                ; Setup parameters for call to function bdb_RepReport
   \   000068   79FF         MOV       R1,#-0x1
   \   00006A   12....       LCALL     `??bdb_RepReport::?relay`; Banked call to: bdb_RepReport
    468               bdb_clusterEndpointArrayUpdateAt( minIndex, 0, BDBREPORTING_IGNORE, BDBREPORTING_IGNORE );
   \   00006D                ; Setup parameters for call to function bdb_clusterEndpointArrayUpdateAt
   \   00006D   7DFF         MOV       R5,#-0x1
   \   00006F   7CFF         MOV       R4,#-0x1
   \   000071   7A00         MOV       R2,#0x0
   \   000073   7B00         MOV       R3,#0x0
   \   000075   EE           MOV       A,R6
   \   000076   F9           MOV       R1,A
   \   000077   12....       LCALL     `??bdb_clusterEndpointArrayUpdateAt::?relay`; Banked call to: bdb_clusterEndpointArrayUpdateAt
    469               bdb_reportingNextEventTimeout = 0;  
   \   00007A   90....       MOV       DPTR,#bdb_reportingNextEventTimeout
   \   00007D   E4           CLR       A
   \   00007E   F0           MOVX      @DPTR,A
   \   00007F   A3           INC       DPTR
   \                     ??bdb_RepProcessEvent_2:
   \   000080   F0           MOVX      @DPTR,A
    470             }
    471             bdb_RepRestartNextEventTimer( );
   \   000081                ; Setup parameters for call to function bdb_RepRestartNextEventTimer
   \   000081   12....       LCALL     `??bdb_RepRestartNextEventTimer::?relay`; Banked call to: bdb_RepRestartNextEventTimer
    472          }
   \                     ??bdb_RepProcessEvent_0:
   \   000084   7F01         MOV       R7,#0x1
   \   000086   02....       LJMP      ?BANKED_LEAVE_XDATA
    473          
    474          /*********************************************************************
    475           * @fn      bdb_ProcessInConfigReportCmd
    476           *
    477           * @brief   Process the "Profile" Configure Reporting Command
    478           *
    479           * @param   pInMsg - incoming message to process
    480           *
    481           * @return  TRUE if conditions are meet (attr found, memory available, etc.),
    482           *          FALSE if not
    483           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    484          uint8 bdb_ProcessInConfigReportCmd( zclIncomingMsg_t *pInMsg )
   \                     bdb_ProcessInConfigReportCmd:
    485          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000                REQUIRE ?V8
   \   000000                REQUIRE ?V9
   \   000000                REQUIRE ?V10
   \   000000                REQUIRE ?V11
   \   000000                REQUIRE ?V12
   \   000000                REQUIRE ?V14
   \   000000                REQUIRE ?V15
   \   000000   74E8         MOV       A,#-0x18
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 10
   \   000005   74F6         MOV       A,#-0xa
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   8A..         MOV       ?V10,R2
   \   00000C   8B..         MOV       ?V11,R3
   \   00000E                ; Setup parameters for call to function bdb_FindEpDesc
   \   00000E   EA           MOV       A,R2
   \   00000F   2416         ADD       A,#0x16
   \   000011   F582         MOV       DPL,A
   \   000013   E4           CLR       A
   \   000014   35..         ADDC      A,?V11
   \   000016   F583         MOV       DPH,A
   \   000018   E0           MOVX      A,@DPTR
   \   000019   F9           MOV       R1,A
    486            zclCfgReportCmd_t *cfgReportCmd;
    487            zclCfgReportRec_t *reportRec;
    488            zclCfgReportRspCmd_t *cfgReportRspCmd;
    489            zclAttrRec_t attrRec;
    490            uint8 status = ZCL_STATUS_SUCCESS;
    491            uint8 i;
    492            uint8 iNumRspRecords;
    493          
    494            // Find Ep Descriptor
    495            endPointDesc_t* epDescriptor = bdb_FindEpDesc( pInMsg->endPoint );
    496            if( epDescriptor == NULL )
   \   00001A   12....       LCALL     `??bdb_FindEpDesc::?relay`; Banked call to: bdb_FindEpDesc
   \   00001D   EA           MOV       A,R2
   \   00001E   4B           ORL       A,R3
   \   00001F   605C         JZ        ??bdb_ProcessInConfigReportCmd_0
    497            {
    498              return ( FALSE );
    499            }
    500            
    501            // get a pointer to the report configuration record
    502            cfgReportCmd = (zclCfgReportCmd_t *)pInMsg->attrCmd;
   \   000021   E5..         MOV       A,?V10
   \   000023   2417         ADD       A,#0x17
   \   000025   F582         MOV       DPL,A
   \   000027   E4           CLR       A
   \   000028   35..         ADDC      A,?V11
   \   00002A   F583         MOV       DPH,A
   \   00002C   E0           MOVX      A,@DPTR
   \   00002D   F8           MOV       R0,A
   \   00002E   A3           INC       DPTR
   \   00002F   E0           MOVX      A,@DPTR
   \   000030   F9           MOV       R1,A
   \   000031   85..82       MOV       DPL,?XSP + 0
   \   000034   85..83       MOV       DPH,?XSP + 1
   \   000037   E8           MOV       A,R0
   \   000038   F0           MOVX      @DPTR,A
   \   000039   A3           INC       DPTR
   \   00003A   E9           MOV       A,R1
   \   00003B   F0           MOVX      @DPTR,A
    503            
    504            if( cfgReportCmd->numAttr == 0 )
   \   00003C   85..82       MOV       DPL,?XSP + 0
   \   00003F   85..83       MOV       DPH,?XSP + 1
   \   000042   E0           MOVX      A,@DPTR
   \   000043   F8           MOV       R0,A
   \   000044   A3           INC       DPTR
   \   000045   E0           MOVX      A,@DPTR
   \   000046   F583         MOV       DPH,A
   \   000048   8882         MOV       DPL,R0
   \   00004A   E0           MOVX      A,@DPTR
   \   00004B   6030         JZ        ??bdb_ProcessInConfigReportCmd_0
    505            {
    506              return ( FALSE );
    507            }
    508            
    509            // Allocate space for the response command
    510            cfgReportRspCmd = (zclCfgReportRspCmd_t *)osal_mem_alloc( sizeof ( zclCfgReportRspCmd_t ) + 
    511                                                                      ( cfgReportCmd->numAttr * sizeof ( zclCfgReportStatus_t) ) );
   \   00004D                ; Setup parameters for call to function osal_mem_alloc
   \   00004D   F5..         MOV       ?V0,A
   \   00004F   75..00       MOV       ?V1,#0x0
   \   000052   7402         MOV       A,#0x2
   \   000054   78..         MOV       R0,#?V0
   \   000056   12....       LCALL     ?S_SHL
   \   000059   E5..         MOV       A,?V0
   \   00005B   2401         ADD       A,#0x1
   \   00005D   FA           MOV       R2,A
   \   00005E   E4           CLR       A
   \   00005F   35..         ADDC      A,?V1
   \   000061   FB           MOV       R3,A
   \   000062   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   000065   8A..         MOV       ?V8,R2
   \   000067   8B..         MOV       ?V9,R3
    512            if ( cfgReportRspCmd == NULL )
   \   000069   EA           MOV       A,R2
   \   00006A   4B           ORL       A,R3
   \   00006B   6010         JZ        ??bdb_ProcessInConfigReportCmd_0
    513            {
    514              return ( FALSE );
    515            }
    516           
    517            //stop any attribute reporting
    518            bdb_RepStopEventTimer( );
   \   00006D                ; Setup parameters for call to function bdb_RepStopEventTimer
   \   00006D   12....       LCALL     `??bdb_RepStopEventTimer::?relay`; Banked call to: bdb_RepStopEventTimer
    519            
    520            //Load cfg records from NV
    521            status = bdb_RepLoadCfgRecords( );
    522            if( status != BDBREPORTING_SUCCESS )
   \   000070                ; Setup parameters for call to function bdb_RepLoadCfgRecords
   \   000070   12....       LCALL     `??bdb_RepLoadCfgRecords::?relay`; Banked call to: bdb_RepLoadCfgRecords
   \   000073   E9           MOV       A,R1
   \   000074   600C         JZ        ??bdb_ProcessInConfigReportCmd_1
    523            {
    524              osal_mem_free( cfgReportRspCmd );
   \   000076                ; Setup parameters for call to function osal_mem_free
   \   000076   AA..         MOV       R2,?V8
   \   000078   AB..         MOV       R3,?V9
   \   00007A   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
    525              return ( FALSE );
   \                     ??bdb_ProcessInConfigReportCmd_0:
   \   00007D   7900         MOV       R1,#0x0
   \   00007F   02....       LJMP      ??bdb_ProcessInConfigReportCmd_2 & 0xFFFF
    526            }
    527           
    528            // Process each Attribute Reporting Configuration record
    529            uint8 confchanged = BDBREPORTING_FALSE;
   \                     ??bdb_ProcessInConfigReportCmd_1:
   \   000082   75..00       MOV       ?V1,#0x0
    530            iNumRspRecords = 0;
   \   000085   75..00       MOV       ?V12,#0x0
    531            for ( i = 0; i < cfgReportCmd->numAttr; i++ )
   \   000088   75..00       MOV       ?V7,#0x0
   \   00008B   8051         SJMP      ??bdb_ProcessInConfigReportCmd_3
    532            {
    533              reportRec = &(cfgReportCmd->attrList[i]);
    534          
    535              status = ZCL_STATUS_SUCCESS;  // assume success for this rsp record
    536              
    537              uint8 atrrCfgRecordIndex =  bdb_repAttrCfgRecordsArraySearch( pInMsg->endPoint, pInMsg->clusterId, reportRec->attrID );
    538              uint8 status2 = zclFindAttrRec( pInMsg->endPoint, pInMsg->clusterId, reportRec->attrID, &attrRec );
    539              if( atrrCfgRecordIndex == BDBREPORTING_INVALIDINDEX || status2 == 0 )
    540              {
    541                //No cfg record found, 
    542                status = ZCL_STATUS_INVALID_VALUE;
    543              }
    544              else
    545              {
    546                if ( reportRec->direction == ZCL_SEND_ATTR_REPORTS )
    547                {
    548                  if ( reportRec->dataType == attrRec.attr.dataType )
    549                  {
    550                    // This the attribute that is to be reported, for now pass all attrs
    551                    if ( attrRec.attr.accessControl & ACCESS_REPORTABLE )
    552                    {
    553                      if ( reportRec->minReportInt == BDBREPORTING_MININTERVAL_DEFAULT && reportRec->maxReportInt == BDBREPORTING_MAXINTERVAL_DEFAULT )
    554                      {
    555                        //Set the saved default configuration
    556                        confchanged = BDBREPORTING_TRUE;
    557                        bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].minReportInt = bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].defaultMinReportInt;
    558                        bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].maxReportInt = bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].defaultMaxReportInt;
    559                        osal_memset( bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].reportableChange, 0x00, BDBREPORTING_MAX_ANALOG_ATTR_SIZE );
    560                        osal_memcpy( bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].reportableChange, bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].defaultReportableChange, BDBREPORTING_MAX_ANALOG_ATTR_SIZE );
    561                        status = ZCL_STATUS_SUCCESS;  
    562                      }
    563                      else
    564                      {
    565                        // valid configuration, change values
    566                        confchanged = BDBREPORTING_TRUE;
    567                        bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].minReportInt = reportRec->minReportInt;
    568                        bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].maxReportInt = reportRec->maxReportInt;
    569                        // For attributes of 'discrete' data types this field is omitted
    570                        if ( zclAnalogDataType( reportRec->dataType ) )
    571                        {
    572                          osal_memset( bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].reportableChange, 0x00, BDBREPORTING_MAX_ANALOG_ATTR_SIZE );
    573                          osal_memcpy( bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].reportableChange, reportRec->reportableChange, zclGetDataTypeLength( reportRec->dataType ) );
    574                        }
    575                        status = ZCL_STATUS_SUCCESS;             
    576                      }
    577                    }
    578                    else
    579                    {
    580                      // Attribute cannot be reported
    581                      status = ZCL_STATUS_UNREPORTABLE_ATTRIBUTE;
    582                    }
    583                  }
    584                  else
    585                  {
    586                    // Attribute data type is incorrect
    587                    status = ZCL_STATUS_INVALID_DATA_TYPE;
   \                     ??bdb_ProcessInConfigReportCmd_4:
   \   00008D   75..8D       MOV       ?V0,#-0x73
    588                  }
    589                }
    590                // receiving reports
    591                else
    592                {
    593                  status = ZCL_STATUS_SUCCESS;
    594                }
    595              
    596              }
    597          
    598              // If not successful then record the status
    599              if ( status != ZCL_STATUS_SUCCESS )
   \                     ??bdb_ProcessInConfigReportCmd_5:
   \   000090   E5..         MOV       A,?V0
   \   000092   6048         JZ        ??bdb_ProcessInConfigReportCmd_6
    600              {
    601                cfgReportRspCmd->attrList[iNumRspRecords].status = status;
   \   000094   E5..         MOV       A,?V12
   \   000096   F5..         MOV       ?V4,A
   \   000098   75..00       MOV       ?V5,#0x0
   \   00009B   7402         MOV       A,#0x2
   \   00009D   78..         MOV       R0,#?V4
   \   00009F   12....       LCALL     ?S_SHL
   \   0000A2   E5..         MOV       A,?V8
   \   0000A4   25..         ADD       A,?V4
   \   0000A6   F8           MOV       R0,A
   \   0000A7   E5..         MOV       A,?V9
   \   0000A9   35..         ADDC      A,?V5
   \   0000AB   F9           MOV       R1,A
   \   0000AC   8882         MOV       DPL,R0
   \   0000AE   F583         MOV       DPH,A
   \   0000B0   A3           INC       DPTR
   \   0000B1   E5..         MOV       A,?V0
   \   0000B3   F0           MOVX      @DPTR,A
    602                cfgReportRspCmd->attrList[iNumRspRecords].direction = reportRec->direction;
   \   0000B4   85..82       MOV       DPL,?V2
   \   0000B7   85..83       MOV       DPH,?V3
   \   0000BA   E0           MOVX      A,@DPTR
   \   0000BB   8882         MOV       DPL,R0
   \   0000BD   8983         MOV       DPH,R1
   \   0000BF   A3           INC       DPTR
   \   0000C0   A3           INC       DPTR
   \   0000C1   F0           MOVX      @DPTR,A
    603                cfgReportRspCmd->attrList[iNumRspRecords].attrID = reportRec->attrID;
   \   0000C2   85..82       MOV       DPL,?V2
   \   0000C5   85..83       MOV       DPH,?V3
   \   0000C8   A3           INC       DPTR
   \   0000C9   E0           MOVX      A,@DPTR
   \   0000CA   FA           MOV       R2,A
   \   0000CB   A3           INC       DPTR
   \   0000CC   E0           MOVX      A,@DPTR
   \   0000CD   FB           MOV       R3,A
   \   0000CE   8882         MOV       DPL,R0
   \   0000D0   8983         MOV       DPH,R1
   \   0000D2   A3           INC       DPTR
   \   0000D3   A3           INC       DPTR
   \   0000D4   A3           INC       DPTR
   \   0000D5   EA           MOV       A,R2
   \   0000D6   F0           MOVX      @DPTR,A
   \   0000D7   A3           INC       DPTR
   \   0000D8   EB           MOV       A,R3
   \   0000D9   F0           MOVX      @DPTR,A
    604                ++iNumRspRecords;
   \   0000DA   05..         INC       ?V12
    605              }
   \                     ??bdb_ProcessInConfigReportCmd_6:
   \   0000DC   05..         INC       ?V7
   \                     ??bdb_ProcessInConfigReportCmd_3:
   \   0000DE   85..82       MOV       DPL,?XSP + 0
   \   0000E1   85..83       MOV       DPH,?XSP + 1
   \   0000E4   E0           MOVX      A,@DPTR
   \   0000E5   F8           MOV       R0,A
   \   0000E6   A3           INC       DPTR
   \   0000E7   E0           MOVX      A,@DPTR
   \   0000E8   F583         MOV       DPH,A
   \   0000EA   8882         MOV       DPL,R0
   \   0000EC   E0           MOVX      A,@DPTR
   \   0000ED   F8           MOV       R0,A
   \   0000EE   E5..         MOV       A,?V7
   \   0000F0   C3           CLR       C
   \   0000F1   98           SUBB      A,R0
   \   0000F2   4003         JC        $+5
   \   0000F4   02....       LJMP      ??bdb_ProcessInConfigReportCmd_7 & 0xFFFF
   \   0000F7   E5..         MOV       A,?V7
   \   0000F9   75F00C       MOV       B,#0xc
   \   0000FC   A4           MUL       AB
   \   0000FD   F8           MOV       R0,A
   \   0000FE   A9F0         MOV       R1,B
   \   000100   85..82       MOV       DPL,?XSP + 0
   \   000103   85..83       MOV       DPH,?XSP + 1
   \   000106   E0           MOVX      A,@DPTR
   \   000107   28           ADD       A,R0
   \   000108   FA           MOV       R2,A
   \   000109   A3           INC       DPTR
   \   00010A   E0           MOVX      A,@DPTR
   \   00010B   39           ADDC      A,R1
   \   00010C   8A82         MOV       DPL,R2
   \   00010E   F583         MOV       DPH,A
   \   000110   A3           INC       DPTR
   \   000111   8582..       MOV       ?V2,DPL
   \   000114   8583..       MOV       ?V3,DPH
   \   000117   75..00       MOV       ?V0,#0x0
   \   00011A   E5..         MOV       A,?V10
   \   00011C   2408         ADD       A,#0x8
   \   00011E   F5..         MOV       ?V14,A
   \   000120   E4           CLR       A
   \   000121   35..         ADDC      A,?V11
   \   000123   F5..         MOV       ?V15,A
   \   000125                ; Setup parameters for call to function bdb_repAttrCfgRecordsArraySearch
   \   000125   A3           INC       DPTR
   \   000126   E0           MOVX      A,@DPTR
   \   000127   FC           MOV       R4,A
   \   000128   A3           INC       DPTR
   \   000129   E0           MOVX      A,@DPTR
   \   00012A   FD           MOV       R5,A
   \   00012B   85..82       MOV       DPL,?V14
   \   00012E   85..83       MOV       DPH,?V15
   \   000131   E0           MOVX      A,@DPTR
   \   000132   FA           MOV       R2,A
   \   000133   A3           INC       DPTR
   \   000134   E0           MOVX      A,@DPTR
   \   000135   FB           MOV       R3,A
   \   000136   E5..         MOV       A,?V10
   \   000138   2416         ADD       A,#0x16
   \   00013A   F582         MOV       DPL,A
   \   00013C   E4           CLR       A
   \   00013D   35..         ADDC      A,?V11
   \   00013F   F583         MOV       DPH,A
   \   000141   E0           MOVX      A,@DPTR
   \   000142   F9           MOV       R1,A
   \   000143   12....       LCALL     `??bdb_repAttrCfgRecordsArraySearch::?relay`; Banked call to: bdb_repAttrCfgRecordsArraySearch
   \   000146   E9           MOV       A,R1
   \   000147   FE           MOV       R6,A
   \   000148                ; Setup parameters for call to function zclFindAttrRec
   \   000148   7402         MOV       A,#0x2
   \   00014A   12....       LCALL     ?XSTACK_DISP100_8
   \   00014D   88..         MOV       ?V4,R0
   \   00014F   89..         MOV       ?V5,R1
   \   000151   78..         MOV       R0,#?V4
   \   000153   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000156   85..82       MOV       DPL,?V2
   \   000159   85..83       MOV       DPH,?V3
   \   00015C   A3           INC       DPTR
   \   00015D   E0           MOVX      A,@DPTR
   \   00015E   FC           MOV       R4,A
   \   00015F   A3           INC       DPTR
   \   000160   E0           MOVX      A,@DPTR
   \   000161   FD           MOV       R5,A
   \   000162   85..82       MOV       DPL,?V14
   \   000165   85..83       MOV       DPH,?V15
   \   000168   E0           MOVX      A,@DPTR
   \   000169   FA           MOV       R2,A
   \   00016A   A3           INC       DPTR
   \   00016B   E0           MOVX      A,@DPTR
   \   00016C   FB           MOV       R3,A
   \   00016D   E5..         MOV       A,?V10
   \   00016F   2416         ADD       A,#0x16
   \   000171   F582         MOV       DPL,A
   \   000173   E4           CLR       A
   \   000174   35..         ADDC      A,?V11
   \   000176   F583         MOV       DPH,A
   \   000178   E0           MOVX      A,@DPTR
   \   000179   F9           MOV       R1,A
   \   00017A   12....       LCALL     `??zclFindAttrRec::?relay`; Banked call to: zclFindAttrRec
   \   00017D   7402         MOV       A,#0x2
   \   00017F   12....       LCALL     ?DEALLOC_XSTACK8
   \   000182   E9           MOV       A,R1
   \   000183   F8           MOV       R0,A
   \   000184   74FF         MOV       A,#-0x1
   \   000186   6E           XRL       A,R6
   \   000187   6003         JZ        ??bdb_ProcessInConfigReportCmd_8
   \   000189   E9           MOV       A,R1
   \   00018A   7006         JNZ       ??bdb_ProcessInConfigReportCmd_9
   \                     ??bdb_ProcessInConfigReportCmd_8:
   \   00018C   75..87       MOV       ?V0,#-0x79
   \   00018F   02....       LJMP      ??bdb_ProcessInConfigReportCmd_5 & 0xFFFF
   \                     ??bdb_ProcessInConfigReportCmd_9:
   \   000192   85..82       MOV       DPL,?V2
   \   000195   85..83       MOV       DPH,?V3
   \   000198   E0           MOVX      A,@DPTR
   \   000199   6003         JZ        $+5
   \   00019B   02....       LJMP      ??bdb_ProcessInConfigReportCmd_5 & 0xFFFF
   \   00019E   E5..         MOV       A,?V2
   \   0001A0   2403         ADD       A,#0x3
   \   0001A2   F5..         MOV       ?V4,A
   \   0001A4   E4           CLR       A
   \   0001A5   35..         ADDC      A,?V3
   \   0001A7   F5..         MOV       ?V5,A
   \   0001A9   85..82       MOV       DPL,?V4
   \   0001AC   F583         MOV       DPH,A
   \   0001AE   E0           MOVX      A,@DPTR
   \   0001AF   F8           MOV       R0,A
   \   0001B0   7406         MOV       A,#0x6
   \   0001B2   12....       LCALL     ?XSTACK_DISP0_8
   \   0001B5   E0           MOVX      A,@DPTR
   \   0001B6   68           XRL       A,R0
   \   0001B7   6003         JZ        $+5
   \   0001B9   02....       LJMP      ??bdb_ProcessInConfigReportCmd_4 & 0xFFFF
   \   0001BC   7407         MOV       A,#0x7
   \   0001BE   12....       LCALL     ?XSTACK_DISP0_8
   \   0001C1   E0           MOVX      A,@DPTR
   \   0001C2   A2E2         MOV       C,0xE0 /* A   */.2
   \   0001C4   4003         JC        $+5
   \   0001C6   02....       LJMP      ??bdb_ProcessInConfigReportCmd_10 & 0xFFFF
   \   0001C9   85..82       MOV       DPL,?V2
   \   0001CC   85..83       MOV       DPH,?V3
   \   0001CF   A3           INC       DPTR
   \   0001D0   A3           INC       DPTR
   \   0001D1   A3           INC       DPTR
   \   0001D2   A3           INC       DPTR
   \   0001D3   E0           MOVX      A,@DPTR
   \   0001D4   FA           MOV       R2,A
   \   0001D5   A3           INC       DPTR
   \   0001D6   E0           MOVX      A,@DPTR
   \   0001D7   FB           MOV       R3,A
   \   0001D8   E5..         MOV       A,?V2
   \   0001DA   2406         ADD       A,#0x6
   \   0001DC   F8           MOV       R0,A
   \   0001DD   E4           CLR       A
   \   0001DE   35..         ADDC      A,?V3
   \   0001E0   F9           MOV       R1,A
   \   0001E1   74FF         MOV       A,#-0x1
   \   0001E3   6A           XRL       A,R2
   \   0001E4   7003         JNZ       ??bdb_ProcessInConfigReportCmd_11
   \   0001E6   74FF         MOV       A,#-0x1
   \   0001E8   6B           XRL       A,R3
   \                     ??bdb_ProcessInConfigReportCmd_11:
   \   0001E9   6003         JZ        $+5
   \   0001EB   02....       LJMP      ??bdb_ProcessInConfigReportCmd_12 & 0xFFFF
   \   0001EE   8882         MOV       DPL,R0
   \   0001F0   8983         MOV       DPH,R1
   \   0001F2   E0           MOVX      A,@DPTR
   \   0001F3   FC           MOV       R4,A
   \   0001F4   A3           INC       DPTR
   \   0001F5   E0           MOVX      A,@DPTR
   \   0001F6   FD           MOV       R5,A
   \   0001F7   EC           MOV       A,R4
   \   0001F8   4D           ORL       A,R5
   \   0001F9   6003         JZ        $+5
   \   0001FB   02....       LJMP      ??bdb_ProcessInConfigReportCmd_12 & 0xFFFF
   \   0001FE   75..01       MOV       ?V1,#0x1
   \   000201   EE           MOV       A,R6
   \   000202   75F015       MOV       B,#0x15
   \   000205   A4           MUL       AB
   \   000206   FE           MOV       R6,A
   \   000207   AFF0         MOV       R7,B
   \   000209   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00020C   E0           MOVX      A,@DPTR
   \   00020D   2E           ADD       A,R6
   \   00020E   F8           MOV       R0,A
   \   00020F   A3           INC       DPTR
   \   000210   E0           MOVX      A,@DPTR
   \   000211   3F           ADDC      A,R7
   \   000212   F9           MOV       R1,A
   \   000213   8882         MOV       DPL,R0
   \   000215   F583         MOV       DPH,A
   \   000217   A3           INC       DPTR
   \   000218   A3           INC       DPTR
   \   000219   A3           INC       DPTR
   \   00021A   A3           INC       DPTR
   \   00021B   A3           INC       DPTR
   \   00021C   A3           INC       DPTR
   \   00021D   A3           INC       DPTR
   \   00021E   A3           INC       DPTR
   \   00021F   A3           INC       DPTR
   \   000220   E0           MOVX      A,@DPTR
   \   000221   FA           MOV       R2,A
   \   000222   A3           INC       DPTR
   \   000223   E0           MOVX      A,@DPTR
   \   000224   FB           MOV       R3,A
   \   000225   8882         MOV       DPL,R0
   \   000227   8983         MOV       DPH,R1
   \   000229   A3           INC       DPTR
   \   00022A   A3           INC       DPTR
   \   00022B   A3           INC       DPTR
   \   00022C   A3           INC       DPTR
   \   00022D   A3           INC       DPTR
   \   00022E   EA           MOV       A,R2
   \   00022F   F0           MOVX      @DPTR,A
   \   000230   A3           INC       DPTR
   \   000231   EB           MOV       A,R3
   \   000232   F0           MOVX      @DPTR,A
   \   000233   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000236   E0           MOVX      A,@DPTR
   \   000237   2E           ADD       A,R6
   \   000238   F8           MOV       R0,A
   \   000239   A3           INC       DPTR
   \   00023A   E0           MOVX      A,@DPTR
   \   00023B   3F           ADDC      A,R7
   \   00023C   F9           MOV       R1,A
   \   00023D   E8           MOV       A,R0
   \   00023E   240B         ADD       A,#0xb
   \   000240   F582         MOV       DPL,A
   \   000242   E4           CLR       A
   \   000243   39           ADDC      A,R1
   \   000244   F583         MOV       DPH,A
   \   000246   E0           MOVX      A,@DPTR
   \   000247   FA           MOV       R2,A
   \   000248   A3           INC       DPTR
   \   000249   E0           MOVX      A,@DPTR
   \   00024A   FB           MOV       R3,A
   \   00024B   8882         MOV       DPL,R0
   \   00024D   8983         MOV       DPH,R1
   \   00024F   A3           INC       DPTR
   \   000250   A3           INC       DPTR
   \   000251   A3           INC       DPTR
   \   000252   A3           INC       DPTR
   \   000253   A3           INC       DPTR
   \   000254   A3           INC       DPTR
   \   000255   A3           INC       DPTR
   \   000256   EA           MOV       A,R2
   \   000257   F0           MOVX      @DPTR,A
   \   000258   A3           INC       DPTR
   \   000259   EB           MOV       A,R3
   \   00025A   F0           MOVX      @DPTR,A
   \   00025B                ; Setup parameters for call to function osal_memset
   \   00025B   7C04         MOV       R4,#0x4
   \   00025D   7D00         MOV       R5,#0x0
   \   00025F   7900         MOV       R1,#0x0
   \   000261   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000264   E0           MOVX      A,@DPTR
   \   000265   2E           ADD       A,R6
   \   000266   FA           MOV       R2,A
   \   000267   A3           INC       DPTR
   \   000268   E0           MOVX      A,@DPTR
   \   000269   3F           ADDC      A,R7
   \   00026A   FB           MOV       R3,A
   \   00026B   EA           MOV       A,R2
   \   00026C   240D         ADD       A,#0xd
   \   00026E   FA           MOV       R2,A
   \   00026F   5001         JNC       ??bdb_ProcessInConfigReportCmd_13
   \   000271   0B           INC       R3
   \                     ??bdb_ProcessInConfigReportCmd_13:
   \   000272   12....       LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
   \   000275   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000278   E0           MOVX      A,@DPTR
   \   000279   2E           ADD       A,R6
   \   00027A   FA           MOV       R2,A
   \   00027B   A3           INC       DPTR
   \   00027C   E0           MOVX      A,@DPTR
   \   00027D   3F           ADDC      A,R7
   \   00027E   FB           MOV       R3,A
   \   00027F                ; Setup parameters for call to function osal_memcpy
   \   00027F   EA           MOV       A,R2
   \   000280   2411         ADD       A,#0x11
   \   000282   F5..         MOV       ?V4,A
   \   000284   E4           CLR       A
   \   000285   3B           ADDC      A,R3
   \   000286   F5..         MOV       ?V5,A
   \   000288   75..00       MOV       ?V6,#0x0
   \   00028B   78..         MOV       R0,#?V4
   \   00028D   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   000290   7C04         MOV       R4,#0x4
   \   000292   7D00         MOV       R5,#0x0
   \   000294   EA           MOV       A,R2
   \   000295   240D         ADD       A,#0xd
   \   000297   FA           MOV       R2,A
   \   000298   5001         JNC       ??bdb_ProcessInConfigReportCmd_14
   \   00029A   0B           INC       R3
   \                     ??bdb_ProcessInConfigReportCmd_14:
   \   00029B   12....       LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
   \   00029E   7403         MOV       A,#0x3
   \   0002A0   12....       LCALL     ?DEALLOC_XSTACK8
   \   0002A3   02....       LJMP      ??bdb_ProcessInConfigReportCmd_5 & 0xFFFF
   \                     ??bdb_ProcessInConfigReportCmd_12:
   \   0002A6   75..01       MOV       ?V1,#0x1
   \   0002A9   EE           MOV       A,R6
   \   0002AA   75F015       MOV       B,#0x15
   \   0002AD   A4           MUL       AB
   \   0002AE   FE           MOV       R6,A
   \   0002AF   AFF0         MOV       R7,B
   \   0002B1   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   0002B4   E0           MOVX      A,@DPTR
   \   0002B5   2E           ADD       A,R6
   \   0002B6   FC           MOV       R4,A
   \   0002B7   A3           INC       DPTR
   \   0002B8   E0           MOVX      A,@DPTR
   \   0002B9   3F           ADDC      A,R7
   \   0002BA   8C82         MOV       DPL,R4
   \   0002BC   F583         MOV       DPH,A
   \   0002BE   A3           INC       DPTR
   \   0002BF   A3           INC       DPTR
   \   0002C0   A3           INC       DPTR
   \   0002C1   A3           INC       DPTR
   \   0002C2   A3           INC       DPTR
   \   0002C3   EA           MOV       A,R2
   \   0002C4   F0           MOVX      @DPTR,A
   \   0002C5   A3           INC       DPTR
   \   0002C6   EB           MOV       A,R3
   \   0002C7   F0           MOVX      @DPTR,A
   \   0002C8   8882         MOV       DPL,R0
   \   0002CA   8983         MOV       DPH,R1
   \   0002CC   E0           MOVX      A,@DPTR
   \   0002CD   F8           MOV       R0,A
   \   0002CE   A3           INC       DPTR
   \   0002CF   E0           MOVX      A,@DPTR
   \   0002D0   F9           MOV       R1,A
   \   0002D1   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   0002D4   E0           MOVX      A,@DPTR
   \   0002D5   2E           ADD       A,R6
   \   0002D6   FA           MOV       R2,A
   \   0002D7   A3           INC       DPTR
   \   0002D8   E0           MOVX      A,@DPTR
   \   0002D9   3F           ADDC      A,R7
   \   0002DA   8A82         MOV       DPL,R2
   \   0002DC   F583         MOV       DPH,A
   \   0002DE   A3           INC       DPTR
   \   0002DF   A3           INC       DPTR
   \   0002E0   A3           INC       DPTR
   \   0002E1   A3           INC       DPTR
   \   0002E2   A3           INC       DPTR
   \   0002E3   A3           INC       DPTR
   \   0002E4   A3           INC       DPTR
   \   0002E5   E8           MOV       A,R0
   \   0002E6   F0           MOVX      @DPTR,A
   \   0002E7   A3           INC       DPTR
   \   0002E8   E9           MOV       A,R1
   \   0002E9   F0           MOVX      @DPTR,A
   \   0002EA                ; Setup parameters for call to function zclAnalogDataType
   \   0002EA   85..82       MOV       DPL,?V4
   \   0002ED   85..83       MOV       DPH,?V5
   \   0002F0   E0           MOVX      A,@DPTR
   \   0002F1   F9           MOV       R1,A
   \   0002F2   12....       LCALL     `??zclAnalogDataType::?relay`; Banked call to: zclAnalogDataType
   \   0002F5   E9           MOV       A,R1
   \   0002F6   7003         JNZ       $+5
   \   0002F8   02....       LJMP      ??bdb_ProcessInConfigReportCmd_5 & 0xFFFF
   \   0002FB                ; Setup parameters for call to function osal_memset
   \   0002FB   7C04         MOV       R4,#0x4
   \   0002FD   7D00         MOV       R5,#0x0
   \   0002FF   7900         MOV       R1,#0x0
   \   000301   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000304   E0           MOVX      A,@DPTR
   \   000305   2E           ADD       A,R6
   \   000306   FA           MOV       R2,A
   \   000307   A3           INC       DPTR
   \   000308   E0           MOVX      A,@DPTR
   \   000309   3F           ADDC      A,R7
   \   00030A   FB           MOV       R3,A
   \   00030B   EA           MOV       A,R2
   \   00030C   240D         ADD       A,#0xd
   \   00030E   FA           MOV       R2,A
   \   00030F   5001         JNC       ??bdb_ProcessInConfigReportCmd_15
   \   000311   0B           INC       R3
   \                     ??bdb_ProcessInConfigReportCmd_15:
   \   000312   12....       LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
   \   000315                ; Setup parameters for call to function zclGetDataTypeLength
   \   000315   85..82       MOV       DPL,?V4
   \   000318   85..83       MOV       DPH,?V5
   \   00031B   E0           MOVX      A,@DPTR
   \   00031C   F9           MOV       R1,A
   \   00031D   12....       LCALL     `??zclGetDataTypeLength::?relay`; Banked call to: zclGetDataTypeLength
   \   000320   E9           MOV       A,R1
   \   000321   F9           MOV       R1,A
   \   000322                ; Setup parameters for call to function osal_memcpy
   \   000322   85..82       MOV       DPL,?V2
   \   000325   85..83       MOV       DPH,?V3
   \   000328   A3           INC       DPTR
   \   000329   A3           INC       DPTR
   \   00032A   A3           INC       DPTR
   \   00032B   A3           INC       DPTR
   \   00032C   A3           INC       DPTR
   \   00032D   A3           INC       DPTR
   \   00032E   A3           INC       DPTR
   \   00032F   A3           INC       DPTR
   \   000330   A3           INC       DPTR
   \   000331   A3           INC       DPTR
   \   000332   E0           MOVX      A,@DPTR
   \   000333   F5..         MOV       ?V4,A
   \   000335   A3           INC       DPTR
   \   000336   E0           MOVX      A,@DPTR
   \   000337   F5..         MOV       ?V5,A
   \   000339   75..00       MOV       ?V6,#0x0
   \   00033C   78..         MOV       R0,#?V4
   \   00033E   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   000341   E9           MOV       A,R1
   \   000342   FC           MOV       R4,A
   \   000343   7D00         MOV       R5,#0x0
   \   000345   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000348   E0           MOVX      A,@DPTR
   \   000349   2E           ADD       A,R6
   \   00034A   F8           MOV       R0,A
   \   00034B   A3           INC       DPTR
   \   00034C   E0           MOVX      A,@DPTR
   \   00034D   3F           ADDC      A,R7
   \   00034E   F9           MOV       R1,A
   \   00034F   E8           MOV       A,R0
   \   000350   240D         ADD       A,#0xd
   \   000352   FA           MOV       R2,A
   \   000353   E4           CLR       A
   \   000354   39           ADDC      A,R1
   \   000355   FB           MOV       R3,A
   \   000356   02....       LJMP      ??bdb_ProcessInConfigReportCmd_14 & 0xFFFF
   \                     ??bdb_ProcessInConfigReportCmd_10:
   \   000359   75..8C       MOV       ?V0,#-0x74
   \   00035C   02....       LJMP      ??bdb_ProcessInConfigReportCmd_5 & 0xFFFF
    606          
    607            } // going through each attribute
    608          
    609            if( confchanged == BDBREPORTING_TRUE )
   \                     ??bdb_ProcessInConfigReportCmd_7:
   \   00035F   7401         MOV       A,#0x1
   \   000361   65..         XRL       A,?V1
   \   000363   704C         JNZ       ??bdb_ProcessInConfigReportCmd_16
    610            {
    611             //Write new configs into NV
    612             status = osal_nv_item_init( ZCD_NV_BDBREPORTINGCONFIG, sizeof(bdbReportAttrCfgData_t)*bdb_reportingAttrCfgRecordsArrayCount, bdb_reportingAttrCfgRecordsArray );
    613             if( status == SUCCESS )
   \   000365                ; Setup parameters for call to function osal_nv_item_init
   \   000365   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000368   12....       LCALL     ?PUSH_XSTACK8_X_TWO
   \   00036B   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   00036E   E0           MOVX      A,@DPTR
   \   00036F   75F015       MOV       B,#0x15
   \   000372   A4           MUL       AB
   \   000373   FC           MOV       R4,A
   \   000374   ADF0         MOV       R5,B
   \   000376   7A56         MOV       R2,#0x56
   \   000378   7B00         MOV       R3,#0x0
   \   00037A   12....       LCALL     `??osal_nv_item_init::?relay`; Banked call to: osal_nv_item_init
   \   00037D   7402         MOV       A,#0x2
   \   00037F   12....       LCALL     ?DEALLOC_XSTACK8
   \   000382   E9           MOV       A,R1
   \   000383   7029         JNZ       ??bdb_ProcessInConfigReportCmd_17
    614             {
    615               //Overwrite values
    616               osal_nv_write( ZCD_NV_BDBREPORTINGCONFIG,0, sizeof(bdbReportAttrCfgData_t)*bdb_reportingAttrCfgRecordsArrayCount, bdb_reportingAttrCfgRecordsArray );
   \   000385                ; Setup parameters for call to function osal_nv_write
   \   000385   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000388   12....       LCALL     ?PUSH_XSTACK8_X_TWO
   \   00038B   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   00038E   E0           MOVX      A,@DPTR
   \   00038F   75F015       MOV       B,#0x15
   \   000392   A4           MUL       AB
   \   000393   F5..         MOV       ?V0,A
   \   000395   E5F0         MOV       A,B
   \   000397   F5..         MOV       ?V1,A
   \   000399   78..         MOV       R0,#?V0
   \   00039B   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00039E   7C00         MOV       R4,#0x0
   \   0003A0   7D00         MOV       R5,#0x0
   \   0003A2   7A56         MOV       R2,#0x56
   \   0003A4   7B00         MOV       R3,#0x0
   \   0003A6   12....       LCALL     `??osal_nv_write::?relay`; Banked call to: osal_nv_write
   \   0003A9   7404         MOV       A,#0x4
   \   0003AB   12....       LCALL     ?DEALLOC_XSTACK8
    617             }
    618          
    619              bdb_RepSetupReporting( );
   \                     ??bdb_ProcessInConfigReportCmd_17:
   \   0003AE                ; Setup parameters for call to function bdb_RepSetupReporting
   \   0003AE   12....       LCALL     `??bdb_RepSetupReporting::?relay`; Banked call to: bdb_RepSetupReporting
    620            }
    621            
    622            // if no response records, then just say 1 with status of success
    623            cfgReportRspCmd->numAttr = iNumRspRecords;
   \                     ??bdb_ProcessInConfigReportCmd_16:
   \   0003B1   85..82       MOV       DPL,?V8
   \   0003B4   85..83       MOV       DPH,?V9
   \   0003B7   E5..         MOV       A,?V12
   \   0003B9   F0           MOVX      @DPTR,A
    624            if ( cfgReportRspCmd->numAttr == 0 )
   \   0003BA   E0           MOVX      A,@DPTR
   \   0003BB   700B         JNZ       ??bdb_ProcessInConfigReportCmd_18
    625            {
    626              // Since all attributes were configured successfully, include a single
    627              // attribute status record in the response command with the status field
    628              // set to SUCCESS and the attribute ID field and direction omitted.
    629              cfgReportRspCmd->attrList[0].status = ZCL_STATUS_SUCCESS;
   \   0003BD   A3           INC       DPTR
   \   0003BE   E4           CLR       A
   \   0003BF   F0           MOVX      @DPTR,A
    630              cfgReportRspCmd->numAttr = 1;
   \   0003C0   85..82       MOV       DPL,?V8
   \   0003C3   85..83       MOV       DPH,?V9
   \   0003C6   04           INC       A
   \   0003C7   F0           MOVX      @DPTR,A
    631            }
    632          
    633            // Send the response back
    634            zcl_SendConfigReportRspCmd( pInMsg->endPoint, &(pInMsg->srcAddr),
    635                                        pInMsg->clusterId, cfgReportRspCmd, ZCL_FRAME_SERVER_CLIENT_DIR,
    636                                        true, pInMsg->zclHdr.transSeqNum );
   \                     ??bdb_ProcessInConfigReportCmd_18:
   \   0003C8                ; Setup parameters for call to function zcl_SendConfigReportRspCmd
   \   0003C8   85..82       MOV       DPL,?V10
   \   0003CB   85..83       MOV       DPH,?V11
   \   0003CE   A3           INC       DPTR
   \   0003CF   A3           INC       DPTR
   \   0003D0   A3           INC       DPTR
   \   0003D1   A3           INC       DPTR
   \   0003D2   A3           INC       DPTR
   \   0003D3   A3           INC       DPTR
   \   0003D4   E0           MOVX      A,@DPTR
   \   0003D5   F5..         MOV       ?V0,A
   \   0003D7   78..         MOV       R0,#?V0
   \   0003D9   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   0003DC   75..01       MOV       ?V0,#0x1
   \   0003DF   78..         MOV       R0,#?V0
   \   0003E1   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   0003E4   78..         MOV       R0,#?V0
   \   0003E6   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   0003E9   78..         MOV       R0,#?V8
   \   0003EB   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0003EE   85..82       MOV       DPL,?V10
   \   0003F1   85..83       MOV       DPH,?V11
   \   0003F4   A3           INC       DPTR
   \   0003F5   A3           INC       DPTR
   \   0003F6   A3           INC       DPTR
   \   0003F7   A3           INC       DPTR
   \   0003F8   A3           INC       DPTR
   \   0003F9   A3           INC       DPTR
   \   0003FA   A3           INC       DPTR
   \   0003FB   A3           INC       DPTR
   \   0003FC   E0           MOVX      A,@DPTR
   \   0003FD   FC           MOV       R4,A
   \   0003FE   A3           INC       DPTR
   \   0003FF   E0           MOVX      A,@DPTR
   \   000400   FD           MOV       R5,A
   \   000401   E5..         MOV       A,?V10
   \   000403   240A         ADD       A,#0xa
   \   000405   FA           MOV       R2,A
   \   000406   E4           CLR       A
   \   000407   35..         ADDC      A,?V11
   \   000409   FB           MOV       R3,A
   \   00040A   E5..         MOV       A,?V10
   \   00040C   2416         ADD       A,#0x16
   \   00040E   F582         MOV       DPL,A
   \   000410   E4           CLR       A
   \   000411   35..         ADDC      A,?V11
   \   000413   F583         MOV       DPH,A
   \   000415   E0           MOVX      A,@DPTR
   \   000416   F9           MOV       R1,A
   \   000417   12....       LCALL     `??zcl_SendConfigReportRspCmd::?relay`; Banked call to: zcl_SendConfigReportRspCmd
   \   00041A   7405         MOV       A,#0x5
   \   00041C   12....       LCALL     ?DEALLOC_XSTACK8
    637            osal_mem_free( cfgReportRspCmd );
   \   00041F                ; Setup parameters for call to function osal_mem_free
   \   00041F   AA..         MOV       R2,?V8
   \   000421   AB..         MOV       R3,?V9
   \   000423   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
    638          
    639            bdb_repAttrCfgRecordsArrayFreeAll( ); //Free reporting conf array from memory, its saved in NV
   \   000426                ; Setup parameters for call to function bdb_repAttrCfgRecordsArrayFreeAll
   \   000426   12....       LCALL     `??bdb_repAttrCfgRecordsArrayFreeAll::?relay`; Banked call to: bdb_repAttrCfgRecordsArrayFreeAll
    640          
    641            bdb_RepStartReporting( );
   \   000429                ; Setup parameters for call to function bdb_RepStartReporting
   \   000429   12....       LCALL     `??bdb_RepStartReporting::?relay`; Banked call to: bdb_RepStartReporting
    642          
    643            return ( TRUE ) ;
   \   00042C   7901         MOV       R1,#0x1
   \                     ??bdb_ProcessInConfigReportCmd_2:
   \   00042E   740A         MOV       A,#0xa
   \   000430   12....       LCALL     ?DEALLOC_XSTACK8
   \   000433   7F10         MOV       R7,#0x10
   \   000435   02....       LJMP      ?BANKED_LEAVE_XDATA
    644          }
    645          
    646          
    647          /*********************************************************************
    648           * @fn      bdb_ProcessInReadReportCfgCmd
    649           *
    650           * @brief   Process the "Profile" Read Reporting Configuration Command
    651           *
    652           * @param   pInMsg - incoming message to process
    653           *
    654           * @return  TRUE if conditions are meet (attr found, memory available, etc.) or FALSE
    655           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    656          uint8 bdb_ProcessInReadReportCfgCmd( zclIncomingMsg_t *pInMsg )
   \                     bdb_ProcessInReadReportCfgCmd:
    657          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V8
   \   000000                REQUIRE ?V9
   \   000000                REQUIRE ?V10
   \   000000                REQUIRE ?V11
   \   000000                REQUIRE ?V12
   \   000000                REQUIRE ?V13
   \   000000                REQUIRE ?V14
   \   000000                REQUIRE ?V15
   \   000000   74E8         MOV       A,#-0x18
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 10
   \   000005   74F6         MOV       A,#-0xa
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   8A..         MOV       ?V4,R2
   \   00000C   8B..         MOV       ?V5,R3
    658            zclReadReportCfgCmd_t *readReportCfgCmd;
    659            zclReadReportCfgRspCmd_t *readReportCfgRspCmd;
    660            zclReportCfgRspRec_t *reportRspRec;
    661            uint8 hdrLen;
    662            uint8 dataLen = 0;
   \   00000E   7F00         MOV       R7,#0x0
   \   000010                ; Setup parameters for call to function bdb_FindEpDesc
   \   000010   EA           MOV       A,R2
   \   000011   2416         ADD       A,#0x16
   \   000013   F582         MOV       DPL,A
   \   000015   E4           CLR       A
   \   000016   35..         ADDC      A,?V5
   \   000018   F583         MOV       DPH,A
   \   00001A   E0           MOVX      A,@DPTR
   \   00001B   F9           MOV       R1,A
    663            zclAttrRec_t attrRec;
    664            uint8 i;
    665            uint8 reportChangeLen;
    666            uint8 status;
    667            
    668            // Find Ep Descriptor
    669            endPointDesc_t* epDescriptor = bdb_FindEpDesc( pInMsg->endPoint );
   \   00001C   12....       LCALL     `??bdb_FindEpDesc::?relay`; Banked call to: bdb_FindEpDesc
   \   00001F   8A..         MOV       ?V0,R2
   \   000021   8B..         MOV       ?V1,R3
    670            if( epDescriptor==NULL )
   \   000023   EA           MOV       A,R2
   \   000024   4B           ORL       A,R3
   \   000025   7003         JNZ       $+5
   \   000027   02....       LJMP      ??bdb_ProcessInReadReportCfgCmd_0 & 0xFFFF
    671            {
    672              return ( FALSE ); // EMBEDDED RETURN
    673            }
    674            
    675            readReportCfgCmd = (zclReadReportCfgCmd_t *)pInMsg->attrCmd;
   \   00002A   E5..         MOV       A,?V4
   \   00002C   2417         ADD       A,#0x17
   \   00002E   F582         MOV       DPL,A
   \   000030   E4           CLR       A
   \   000031   35..         ADDC      A,?V5
   \   000033   F583         MOV       DPH,A
   \   000035   E0           MOVX      A,@DPTR
   \   000036   F5..         MOV       ?V14,A
   \   000038   A3           INC       DPTR
   \   000039   E0           MOVX      A,@DPTR
   \   00003A   F5..         MOV       ?V15,A
    676            
    677            // Find out the response length (Reportable Change field is of variable length)
    678            for ( i = 0; i < readReportCfgCmd->numAttr; i++ )
   \   00003C   7E00         MOV       R6,#0x0
   \   00003E   806F         SJMP      ??bdb_ProcessInReadReportCfgCmd_1
    679            {
    680              // For supported attributes with 'analog' data type, find out the length of
    681              // the Reportable Change field
    682              if ( zclFindAttrRec( epDescriptor->endPoint, pInMsg->clusterId,
    683                                   readReportCfgCmd->attrList[i].attrID, &attrRec ) )
   \                     ??bdb_ProcessInReadReportCfgCmd_2:
   \   000040                ; Setup parameters for call to function zclFindAttrRec
   \   000040   7402         MOV       A,#0x2
   \   000042   12....       LCALL     ?XSTACK_DISP100_8
   \   000045   88..         MOV       ?V2,R0
   \   000047   89..         MOV       ?V3,R1
   \   000049   78..         MOV       R0,#?V2
   \   00004B   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00004E   EE           MOV       A,R6
   \   00004F   75F003       MOV       B,#0x3
   \   000052   A4           MUL       AB
   \   000053   F8           MOV       R0,A
   \   000054   A9F0         MOV       R1,B
   \   000056   E5..         MOV       A,?V14
   \   000058   28           ADD       A,R0
   \   000059   F582         MOV       DPL,A
   \   00005B   E5..         MOV       A,?V15
   \   00005D   39           ADDC      A,R1
   \   00005E   F583         MOV       DPH,A
   \   000060   A3           INC       DPTR
   \   000061   A3           INC       DPTR
   \   000062   E0           MOVX      A,@DPTR
   \   000063   FC           MOV       R4,A
   \   000064   A3           INC       DPTR
   \   000065   E0           MOVX      A,@DPTR
   \   000066   FD           MOV       R5,A
   \   000067   85..82       MOV       DPL,?V4
   \   00006A   85..83       MOV       DPH,?V5
   \   00006D   A3           INC       DPTR
   \   00006E   A3           INC       DPTR
   \   00006F   A3           INC       DPTR
   \   000070   A3           INC       DPTR
   \   000071   A3           INC       DPTR
   \   000072   A3           INC       DPTR
   \   000073   A3           INC       DPTR
   \   000074   A3           INC       DPTR
   \   000075   E0           MOVX      A,@DPTR
   \   000076   FA           MOV       R2,A
   \   000077   A3           INC       DPTR
   \   000078   E0           MOVX      A,@DPTR
   \   000079   FB           MOV       R3,A
   \   00007A   85..82       MOV       DPL,?V0
   \   00007D   85..83       MOV       DPH,?V1
   \   000080   E0           MOVX      A,@DPTR
   \   000081   F9           MOV       R1,A
   \   000082   12....       LCALL     `??zclFindAttrRec::?relay`; Banked call to: zclFindAttrRec
   \   000085   7402         MOV       A,#0x2
   \   000087   12....       LCALL     ?DEALLOC_XSTACK8
   \   00008A   E9           MOV       A,R1
   \   00008B   6021         JZ        ??bdb_ProcessInReadReportCfgCmd_3
    684              {
    685                if ( zclAnalogDataType( attrRec.attr.dataType ) )
   \   00008D                ; Setup parameters for call to function zclAnalogDataType
   \   00008D   7406         MOV       A,#0x6
   \   00008F   12....       LCALL     ?XSTACK_DISP0_8
   \   000092   E0           MOVX      A,@DPTR
   \   000093   F9           MOV       R1,A
   \   000094   12....       LCALL     `??zclAnalogDataType::?relay`; Banked call to: zclAnalogDataType
   \   000097   E9           MOV       A,R1
   \   000098   6014         JZ        ??bdb_ProcessInReadReportCfgCmd_3
    686                {
    687                   reportChangeLen = zclGetDataTypeLength( attrRec.attr.dataType );
   \   00009A                ; Setup parameters for call to function zclGetDataTypeLength
   \   00009A   7406         MOV       A,#0x6
   \   00009C   12....       LCALL     ?XSTACK_DISP0_8
   \   00009F   E0           MOVX      A,@DPTR
   \   0000A0   F9           MOV       R1,A
   \   0000A1   12....       LCALL     `??zclGetDataTypeLength::?relay`; Banked call to: zclGetDataTypeLength
   \   0000A4   E9           MOV       A,R1
   \   0000A5   F8           MOV       R0,A
    688          
    689                   // add padding if needed
    690                   if ( PADDING_NEEDED( reportChangeLen ) )
   \   0000A6   A2E0         MOV       C,0xE0 /* A   */.0
   \   0000A8   5001         JNC       ??bdb_ProcessInReadReportCfgCmd_4
    691                   {
    692                     reportChangeLen++;
   \   0000AA   08           INC       R0
    693                   }
    694                   dataLen += reportChangeLen;
   \                     ??bdb_ProcessInReadReportCfgCmd_4:
   \   0000AB   E8           MOV       A,R0
   \   0000AC   2F           ADD       A,R7
   \   0000AD   FF           MOV       R7,A
    695                }
    696              }
    697            }
   \                     ??bdb_ProcessInReadReportCfgCmd_3:
   \   0000AE   0E           INC       R6
   \                     ??bdb_ProcessInReadReportCfgCmd_1:
   \   0000AF   85..82       MOV       DPL,?V14
   \   0000B2   85..83       MOV       DPH,?V15
   \   0000B5   E0           MOVX      A,@DPTR
   \   0000B6   F8           MOV       R0,A
   \   0000B7   EE           MOV       A,R6
   \   0000B8   C3           CLR       C
   \   0000B9   98           SUBB      A,R0
   \   0000BA   4084         JC        ??bdb_ProcessInReadReportCfgCmd_2
    698          
    699            hdrLen = sizeof( zclReadReportCfgRspCmd_t ) + ( readReportCfgCmd->numAttr * sizeof( zclReportCfgRspRec_t ) );
    700          
    701            // Allocate space for the response command
    702            readReportCfgRspCmd = (zclReadReportCfgRspCmd_t *)osal_mem_alloc( hdrLen + dataLen );
   \   0000BC                ; Setup parameters for call to function osal_mem_alloc
   \   0000BC   75F00D       MOV       B,#0xd
   \   0000BF   E8           MOV       A,R0
   \   0000C0   A4           MUL       AB
   \   0000C1   04           INC       A
   \   0000C2   F8           MOV       R0,A
   \   0000C3   EF           MOV       A,R7
   \   0000C4   FA           MOV       R2,A
   \   0000C5   E8           MOV       A,R0
   \   0000C6   2A           ADD       A,R2
   \   0000C7   FA           MOV       R2,A
   \   0000C8   E4           CLR       A
   \   0000C9   3400         ADDC      A,#0x0
   \   0000CB   FB           MOV       R3,A
   \   0000CC   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   0000CF   8A..         MOV       ?V2,R2
   \   0000D1   8B..         MOV       ?V3,R3
    703            if ( readReportCfgRspCmd == NULL )
   \   0000D3   EA           MOV       A,R2
   \   0000D4   4B           ORL       A,R3
   \   0000D5   600D         JZ        ??bdb_ProcessInReadReportCfgCmd_0
    704            {
    705              return ( FALSE ); // Out of memory
    706            }
    707            
    708            //Load cfg records from NV
    709            status = bdb_RepLoadCfgRecords( );
    710            if( status != BDBREPORTING_SUCCESS )
   \   0000D7                ; Setup parameters for call to function bdb_RepLoadCfgRecords
   \   0000D7   12....       LCALL     `??bdb_RepLoadCfgRecords::?relay`; Banked call to: bdb_RepLoadCfgRecords
   \   0000DA   E9           MOV       A,R1
   \   0000DB   600C         JZ        ??bdb_ProcessInReadReportCfgCmd_5
    711            {
    712              osal_mem_free(readReportCfgRspCmd);
   \   0000DD                ; Setup parameters for call to function osal_mem_free
   \   0000DD   AA..         MOV       R2,?V2
   \   0000DF   AB..         MOV       R3,?V3
   \   0000E1   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
    713              return ( FALSE ); //Out of memory
   \                     ??bdb_ProcessInReadReportCfgCmd_0:
   \   0000E4   7900         MOV       R1,#0x0
   \   0000E6   02....       LJMP      ??bdb_ProcessInReadReportCfgCmd_6 & 0xFFFF
    714            }
    715          
    716            readReportCfgRspCmd->numAttr=0;
   \                     ??bdb_ProcessInReadReportCfgCmd_5:
   \   0000E9   85..82       MOV       DPL,?V2
   \   0000EC   85..83       MOV       DPH,?V3
   \   0000EF   E4           CLR       A
   \   0000F0   F0           MOVX      @DPTR,A
    717            for ( i = 0; i < readReportCfgCmd->numAttr; i++ )
   \   0000F1   7E00         MOV       R6,#0x0
   \   0000F3   8044         SJMP      ??bdb_ProcessInReadReportCfgCmd_7
    718            {
    719              reportRspRec = &(readReportCfgRspCmd->attrList[i]);
    720              status = ZCL_STATUS_SUCCESS;  // assume success for this rsp record
    721              
    722              uint8 atrrCfgRecordIndex =  bdb_repAttrCfgRecordsArraySearch( pInMsg->endPoint, pInMsg->clusterId, readReportCfgCmd->attrList[i].attrID );
    723              uint8 status2 = zclFindAttrRec( pInMsg->endPoint, pInMsg->clusterId, readReportCfgCmd->attrList[i].attrID, &attrRec );
    724              if( atrrCfgRecordIndex != BDBREPORTING_INVALIDINDEX && status2 )
    725              {
    726                if ( attrRec.attr.accessControl & ACCESS_REPORTABLE )
    727                {
    728                  // Get the Reporting Configuration
    729                  reportRspRec->dataType = attrRec.attr.dataType;
    730                  reportRspRec->minReportInt = bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].minReportInt;
    731                  reportRspRec->maxReportInt = bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].maxReportInt;
    732                  reportRspRec->reportableChange = bdb_reportingAttrCfgRecordsArray[atrrCfgRecordIndex].reportableChange;
    733                }
    734                else
    735                {
    736                  // Attribute not in the Mandatory Reportable Attribute list
    737                  status = ZCL_STATUS_UNREPORTABLE_ATTRIBUTE;
    738                }      
    739              }
    740              else
    741              {
    742                // Attribute not found
    743                status = ZCL_STATUS_UNSUPPORTED_ATTRIBUTE;
   \                     ??bdb_ProcessInReadReportCfgCmd_8:
   \   0000F5   7F86         MOV       R7,#-0x7a
    744              }
    745              reportRspRec->status = status;
   \                     ??bdb_ProcessInReadReportCfgCmd_9:
   \   0000F7   EF           MOV       A,R7
   \   0000F8   85..82       MOV       DPL,?V0
   \   0000FB   85..83       MOV       DPH,?V1
   \   0000FE   F0           MOVX      @DPTR,A
    746              reportRspRec->direction = readReportCfgCmd->attrList[i].direction;
   \   0000FF   85..82       MOV       DPL,?XSP + 0
   \   000102   85..83       MOV       DPH,?XSP + 1
   \   000105   E0           MOVX      A,@DPTR
   \   000106   F8           MOV       R0,A
   \   000107   A3           INC       DPTR
   \   000108   E0           MOVX      A,@DPTR
   \   000109   F583         MOV       DPH,A
   \   00010B   8882         MOV       DPL,R0
   \   00010D   A3           INC       DPTR
   \   00010E   E0           MOVX      A,@DPTR
   \   00010F   85..82       MOV       DPL,?V0
   \   000112   85..83       MOV       DPH,?V1
   \   000115   A3           INC       DPTR
   \   000116   F0           MOVX      @DPTR,A
    747              reportRspRec->attrID = readReportCfgCmd->attrList[i].attrID;
   \   000117   85..82       MOV       DPL,?V8
   \   00011A   85..83       MOV       DPH,?V9
   \   00011D   E0           MOVX      A,@DPTR
   \   00011E   F8           MOV       R0,A
   \   00011F   A3           INC       DPTR
   \   000120   E0           MOVX      A,@DPTR
   \   000121   F9           MOV       R1,A
   \   000122   85..82       MOV       DPL,?V0
   \   000125   85..83       MOV       DPH,?V1
   \   000128   A3           INC       DPTR
   \   000129   A3           INC       DPTR
   \   00012A   E8           MOV       A,R0
   \   00012B   F0           MOVX      @DPTR,A
   \   00012C   A3           INC       DPTR
   \   00012D   E9           MOV       A,R1
   \   00012E   F0           MOVX      @DPTR,A
    748              readReportCfgRspCmd->numAttr++;
   \   00012F   85..82       MOV       DPL,?V2
   \   000132   85..83       MOV       DPH,?V3
   \   000135   E0           MOVX      A,@DPTR
   \   000136   04           INC       A
   \   000137   F0           MOVX      @DPTR,A
   \   000138   0E           INC       R6
   \                     ??bdb_ProcessInReadReportCfgCmd_7:
   \   000139   E5..         MOV       A,?V4
   \   00013B   2416         ADD       A,#0x16
   \   00013D   F582         MOV       DPL,A
   \   00013F   E4           CLR       A
   \   000140   35..         ADDC      A,?V5
   \   000142   F583         MOV       DPH,A
   \   000144   E0           MOVX      A,@DPTR
   \   000145   F9           MOV       R1,A
   \   000146   E5..         MOV       A,?V4
   \   000148   2408         ADD       A,#0x8
   \   00014A   F5..         MOV       ?V12,A
   \   00014C   E4           CLR       A
   \   00014D   35..         ADDC      A,?V5
   \   00014F   F5..         MOV       ?V13,A
   \   000151   85..82       MOV       DPL,?V12
   \   000154   F583         MOV       DPH,A
   \   000156   E0           MOVX      A,@DPTR
   \   000157   FA           MOV       R2,A
   \   000158   A3           INC       DPTR
   \   000159   E0           MOVX      A,@DPTR
   \   00015A   FB           MOV       R3,A
   \   00015B   85..82       MOV       DPL,?V14
   \   00015E   85..83       MOV       DPH,?V15
   \   000161   E0           MOVX      A,@DPTR
   \   000162   F8           MOV       R0,A
   \   000163   EE           MOV       A,R6
   \   000164   C3           CLR       C
   \   000165   98           SUBB      A,R0
   \   000166   4003         JC        $+5
   \   000168   02....       LJMP      ??bdb_ProcessInReadReportCfgCmd_10 & 0xFFFF
   \   00016B   EE           MOV       A,R6
   \   00016C   FC           MOV       R4,A
   \   00016D   75F00D       MOV       B,#0xd
   \   000170   A4           MUL       AB
   \   000171   F5..         MOV       ?V0,A
   \   000173   E5F0         MOV       A,B
   \   000175   F5..         MOV       ?V1,A
   \   000177   E5..         MOV       A,?V2
   \   000179   25..         ADD       A,?V0
   \   00017B   F582         MOV       DPL,A
   \   00017D   E5..         MOV       A,?V3
   \   00017F   35..         ADDC      A,?V1
   \   000181   F583         MOV       DPH,A
   \   000183   A3           INC       DPTR
   \   000184   8582..       MOV       ?V0,DPL
   \   000187   8583..       MOV       ?V1,DPH
   \   00018A   7F00         MOV       R7,#0x0
   \   00018C   EC           MOV       A,R4
   \   00018D   75F003       MOV       B,#0x3
   \   000190   A4           MUL       AB
   \   000191   FC           MOV       R4,A
   \   000192   ADF0         MOV       R5,B
   \   000194   E5..         MOV       A,?V14
   \   000196   2C           ADD       A,R4
   \   000197   FC           MOV       R4,A
   \   000198   E5..         MOV       A,?V15
   \   00019A   3D           ADDC      A,R5
   \   00019B   FD           MOV       R5,A
   \   00019C   85..82       MOV       DPL,?XSP + 0
   \   00019F   85..83       MOV       DPH,?XSP + 1
   \   0001A2   EC           MOV       A,R4
   \   0001A3   F0           MOVX      @DPTR,A
   \   0001A4   A3           INC       DPTR
   \   0001A5   ED           MOV       A,R5
   \   0001A6   F0           MOVX      @DPTR,A
   \   0001A7   85..82       MOV       DPL,?XSP + 0
   \   0001AA   85..83       MOV       DPH,?XSP + 1
   \   0001AD   E0           MOVX      A,@DPTR
   \   0001AE   2402         ADD       A,#0x2
   \   0001B0   F5..         MOV       ?V8,A
   \   0001B2   A3           INC       DPTR
   \   0001B3   E0           MOVX      A,@DPTR
   \   0001B4   3400         ADDC      A,#0x0
   \   0001B6   F5..         MOV       ?V9,A
   \   0001B8                ; Setup parameters for call to function bdb_repAttrCfgRecordsArraySearch
   \   0001B8   85..82       MOV       DPL,?V8
   \   0001BB   F583         MOV       DPH,A
   \   0001BD   E0           MOVX      A,@DPTR
   \   0001BE   FC           MOV       R4,A
   \   0001BF   A3           INC       DPTR
   \   0001C0   E0           MOVX      A,@DPTR
   \   0001C1   FD           MOV       R5,A
   \   0001C2   12....       LCALL     `??bdb_repAttrCfgRecordsArraySearch::?relay`; Banked call to: bdb_repAttrCfgRecordsArraySearch
   \   0001C5   E9           MOV       A,R1
   \   0001C6   F5..         MOV       ?V6,A
   \   0001C8                ; Setup parameters for call to function zclFindAttrRec
   \   0001C8   7402         MOV       A,#0x2
   \   0001CA   12....       LCALL     ?XSTACK_DISP100_8
   \   0001CD   88..         MOV       ?V10,R0
   \   0001CF   89..         MOV       ?V11,R1
   \   0001D1   78..         MOV       R0,#?V10
   \   0001D3   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0001D6   85..82       MOV       DPL,?V8
   \   0001D9   85..83       MOV       DPH,?V9
   \   0001DC   E0           MOVX      A,@DPTR
   \   0001DD   FC           MOV       R4,A
   \   0001DE   A3           INC       DPTR
   \   0001DF   E0           MOVX      A,@DPTR
   \   0001E0   FD           MOV       R5,A
   \   0001E1   85..82       MOV       DPL,?V12
   \   0001E4   85..83       MOV       DPH,?V13
   \   0001E7   E0           MOVX      A,@DPTR
   \   0001E8   FA           MOV       R2,A
   \   0001E9   A3           INC       DPTR
   \   0001EA   E0           MOVX      A,@DPTR
   \   0001EB   FB           MOV       R3,A
   \   0001EC   E5..         MOV       A,?V4
   \   0001EE   2416         ADD       A,#0x16
   \   0001F0   F582         MOV       DPL,A
   \   0001F2   E4           CLR       A
   \   0001F3   35..         ADDC      A,?V5
   \   0001F5   F583         MOV       DPH,A
   \   0001F7   E0           MOVX      A,@DPTR
   \   0001F8   F9           MOV       R1,A
   \   0001F9   12....       LCALL     `??zclFindAttrRec::?relay`; Banked call to: zclFindAttrRec
   \   0001FC   7402         MOV       A,#0x2
   \   0001FE   12....       LCALL     ?DEALLOC_XSTACK8
   \   000201   E9           MOV       A,R1
   \   000202   F8           MOV       R0,A
   \   000203   74FF         MOV       A,#-0x1
   \   000205   65..         XRL       A,?V6
   \   000207   7003         JNZ       $+5
   \   000209   02....       LJMP      ??bdb_ProcessInReadReportCfgCmd_8 & 0xFFFF
   \   00020C   E9           MOV       A,R1
   \   00020D   7003         JNZ       $+5
   \   00020F   02....       LJMP      ??bdb_ProcessInReadReportCfgCmd_8 & 0xFFFF
   \   000212   7407         MOV       A,#0x7
   \   000214   12....       LCALL     ?XSTACK_DISP0_8
   \   000217   E0           MOVX      A,@DPTR
   \   000218   A2E2         MOV       C,0xE0 /* A   */.2
   \   00021A   4003         JC        $+5
   \   00021C   02....       LJMP      ??bdb_ProcessInReadReportCfgCmd_11 & 0xFFFF
   \   00021F   7406         MOV       A,#0x6
   \   000221   12....       LCALL     ?XSTACK_DISP0_8
   \   000224   E0           MOVX      A,@DPTR
   \   000225   85..82       MOV       DPL,?V0
   \   000228   85..83       MOV       DPH,?V1
   \   00022B   A3           INC       DPTR
   \   00022C   A3           INC       DPTR
   \   00022D   A3           INC       DPTR
   \   00022E   A3           INC       DPTR
   \   00022F   F0           MOVX      @DPTR,A
   \   000230   E5..         MOV       A,?V6
   \   000232   75F015       MOV       B,#0x15
   \   000235   A4           MUL       AB
   \   000236   F8           MOV       R0,A
   \   000237   A9F0         MOV       R1,B
   \   000239   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00023C   E0           MOVX      A,@DPTR
   \   00023D   28           ADD       A,R0
   \   00023E   FA           MOV       R2,A
   \   00023F   A3           INC       DPTR
   \   000240   E0           MOVX      A,@DPTR
   \   000241   39           ADDC      A,R1
   \   000242   8A82         MOV       DPL,R2
   \   000244   F583         MOV       DPH,A
   \   000246   A3           INC       DPTR
   \   000247   A3           INC       DPTR
   \   000248   A3           INC       DPTR
   \   000249   A3           INC       DPTR
   \   00024A   A3           INC       DPTR
   \   00024B   E0           MOVX      A,@DPTR
   \   00024C   FA           MOV       R2,A
   \   00024D   A3           INC       DPTR
   \   00024E   E0           MOVX      A,@DPTR
   \   00024F   FB           MOV       R3,A
   \   000250   85..82       MOV       DPL,?V0
   \   000253   85..83       MOV       DPH,?V1
   \   000256   A3           INC       DPTR
   \   000257   A3           INC       DPTR
   \   000258   A3           INC       DPTR
   \   000259   A3           INC       DPTR
   \   00025A   A3           INC       DPTR
   \   00025B   EA           MOV       A,R2
   \   00025C   F0           MOVX      @DPTR,A
   \   00025D   A3           INC       DPTR
   \   00025E   EB           MOV       A,R3
   \   00025F   F0           MOVX      @DPTR,A
   \   000260   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000263   E0           MOVX      A,@DPTR
   \   000264   28           ADD       A,R0
   \   000265   FA           MOV       R2,A
   \   000266   A3           INC       DPTR
   \   000267   E0           MOVX      A,@DPTR
   \   000268   39           ADDC      A,R1
   \   000269   8A82         MOV       DPL,R2
   \   00026B   F583         MOV       DPH,A
   \   00026D   A3           INC       DPTR
   \   00026E   A3           INC       DPTR
   \   00026F   A3           INC       DPTR
   \   000270   A3           INC       DPTR
   \   000271   A3           INC       DPTR
   \   000272   A3           INC       DPTR
   \   000273   A3           INC       DPTR
   \   000274   E0           MOVX      A,@DPTR
   \   000275   FA           MOV       R2,A
   \   000276   A3           INC       DPTR
   \   000277   E0           MOVX      A,@DPTR
   \   000278   FB           MOV       R3,A
   \   000279   85..82       MOV       DPL,?V0
   \   00027C   85..83       MOV       DPH,?V1
   \   00027F   A3           INC       DPTR
   \   000280   A3           INC       DPTR
   \   000281   A3           INC       DPTR
   \   000282   A3           INC       DPTR
   \   000283   A3           INC       DPTR
   \   000284   A3           INC       DPTR
   \   000285   A3           INC       DPTR
   \   000286   EA           MOV       A,R2
   \   000287   F0           MOVX      @DPTR,A
   \   000288   A3           INC       DPTR
   \   000289   EB           MOV       A,R3
   \   00028A   F0           MOVX      @DPTR,A
   \   00028B   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00028E   E0           MOVX      A,@DPTR
   \   00028F   28           ADD       A,R0
   \   000290   F8           MOV       R0,A
   \   000291   A3           INC       DPTR
   \   000292   E0           MOVX      A,@DPTR
   \   000293   39           ADDC      A,R1
   \   000294   F9           MOV       R1,A
   \   000295   E8           MOV       A,R0
   \   000296   240D         ADD       A,#0xd
   \   000298   F8           MOV       R0,A
   \   000299   5001         JNC       ??bdb_ProcessInReadReportCfgCmd_12
   \   00029B   09           INC       R1
   \                     ??bdb_ProcessInReadReportCfgCmd_12:
   \   00029C   E5..         MOV       A,?V0
   \   00029E   240B         ADD       A,#0xb
   \   0002A0   F582         MOV       DPL,A
   \   0002A2   E4           CLR       A
   \   0002A3   35..         ADDC      A,?V1
   \   0002A5   F583         MOV       DPH,A
   \   0002A7   E8           MOV       A,R0
   \   0002A8   F0           MOVX      @DPTR,A
   \   0002A9   A3           INC       DPTR
   \   0002AA   E9           MOV       A,R1
   \   0002AB   F0           MOVX      @DPTR,A
   \   0002AC   02....       LJMP      ??bdb_ProcessInReadReportCfgCmd_9 & 0xFFFF
   \                     ??bdb_ProcessInReadReportCfgCmd_11:
   \   0002AF   7F8C         MOV       R7,#-0x74
   \   0002B1   02....       LJMP      ??bdb_ProcessInReadReportCfgCmd_9 & 0xFFFF
    749            }
    750            
    751            // Send the response back
    752            zcl_SendReadReportCfgRspCmd( pInMsg->endPoint, &(pInMsg->srcAddr),
    753                                         pInMsg->clusterId, readReportCfgRspCmd, ZCL_FRAME_SERVER_CLIENT_DIR,
    754                                         true, pInMsg->zclHdr.transSeqNum );
   \                     ??bdb_ProcessInReadReportCfgCmd_10:
   \   0002B4                ; Setup parameters for call to function zcl_SendReadReportCfgRspCmd
   \   0002B4   85..82       MOV       DPL,?V4
   \   0002B7   85..83       MOV       DPH,?V5
   \   0002BA   A3           INC       DPTR
   \   0002BB   A3           INC       DPTR
   \   0002BC   A3           INC       DPTR
   \   0002BD   A3           INC       DPTR
   \   0002BE   A3           INC       DPTR
   \   0002BF   A3           INC       DPTR
   \   0002C0   E0           MOVX      A,@DPTR
   \   0002C1   F5..         MOV       ?V0,A
   \   0002C3   78..         MOV       R0,#?V0
   \   0002C5   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   0002C8   75..01       MOV       ?V0,#0x1
   \   0002CB   78..         MOV       R0,#?V0
   \   0002CD   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   0002D0   78..         MOV       R0,#?V0
   \   0002D2   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   0002D5   78..         MOV       R0,#?V2
   \   0002D7   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0002DA   EA           MOV       A,R2
   \   0002DB   FC           MOV       R4,A
   \   0002DC   EB           MOV       A,R3
   \   0002DD   FD           MOV       R5,A
   \   0002DE   E5..         MOV       A,?V4
   \   0002E0   240A         ADD       A,#0xa
   \   0002E2   FA           MOV       R2,A
   \   0002E3   E4           CLR       A
   \   0002E4   35..         ADDC      A,?V5
   \   0002E6   FB           MOV       R3,A
   \   0002E7   12....       LCALL     `??zcl_SendReadReportCfgRspCmd::?relay`; Banked call to: zcl_SendReadReportCfgRspCmd
   \   0002EA   7405         MOV       A,#0x5
   \   0002EC   12....       LCALL     ?DEALLOC_XSTACK8
    755            osal_mem_free( readReportCfgRspCmd );
   \   0002EF                ; Setup parameters for call to function osal_mem_free
   \   0002EF   AA..         MOV       R2,?V2
   \   0002F1   AB..         MOV       R3,?V3
   \   0002F3   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
    756            
    757            bdb_repAttrCfgRecordsArrayFreeAll( );//Free reporting cfg array from memory, its saved in NV
   \   0002F6                ; Setup parameters for call to function bdb_repAttrCfgRecordsArrayFreeAll
   \   0002F6   12....       LCALL     `??bdb_repAttrCfgRecordsArrayFreeAll::?relay`; Banked call to: bdb_repAttrCfgRecordsArrayFreeAll
    758          
    759            return ( TRUE );
   \   0002F9   7901         MOV       R1,#0x1
   \                     ??bdb_ProcessInReadReportCfgCmd_6:
   \   0002FB   740A         MOV       A,#0xa
   \   0002FD   12....       LCALL     ?DEALLOC_XSTACK8
   \   000300   7F10         MOV       R7,#0x10
   \   000302   02....       LJMP      ?BANKED_LEAVE_XDATA
    760          }
    761          
    762          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    763          void bdb_RepUpdateMarkBindings( void )
   \                     bdb_RepUpdateMarkBindings:
    764          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000   74F0         MOV       A,#-0x10
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
    765            uint8 numMarkedEntries = 0;
   \   000005   75..00       MOV       ?V4,#0x0
    766            uint8 i;
    767            for(i=0; i<bdb_reportingClusterEndpointArrayCount; i++)
   \   000008   75..00       MOV       ?V5,#0x0
   \   00000B   801F         SJMP      ??bdb_RepUpdateMarkBindings_0
    768            {
    769              BindingEntry_t* bEntry = bindFind( bdb_reportingClusterEndpointArray[i].endpoint,bdb_reportingClusterEndpointArray[i].cluster,0 ); 
    770              if(bEntry !=  NULL)
    771              { //Found a binding with the given cluster and endpoint, mark the Endpoint-cluster entry (this activates reporting)
    772                if( FLAGS_CHECKFLAG( bdb_reportingClusterEndpointArray[i].flags, BDBREPORTING_HASBINDING_FLAG_MASK ) == BDBREPORTING_FALSE )
    773                {
    774                  bdb_RepMarkHasBindingInEndpointClusterArray( bdb_reportingClusterEndpointArray[i].endpoint, bdb_reportingClusterEndpointArray[i].cluster, BDBREPORTING_FALSE, BDBREPORTING_IGNORE );
    775                }
    776                numMarkedEntries++;
    777              }
    778              else
    779              {
    780                if( FLAGS_CHECKFLAG( bdb_reportingClusterEndpointArray[i].flags, BDBREPORTING_HASBINDING_FLAG_MASK) == BDBREPORTING_TRUE )
   \                     ??bdb_RepUpdateMarkBindings_1:
   \   00000D   E0           MOVX      A,@DPTR
   \   00000E   A2E0         MOV       C,0xE0 /* A   */.0
   \   000010   5018         JNC       ??bdb_RepUpdateMarkBindings_2
    781                {
    782                  bdb_RepMarkHasBindingInEndpointClusterArray( bdb_reportingClusterEndpointArray[i].endpoint, bdb_reportingClusterEndpointArray[i].cluster, BDBREPORTING_TRUE, BDBREPORTING_IGNORE );
   \   000012                ; Setup parameters for call to function bdb_RepMarkHasBindingInEndpointClusterArray
   \   000012   7DFF         MOV       R5,#-0x1
   \   000014   7C01         MOV       R4,#0x1
   \   000016   85..82       MOV       DPL,?V0
   \   000019   85..83       MOV       DPH,?V1
   \   00001C   E0           MOVX      A,@DPTR
   \   00001D   FA           MOV       R2,A
   \   00001E   A3           INC       DPTR
   \   00001F   E0           MOVX      A,@DPTR
   \   000020   FB           MOV       R3,A
   \   000021   8E82         MOV       DPL,R6
   \   000023   8F83         MOV       DPH,R7
   \   000025   E0           MOVX      A,@DPTR
   \   000026   F9           MOV       R1,A
   \   000027   12....       LCALL     `??bdb_RepMarkHasBindingInEndpointClusterArray::`; Banked call to: bdb_RepMarkHasBindingInEndpointClusterArray
    783                }
    784              }
   \                     ??bdb_RepUpdateMarkBindings_2:
   \   00002A   05..         INC       ?V5
   \                     ??bdb_RepUpdateMarkBindings_0:
   \   00002C   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   00002F   E0           MOVX      A,@DPTR
   \   000030   F8           MOV       R0,A
   \   000031   E5..         MOV       A,?V5
   \   000033   C3           CLR       C
   \   000034   98           SUBB      A,R0
   \   000035   5068         JNC       ??bdb_RepUpdateMarkBindings_3
   \   000037   E5..         MOV       A,?V5
   \   000039   75F00D       MOV       B,#0xd
   \   00003C   A4           MUL       AB
   \   00003D   F8           MOV       R0,A
   \   00003E   A9F0         MOV       R1,B
   \   000040   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   000042   28           ADD       A,R0
   \   000043   F5..         MOV       ?V2,A
   \   000045   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   000047   39           ADDC      A,R1
   \   000048   F5..         MOV       ?V3,A
   \   00004A   85..82       MOV       DPL,?V2
   \   00004D   F583         MOV       DPH,A
   \   00004F   A3           INC       DPTR
   \   000050   AE82         MOV       R6,DPL
   \   000052   AF83         MOV       R7,DPH
   \   000054   E5..         MOV       A,?V2
   \   000056   2402         ADD       A,#0x2
   \   000058   F5..         MOV       ?V0,A
   \   00005A   E4           CLR       A
   \   00005B   35..         ADDC      A,?V3
   \   00005D   F5..         MOV       ?V1,A
   \   00005F                ; Setup parameters for call to function bindFind
   \   00005F   7C00         MOV       R4,#0x0
   \   000061   85..82       MOV       DPL,?V0
   \   000064   F583         MOV       DPH,A
   \   000066   E0           MOVX      A,@DPTR
   \   000067   FA           MOV       R2,A
   \   000068   A3           INC       DPTR
   \   000069   E0           MOVX      A,@DPTR
   \   00006A   FB           MOV       R3,A
   \   00006B   8E82         MOV       DPL,R6
   \   00006D   8F83         MOV       DPH,R7
   \   00006F   E0           MOVX      A,@DPTR
   \   000070   F9           MOV       R1,A
   \   000071   12....       LCALL     `??bindFind::?relay`; Banked call to: bindFind
   \   000074   EA           MOV       A,R2
   \   000075   4B           ORL       A,R3
   \   000076   85..82       MOV       DPL,?V2
   \   000079   85..83       MOV       DPH,?V3
   \   00007C   608F         JZ        ??bdb_RepUpdateMarkBindings_1
   \   00007E   E0           MOVX      A,@DPTR
   \   00007F   A2E0         MOV       C,0xE0 /* A   */.0
   \   000081   4018         JC        ??bdb_RepUpdateMarkBindings_4
   \   000083                ; Setup parameters for call to function bdb_RepMarkHasBindingInEndpointClusterArray
   \   000083   7DFF         MOV       R5,#-0x1
   \   000085   7C00         MOV       R4,#0x0
   \   000087   85..82       MOV       DPL,?V0
   \   00008A   85..83       MOV       DPH,?V1
   \   00008D   E0           MOVX      A,@DPTR
   \   00008E   FA           MOV       R2,A
   \   00008F   A3           INC       DPTR
   \   000090   E0           MOVX      A,@DPTR
   \   000091   FB           MOV       R3,A
   \   000092   8E82         MOV       DPL,R6
   \   000094   8F83         MOV       DPH,R7
   \   000096   E0           MOVX      A,@DPTR
   \   000097   F9           MOV       R1,A
   \   000098   12....       LCALL     `??bdb_RepMarkHasBindingInEndpointClusterArray::`; Banked call to: bdb_RepMarkHasBindingInEndpointClusterArray
   \                     ??bdb_RepUpdateMarkBindings_4:
   \   00009B   05..         INC       ?V4
   \   00009D   808B         SJMP      ??bdb_RepUpdateMarkBindings_2
    785            }
    786            
    787            //Checking is bdb_reporting timer is active
    788            if( osal_get_timeoutEx( bdb_TaskID, BDB_REPORT_TIMEOUT) > 0 )
   \                     ??bdb_RepUpdateMarkBindings_3:
   \   00009F                ; Setup parameters for call to function osal_get_timeoutEx
   \   00009F   7A80         MOV       R2,#-0x80
   \   0000A1   7B00         MOV       R3,#0x0
   \   0000A3   90....       MOV       DPTR,#bdb_TaskID
   \   0000A6   E0           MOVX      A,@DPTR
   \   0000A7   F9           MOV       R1,A
   \   0000A8   12....       LCALL     `??osal_get_timeoutEx::?relay`; Banked call to: osal_get_timeoutEx
   \   0000AB   EA           MOV       A,R2
   \   0000AC   4B           ORL       A,R3
   \   0000AD   4C           ORL       A,R4
   \   0000AE   4D           ORL       A,R5
   \   0000AF   6012         JZ        ??bdb_RepUpdateMarkBindings_5
    789            {
    790              //If timer is active
    791              if( numMarkedEntries == 0 ) //No entries
   \   0000B1   E5..         MOV       A,?V4
   \   0000B3   7015         JNZ       ??bdb_RepUpdateMarkBindings_6
    792              {
    793                //Stop Timer
    794                osal_stop_timerEx( bdb_TaskID, BDB_REPORT_TIMEOUT );
   \   0000B5                ; Setup parameters for call to function osal_stop_timerEx
   \   0000B5   7A80         MOV       R2,#-0x80
   \   0000B7   7B00         MOV       R3,#0x0
   \   0000B9   90....       MOV       DPTR,#bdb_TaskID
   \   0000BC   E0           MOVX      A,@DPTR
   \   0000BD   F9           MOV       R1,A
   \   0000BE   12....       LCALL     `??osal_stop_timerEx::?relay`; Banked call to: osal_stop_timerEx
   \   0000C1   8007         SJMP      ??bdb_RepUpdateMarkBindings_6
    795              }
    796            }
    797            else
    798            {
    799              if( numMarkedEntries > 0 )
   \                     ??bdb_RepUpdateMarkBindings_5:
   \   0000C3   E5..         MOV       A,?V4
   \   0000C5   6003         JZ        ??bdb_RepUpdateMarkBindings_6
    800              {
    801                //Start timer
    802                bdb_RepStartReporting( );      
   \   0000C7                ; Setup parameters for call to function bdb_RepStartReporting
   \   0000C7   12....       LCALL     `??bdb_RepStartReporting::?relay`; Banked call to: bdb_RepStartReporting
    803              }
    804            }
    805          }
   \                     ??bdb_RepUpdateMarkBindings_6:
   \   0000CA   7F08         MOV       R7,#0x8
   \   0000CC   02....       LJMP      ?BANKED_LEAVE_XDATA
    806          
    807          /*********************************************************************
    808           * LOCAL FUNCTIONS DEFINITIONS
    809           */
    810          
    811          /*
    812          * Begin: Single linked list for attributes in a cluster-endpoint live entry methods 
    813          */
    814          
    815          /*********************************************************************
    816           * @fn      bdb_InitReportAttrLiveValues
    817           *
    818           * @brief   Set the bdbReportAttrLive_t fields to initiation values
    819           *
    820           * @param   item - Data to initiate
    821           *
    822           * @return 
    823           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    824          static void bdb_InitReportAttrLiveValues( bdbReportAttrLive_t* item )
   \                     bdb_InitReportAttrLiveValues:
    825          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    826            uint8 i;
    827            for( i=0; i<BDBREPORTING_MAX_ANALOG_ATTR_SIZE; i++ )
   \   000004   7C00         MOV       R4,#0x0
   \   000006   801C         SJMP      ??bdb_InitReportAttrLiveValues_0
    828            {
    829              item->lastValueReported[i] = 0x00;
   \                     ??bdb_InitReportAttrLiveValues_1:
   \   000008   EC           MOV       A,R4
   \   000009   F8           MOV       R0,A
   \   00000A   EA           MOV       A,R2
   \   00000B   28           ADD       A,R0
   \   00000C   F8           MOV       R0,A
   \   00000D   E4           CLR       A
   \   00000E   3B           ADDC      A,R3
   \   00000F   F9           MOV       R1,A
   \   000010   8882         MOV       DPL,R0
   \   000012   F583         MOV       DPH,A
   \   000014   A3           INC       DPTR
   \   000015   A3           INC       DPTR
   \   000016   E4           CLR       A
   \   000017   F0           MOVX      @DPTR,A
    830              item->reportableChange[i] = 0x00;
   \   000018   8882         MOV       DPL,R0
   \   00001A   8983         MOV       DPH,R1
   \   00001C   A3           INC       DPTR
   \   00001D   A3           INC       DPTR
   \   00001E   A3           INC       DPTR
   \   00001F   A3           INC       DPTR
   \   000020   A3           INC       DPTR
   \   000021   A3           INC       DPTR
   \   000022   F0           MOVX      @DPTR,A
    831            }
   \   000023   0C           INC       R4
   \                     ??bdb_InitReportAttrLiveValues_0:
   \   000024   EC           MOV       A,R4
   \   000025   C3           CLR       C
   \   000026   9404         SUBB      A,#0x4
   \   000028   40DE         JC        ??bdb_InitReportAttrLiveValues_1
    832            item->attrID = 0x0000;
   \   00002A   8A82         MOV       DPL,R2
   \   00002C   8B83         MOV       DPH,R3
   \   00002E   E4           CLR       A
   \   00002F   F0           MOVX      @DPTR,A
   \   000030   A3           INC       DPTR
   \   000031   F0           MOVX      @DPTR,A
    833          
    834          }
   \   000032   D083         POP       DPH
   \   000034   D082         POP       DPL
   \   000036   02....       LJMP      ?BRET
    835          
    836          /*********************************************************************
    837           * @fn      bdb_linkedListAttrInit
    838           *
    839           * @brief   Initates a linked list for the attrs in the cluster-endpoint entry
    840           *
    841           * @param   list - Pointer to linked list
    842           *
    843           * @return 
    844           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    845          static void bdb_linkedListAttrInit( bdbAttrLinkedListAttr_t *list )
   \                     bdb_linkedListAttrInit:
    846          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    847            list->head = NULL;
   \   000004   8A82         MOV       DPL,R2
   \   000006   8B83         MOV       DPH,R3
   \   000008   A3           INC       DPTR
   \   000009   E4           CLR       A
   \   00000A   F0           MOVX      @DPTR,A
   \   00000B   A3           INC       DPTR
   \   00000C   F0           MOVX      @DPTR,A
    848            list->numItems = 0;
   \   00000D   8A82         MOV       DPL,R2
   \   00000F   8B83         MOV       DPH,R3
   \   000011   F0           MOVX      @DPTR,A
    849          }
   \   000012   D083         POP       DPH
   \   000014   D082         POP       DPL
   \   000016   02....       LJMP      ?BRET
    850          
    851          /*********************************************************************
    852           * @fn      bdb_linkedListAttrAdd
    853           *
    854           * @brief   Initates a linked list for the attrs in the cluster-endpoint entry
    855           *
    856           * @param   list - Pointer to linked list
    857           *
    858           * @return  Status code (BDBREPORTING_SUCCESS or BDBREPORTING_ERROR)
    859           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    860          static uint8 bdb_linkedListAttrAdd( bdbAttrLinkedListAttr_t *list, bdbReportAttrLive_t* data )
   \                     bdb_linkedListAttrAdd:
    861          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000   74F4         MOV       A,#-0xc
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV       ?V0,R2
   \   000007   8B..         MOV       ?V1,R3
   \   000009   EC           MOV       A,R4
   \   00000A   FE           MOV       R6,A
   \   00000B   ED           MOV       A,R5
   \   00000C   FF           MOV       R7,A
    862            bdbLinkedListAttrItem_t* newItem = (bdbLinkedListAttrItem_t *)osal_mem_alloc( sizeof(bdbLinkedListAttrItem_t) );
   \   00000D                ; Setup parameters for call to function osal_mem_alloc
   \   00000D   7A04         MOV       R2,#0x4
   \   00000F   7B00         MOV       R3,#0x0
   \   000011   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   000014   8A..         MOV       ?V2,R2
   \   000016   8B..         MOV       ?V3,R3
   \   000018   A8..         MOV       R0,?V2
   \   00001A   A9..         MOV       R1,?V3
    863            if( newItem == NULL )
   \   00001C   EA           MOV       A,R2
   \   00001D   49           ORL       A,R1
   \   00001E   7004         JNZ       ??bdb_linkedListAttrAdd_0
    864            {
    865              return BDBREPORTING_ERROR;
   \   000020   7901         MOV       R1,#0x1
   \   000022   8038         SJMP      ??bdb_linkedListAttrAdd_1
    866            }
    867            newItem->data = data;
   \                     ??bdb_linkedListAttrAdd_0:
   \   000024   8A82         MOV       DPL,R2
   \   000026   8B83         MOV       DPH,R3
   \   000028   EE           MOV       A,R6
   \   000029   F0           MOVX      @DPTR,A
   \   00002A   A3           INC       DPTR
   \   00002B   EF           MOV       A,R7
   \   00002C   F0           MOVX      @DPTR,A
    868            newItem->next = list->head;
   \   00002D   85..82       MOV       DPL,?V0
   \   000030   85..83       MOV       DPH,?V1
   \   000033   A3           INC       DPTR
   \   000034   AA82         MOV       R2,DPL
   \   000036   AB83         MOV       R3,DPH
   \   000038   E0           MOVX      A,@DPTR
   \   000039   FC           MOV       R4,A
   \   00003A   A3           INC       DPTR
   \   00003B   E0           MOVX      A,@DPTR
   \   00003C   FD           MOV       R5,A
   \   00003D   8882         MOV       DPL,R0
   \   00003F   8983         MOV       DPH,R1
   \   000041   A3           INC       DPTR
   \   000042   A3           INC       DPTR
   \   000043   EC           MOV       A,R4
   \   000044   F0           MOVX      @DPTR,A
   \   000045   A3           INC       DPTR
   \   000046   ED           MOV       A,R5
   \   000047   F0           MOVX      @DPTR,A
    869            list->head = newItem;
   \   000048   8A82         MOV       DPL,R2
   \   00004A   8B83         MOV       DPH,R3
   \   00004C   E8           MOV       A,R0
   \   00004D   F0           MOVX      @DPTR,A
   \   00004E   A3           INC       DPTR
   \   00004F   E9           MOV       A,R1
   \   000050   F0           MOVX      @DPTR,A
    870            list->numItems++;
   \   000051   85..82       MOV       DPL,?V0
   \   000054   85..83       MOV       DPH,?V1
   \   000057   E0           MOVX      A,@DPTR
   \   000058   04           INC       A
   \   000059   F0           MOVX      @DPTR,A
    871            return BDBREPORTING_SUCCESS;
   \   00005A   7900         MOV       R1,#0x0
   \                     ??bdb_linkedListAttrAdd_1:
   \   00005C   7F04         MOV       R7,#0x4
   \   00005E   02....       LJMP      ?BANKED_LEAVE_XDATA
    872          }
    873          
    874          /*********************************************************************
    875           * @fn      bdb_linkedListAttrSearch
    876           *
    877           * @brief   Travers the linked list and search for a node (bdbReportAttrLive_t 
    878           *          data) with a specific attrID
    879           *
    880           * @param   list - Pointer to linked list
    881           * @param   searchdata - data to search the list (has a specific attrID)
    882           *
    883           * @return  A pointer to the node in the list has the searched data, NULL if 
    884           *          not found
    885           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    886          static bdbLinkedListAttrItem_t* bdb_linkedListAttrSearch( bdbAttrLinkedListAttr_t *list, bdbReportAttrLive_t* searchdata )
   \                     bdb_linkedListAttrSearch:
    887          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    888            bdbLinkedListAttrItem_t* cur = list->head;
   \   000005   8A82         MOV       DPL,R2
   \   000007   8B83         MOV       DPH,R3
   \   000009   8005         SJMP      ??bdb_linkedListAttrSearch_0
    889            while( cur != NULL )
    890            {
    891              if( EQUAL_LLISTITEMDATA( (*(cur->data)), (*searchdata) ) )
    892              {
    893                return cur;
    894              }
    895              cur = cur->next;
   \                     ??bdb_linkedListAttrSearch_1:
   \   00000B   8A82         MOV       DPL,R2
   \   00000D   8B83         MOV       DPH,R3
   \   00000F   A3           INC       DPTR
   \                     ??bdb_linkedListAttrSearch_0:
   \   000010   A3           INC       DPTR
   \   000011   E0           MOVX      A,@DPTR
   \   000012   FA           MOV       R2,A
   \   000013   A3           INC       DPTR
   \   000014   E0           MOVX      A,@DPTR
   \   000015   FB           MOV       R3,A
   \   000016   EA           MOV       A,R2
   \   000017   4B           ORL       A,R3
   \   000018   6020         JZ        ??bdb_linkedListAttrSearch_2
   \   00001A   8A82         MOV       DPL,R2
   \   00001C   8B83         MOV       DPH,R3
   \   00001E   E0           MOVX      A,@DPTR
   \   00001F   F8           MOV       R0,A
   \   000020   A3           INC       DPTR
   \   000021   E0           MOVX      A,@DPTR
   \   000022   F583         MOV       DPH,A
   \   000024   8882         MOV       DPL,R0
   \   000026   E0           MOVX      A,@DPTR
   \   000027   F8           MOV       R0,A
   \   000028   A3           INC       DPTR
   \   000029   E0           MOVX      A,@DPTR
   \   00002A   F9           MOV       R1,A
   \   00002B   8C82         MOV       DPL,R4
   \   00002D   8D83         MOV       DPH,R5
   \   00002F   E0           MOVX      A,@DPTR
   \   000030   68           XRL       A,R0
   \   000031   7003         JNZ       ??bdb_linkedListAttrSearch_3
   \   000033   A3           INC       DPTR
   \   000034   E0           MOVX      A,@DPTR
   \   000035   69           XRL       A,R1
   \                     ??bdb_linkedListAttrSearch_3:
   \   000036   70D3         JNZ       ??bdb_linkedListAttrSearch_1
   \   000038   8004         SJMP      ??bdb_linkedListAttrSearch_4
    896            }
    897            return NULL;
   \                     ??bdb_linkedListAttrSearch_2:
   \   00003A   7A00         MOV       R2,#0x0
   \   00003C   7B00         MOV       R3,#0x0
   \                     ??bdb_linkedListAttrSearch_4:
   \   00003E   7F01         MOV       R7,#0x1
   \   000040   02....       LJMP      ?BANKED_LEAVE_XDATA
    898          }
    899          
    900          /*********************************************************************
    901           * @fn      bdb_linkedListAttrRemove
    902           *
    903           * @brief   Remove the head node from the list
    904           *
    905           * @param   list - Pointer to linked list
    906           *
    907           * @return  A pointer to the data part of the deleted node, NULL if no node was deleted
    908           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    909          static bdbReportAttrLive_t* bdb_linkedListAttrRemove( bdbAttrLinkedListAttr_t *list )
   \                     bdb_linkedListAttrRemove:
    910          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV       ?V0,R2
   \   000007   8B..         MOV       ?V1,R3
    911            bdbReportAttrLive_t* resdata = NULL;
    912            bdbLinkedListAttrItem_t* cur = list->head;
   \   000009   8A82         MOV       DPL,R2
   \   00000B   8B83         MOV       DPH,R3
   \   00000D   A3           INC       DPTR
   \   00000E   AC82         MOV       R4,DPL
   \   000010   AD83         MOV       R5,DPH
   \   000012   E0           MOVX      A,@DPTR
   \   000013   F8           MOV       R0,A
   \   000014   A3           INC       DPTR
   \   000015   E0           MOVX      A,@DPTR
   \   000016   F9           MOV       R1,A
   \   000017   E8           MOV       A,R0
   \   000018   FA           MOV       R2,A
   \   000019   E9           MOV       A,R1
   \   00001A   FB           MOV       R3,A
    913            if( list->head == NULL )
   \   00001B   E8           MOV       A,R0
   \   00001C   49           ORL       A,R1
   \   00001D   7006         JNZ       ??bdb_linkedListAttrRemove_0
    914            {
    915              return NULL;
   \   00001F   7A00         MOV       R2,#0x0
   \   000021   7B00         MOV       R3,#0x0
   \   000023   802D         SJMP      ??bdb_linkedListAttrRemove_1
    916            }
    917            list->head = cur->next;
   \                     ??bdb_linkedListAttrRemove_0:
   \   000025   8882         MOV       DPL,R0
   \   000027   8983         MOV       DPH,R1
   \   000029   A3           INC       DPTR
   \   00002A   A3           INC       DPTR
   \   00002B   E0           MOVX      A,@DPTR
   \   00002C   F8           MOV       R0,A
   \   00002D   A3           INC       DPTR
   \   00002E   E0           MOVX      A,@DPTR
   \   00002F   F9           MOV       R1,A
   \   000030   8C82         MOV       DPL,R4
   \   000032   8D83         MOV       DPH,R5
   \   000034   E8           MOV       A,R0
   \   000035   F0           MOVX      @DPTR,A
   \   000036   A3           INC       DPTR
   \   000037   E9           MOV       A,R1
   \   000038   F0           MOVX      @DPTR,A
    918            resdata =cur->data;
   \   000039   8A82         MOV       DPL,R2
   \   00003B   8B83         MOV       DPH,R3
   \   00003D   E0           MOVX      A,@DPTR
   \   00003E   FE           MOV       R6,A
   \   00003F   A3           INC       DPTR
   \   000040   E0           MOVX      A,@DPTR
   \   000041   FF           MOV       R7,A
    919            osal_mem_free( cur );
   \   000042                ; Setup parameters for call to function osal_mem_free
   \   000042   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
    920            list->numItems--;
   \   000045   85..82       MOV       DPL,?V0
   \   000048   85..83       MOV       DPH,?V1
   \   00004B   E0           MOVX      A,@DPTR
   \   00004C   14           DEC       A
   \   00004D   F0           MOVX      @DPTR,A
    921            return resdata;
   \   00004E   EE           MOV       A,R6
   \   00004F   FA           MOV       R2,A
   \   000050   EF           MOV       A,R7
   \   000051   FB           MOV       R3,A
   \                     ??bdb_linkedListAttrRemove_1:
   \   000052   7F02         MOV       R7,#0x2
   \   000054   02....       LJMP      ?BANKED_LEAVE_XDATA
    922          }
    923          
    924          /*********************************************************************
    925           * @fn      bdb_linkedListAttrFreeAll
    926           *
    927           * @brief   Deletes and deallocates all the memory from the linked list
    928           *
    929           * @param   list - Pointer to linked list
    930           *
    931           * @return  BDBREPORTING_SUCCESS if operation was successful
    932           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    933          static uint8 bdb_linkedListAttrFreeAll( bdbAttrLinkedListAttr_t *list )
   \                     bdb_linkedListAttrFreeAll:
    934          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV       A,R2
   \   000006   FE           MOV       R6,A
   \   000007   EB           MOV       A,R3
   \   000008   FF           MOV       R7,A
   \   000009   800A         SJMP      ??bdb_linkedListAttrFreeAll_0
    935            bdbReportAttrLive_t* toremovedata;
    936            while( list->head != NULL  )
    937            {
    938              toremovedata = bdb_linkedListAttrRemove( list );
    939              osal_mem_free( toremovedata );
   \                     ??bdb_linkedListAttrFreeAll_1:
   \   00000B                ; Setup parameters for call to function osal_mem_free
   \   00000B                ; Setup parameters for call to function bdb_linkedListAttrRemove
   \   00000B   EE           MOV       A,R6
   \   00000C   FA           MOV       R2,A
   \   00000D   EF           MOV       A,R7
   \   00000E   FB           MOV       R3,A
   \   00000F   12....       LCALL     `??bdb_linkedListAttrRemove::?relay`; Banked call to: bdb_linkedListAttrRemove
   \   000012   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
    940            }
   \                     ??bdb_linkedListAttrFreeAll_0:
   \   000015   8E82         MOV       DPL,R6
   \   000017   8F83         MOV       DPH,R7
   \   000019   A3           INC       DPTR
   \   00001A   E0           MOVX      A,@DPTR
   \   00001B   F8           MOV       R0,A
   \   00001C   A3           INC       DPTR
   \   00001D   E0           MOVX      A,@DPTR
   \   00001E   F9           MOV       R1,A
   \   00001F   E8           MOV       A,R0
   \   000020   49           ORL       A,R1
   \   000021   70E8         JNZ       ??bdb_linkedListAttrFreeAll_1
    941            return BDBREPORTING_SUCCESS;
   \   000023   7900         MOV       R1,#0x0
   \   000025   7F01         MOV       R7,#0x1
   \   000027   02....       LJMP      ?BANKED_LEAVE_XDATA
    942          }
    943          
    944          /*********************************************************************
    945           * @fn      bdb_linkedListAttrClearList
    946           *
    947           * @brief   Clears the list without freeing the nodes memory
    948           *
    949           * @param   list - Pointer to linked list
    950           *
    951           * @return 
    952           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    953          static void bdb_linkedListAttrClearList( bdbAttrLinkedListAttr_t *list )
   \                     bdb_linkedListAttrClearList:
    954          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    955            list->head = NULL;
   \   000004   8A82         MOV       DPL,R2
   \   000006   8B83         MOV       DPH,R3
   \   000008   A3           INC       DPTR
   \   000009   E4           CLR       A
   \   00000A   F0           MOVX      @DPTR,A
   \   00000B   A3           INC       DPTR
   \   00000C   F0           MOVX      @DPTR,A
    956            list->numItems = 0;
   \   00000D   8A82         MOV       DPL,R2
   \   00000F   8B83         MOV       DPH,R3
   \   000011   F0           MOVX      @DPTR,A
    957          }
   \   000012   D083         POP       DPH
   \   000014   D082         POP       DPL
   \   000016   02....       LJMP      ?BRET
    958          
    959          /*********************************************************************
    960           * @fn      bdb_linkedListAttrGetAtIndex
    961           *
    962           * @brief   Returns the ith element of the list starting from the head
    963           *
    964           * @param   list - Pointer to linked list
    965           *
    966           * @return  A pointer to the ith node element
    967           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    968          static bdbLinkedListAttrItem_t* bdb_linkedListAttrGetAtIndex( bdbAttrLinkedListAttr_t *list, uint8 index )
   \                     bdb_linkedListAttrGetAtIndex:
    969          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    970            if( index > list->numItems-1 )
   \   000005   8A82         MOV       DPL,R2
   \   000007   8B83         MOV       DPH,R3
   \   000009   E0           MOVX      A,@DPTR
   \   00000A   24FF         ADD       A,#-0x1
   \   00000C   FC           MOV       R4,A
   \   00000D   E4           CLR       A
   \   00000E   34FF         ADDC      A,#-0x1
   \   000010   FD           MOV       R5,A
   \   000011   E9           MOV       A,R1
   \   000012   FE           MOV       R6,A
   \   000013   C3           CLR       C
   \   000014   EC           MOV       A,R4
   \   000015   9E           SUBB      A,R6
   \   000016   ED           MOV       A,R5
   \   000017   9400         SUBB      A,#0x0
   \   000019   A2D2         MOV       C,0xD0 /* PSW */.2
   \   00001B   65D0         XRL       A,PSW
   \   00001D   33           RLC       A
   \   00001E   4024         JC        ??bdb_linkedListAttrGetAtIndex_0
    971            {
    972              return NULL;
    973            }
    974            bdbLinkedListAttrItem_t* cur = list->head;
   \   000020   A3           INC       DPTR
   \   000021   E0           MOVX      A,@DPTR
   \   000022   FA           MOV       R2,A
   \   000023   A3           INC       DPTR
   \   000024   E0           MOVX      A,@DPTR
   \   000025   FB           MOV       R3,A
    975            uint8 i;
    976            for( i=0; i<=index; i++ )
   \   000026   7800         MOV       R0,#0x0
   \   000028   8011         SJMP      ??bdb_linkedListAttrGetAtIndex_1
    977            {
    978              if( cur == NULL )
    979              {
    980                return NULL;
    981              }
    982              if( i < index )
   \                     ??bdb_linkedListAttrGetAtIndex_2:
   \   00002A   E8           MOV       A,R0
   \   00002B   C3           CLR       C
   \   00002C   99           SUBB      A,R1
   \   00002D   500B         JNC       ??bdb_linkedListAttrGetAtIndex_3
    983              {
    984                cur = cur->next;
   \   00002F   8A82         MOV       DPL,R2
   \   000031   8B83         MOV       DPH,R3
   \   000033   A3           INC       DPTR
   \   000034   A3           INC       DPTR
   \   000035   E0           MOVX      A,@DPTR
   \   000036   FA           MOV       R2,A
   \   000037   A3           INC       DPTR
   \   000038   E0           MOVX      A,@DPTR
   \   000039   FB           MOV       R3,A
    985              }
   \                     ??bdb_linkedListAttrGetAtIndex_3:
   \   00003A   08           INC       R0
   \                     ??bdb_linkedListAttrGetAtIndex_1:
   \   00003B   E9           MOV       A,R1
   \   00003C   C3           CLR       C
   \   00003D   98           SUBB      A,R0
   \   00003E   4008         JC        ??bdb_linkedListAttrGetAtIndex_4
   \   000040   EA           MOV       A,R2
   \   000041   4B           ORL       A,R3
   \   000042   70E6         JNZ       ??bdb_linkedListAttrGetAtIndex_2
   \                     ??bdb_linkedListAttrGetAtIndex_0:
   \   000044   7A00         MOV       R2,#0x0
   \   000046   7B00         MOV       R3,#0x0
    986            }
    987            return cur;
   \                     ??bdb_linkedListAttrGetAtIndex_4:
   \   000048   7F01         MOV       R7,#0x1
   \   00004A   02....       LJMP      ?BANKED_LEAVE_XDATA
    988          }
    989          
    990          /*
    991          * End: Single linked list for attributes in a cluster-endpoint entry methods
    992          */
    993          
    994          
    995          /*
    996          * Begin: Cluster-endpoint array live methods
    997          */
    998          
    999          /*********************************************************************
   1000           * @fn      bdb_clusterEndpointArrayInit
   1001           *
   1002           * @brief   Initiates the clusterEndpoint array variables
   1003           *
   1004           * @return  
   1005           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1006          static void bdb_clusterEndpointArrayInit( void )
   \                     bdb_clusterEndpointArrayInit:
   1007          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1008            bdb_reportingClusterEndpointArrayCount = 0;
   \   000004   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   000007   E4           CLR       A
   \   000008   F0           MOVX      @DPTR,A
   1009          }
   \   000009   D083         POP       DPH
   \   00000B   D082         POP       DPL
   \   00000D   02....       LJMP      ?BRET
   1010          
   1011          /*********************************************************************
   1012           * @fn      bdb_clusterEndpointArrayAdd
   1013           *
   1014           * @brief   Adds a new entry to the clusterEndpoint array
   1015           *
   1016           * @param   endpoint - Endpoint ID of the entry
   1017           * @param   cluster - Cluster ID of the entry
   1018           * @param   consolidatedMinReportInterval - Cluster ID of the entry
   1019          
   1020           *
   1021           * @return  A pointer to the ith node element
   1022           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1023          static uint8 bdb_clusterEndpointArrayAdd( uint8 endpoint, uint16 cluster, uint16 consolidatedMinReportInt, uint16 consolidatedMaxReportInt, uint16 timeSinceLastReport )
   \                     bdb_clusterEndpointArrayAdd:
   1024          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
   \   000006   FF           MOV       R7,A
   1025            if( bdb_reportingClusterEndpointArrayCount>=BDB_MAX_CLUSTERENDPOINTS_REPORTING )
   \   000007   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   00000A   E0           MOVX      A,@DPTR
   \   00000B   C3           CLR       C
   \   00000C   9405         SUBB      A,#0x5
   \   00000E   4005         JC        ??bdb_clusterEndpointArrayAdd_0
   1026            {
   1027              return BDBREPORTING_ERROR;
   \   000010   7901         MOV       R1,#0x1
   \   000012   02....       LJMP      ??bdb_clusterEndpointArrayAdd_1 & 0xFFFF
   1028            }
   1029            bdb_reportingClusterEndpointArray[bdb_reportingClusterEndpointArrayCount].endpoint = endpoint;
   \                     ??bdb_clusterEndpointArrayAdd_0:
   \   000015   E0           MOVX      A,@DPTR
   \   000016   75F00D       MOV       B,#0xd
   \   000019   A4           MUL       AB
   \   00001A   F8           MOV       R0,A
   \   00001B   A9F0         MOV       R1,B
   \   00001D   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   00001F   28           ADD       A,R0
   \   000020   F8           MOV       R0,A
   \   000021   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   000023   39           ADDC      A,R1
   \   000024   F9           MOV       R1,A
   \   000025   EF           MOV       A,R7
   \   000026   8882         MOV       DPL,R0
   \   000028   8983         MOV       DPH,R1
   \   00002A   A3           INC       DPTR
   \   00002B   F0           MOVX      @DPTR,A
   1030            bdb_reportingClusterEndpointArray[bdb_reportingClusterEndpointArrayCount].cluster = cluster;
   \   00002C   8882         MOV       DPL,R0
   \   00002E   8983         MOV       DPH,R1
   \   000030   A3           INC       DPTR
   \   000031   A3           INC       DPTR
   \   000032   EA           MOV       A,R2
   \   000033   F0           MOVX      @DPTR,A
   \   000034   A3           INC       DPTR
   \   000035   EB           MOV       A,R3
   \   000036   F0           MOVX      @DPTR,A
   1031          
   1032            bdb_reportingClusterEndpointArray[bdb_reportingClusterEndpointArrayCount].consolidatedMinReportInt = consolidatedMinReportInt;
   \   000037   8882         MOV       DPL,R0
   \   000039   8983         MOV       DPH,R1
   \   00003B   A3           INC       DPTR
   \   00003C   A3           INC       DPTR
   \   00003D   A3           INC       DPTR
   \   00003E   A3           INC       DPTR
   \   00003F   EC           MOV       A,R4
   \   000040   F0           MOVX      @DPTR,A
   \   000041   A3           INC       DPTR
   \   000042   ED           MOV       A,R5
   \   000043   F0           MOVX      @DPTR,A
   1033            bdb_reportingClusterEndpointArray[bdb_reportingClusterEndpointArrayCount].consolidatedMaxReportInt = consolidatedMaxReportInt;
   \   000044   7409         MOV       A,#0x9
   \   000046   12....       LCALL     ?XSTACK_DISP0_8
   \   000049   E0           MOVX      A,@DPTR
   \   00004A   FA           MOV       R2,A
   \   00004B   A3           INC       DPTR
   \   00004C   E0           MOVX      A,@DPTR
   \   00004D   FB           MOV       R3,A
   \   00004E   8882         MOV       DPL,R0
   \   000050   8983         MOV       DPH,R1
   \   000052   A3           INC       DPTR
   \   000053   A3           INC       DPTR
   \   000054   A3           INC       DPTR
   \   000055   A3           INC       DPTR
   \   000056   A3           INC       DPTR
   \   000057   A3           INC       DPTR
   \   000058   EA           MOV       A,R2
   \   000059   F0           MOVX      @DPTR,A
   \   00005A   A3           INC       DPTR
   \   00005B   EB           MOV       A,R3
   \   00005C   F0           MOVX      @DPTR,A
   1034            bdb_reportingClusterEndpointArray[bdb_reportingClusterEndpointArrayCount].timeSinceLastReport = timeSinceLastReport;
   \   00005D   740B         MOV       A,#0xb
   \   00005F   12....       LCALL     ?XSTACK_DISP0_8
   \   000062   E0           MOVX      A,@DPTR
   \   000063   FA           MOV       R2,A
   \   000064   A3           INC       DPTR
   \   000065   E0           MOVX      A,@DPTR
   \   000066   FB           MOV       R3,A
   \   000067   8882         MOV       DPL,R0
   \   000069   8983         MOV       DPH,R1
   \   00006B   A3           INC       DPTR
   \   00006C   A3           INC       DPTR
   \   00006D   A3           INC       DPTR
   \   00006E   A3           INC       DPTR
   \   00006F   A3           INC       DPTR
   \   000070   A3           INC       DPTR
   \   000071   A3           INC       DPTR
   \   000072   A3           INC       DPTR
   \   000073   EA           MOV       A,R2
   \   000074   F0           MOVX      @DPTR,A
   \   000075   A3           INC       DPTR
   \   000076   EB           MOV       A,R3
   \   000077   F0           MOVX      @DPTR,A
   1035            bdb_linkedListAttrInit( &bdb_reportingClusterEndpointArray[bdb_reportingClusterEndpointArrayCount].attrLinkedList );
   \   000078                ; Setup parameters for call to function bdb_linkedListAttrInit
   \   000078   E8           MOV       A,R0
   \   000079   240A         ADD       A,#0xa
   \   00007B   FA           MOV       R2,A
   \   00007C   E4           CLR       A
   \   00007D   39           ADDC      A,R1
   \   00007E   FB           MOV       R3,A
   \   00007F   12....       LCALL     `??bdb_linkedListAttrInit::?relay`; Banked call to: bdb_linkedListAttrInit
   1036            FLAGS_TURNOFFALLFLAGS( bdb_reportingClusterEndpointArray[bdb_reportingClusterEndpointArrayCount].flags );
   \   000082   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   000085   E0           MOVX      A,@DPTR
   \   000086   75F00D       MOV       B,#0xd
   \   000089   A4           MUL       AB
   \   00008A   F8           MOV       R0,A
   \   00008B   A9F0         MOV       R1,B
   \   00008D   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   00008F   28           ADD       A,R0
   \   000090   F582         MOV       DPL,A
   \   000092   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   000094   39           ADDC      A,R1
   \   000095   F583         MOV       DPH,A
   \   000097   E4           CLR       A
   \   000098   F0           MOVX      @DPTR,A
   1037            
   1038            bdb_reportingClusterEndpointArrayCount++;
   \   000099   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   00009C   E0           MOVX      A,@DPTR
   \   00009D   04           INC       A
   \   00009E   F0           MOVX      @DPTR,A
   1039            return BDBREPORTING_SUCCESS;
   \   00009F   7900         MOV       R1,#0x0
   \                     ??bdb_clusterEndpointArrayAdd_1:
   \   0000A1   7F01         MOV       R7,#0x1
   \   0000A3   02....       LJMP      ?BANKED_LEAVE_XDATA
   1040          }
   1041          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1042          static uint8 bdb_clusterEndpointArrayGetMin( void )
   \                     bdb_clusterEndpointArrayGetMin:
   1043          {
   \   000000                REQUIRE ?V0
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   1044            uint8 indexMin = 0xFF;
   \   000005   7CFF         MOV       R4,#-0x1
   1045            uint16 ValueMin = 0xFFFF;
   \   000007   7EFF         MOV       R6,#-0x1
   \   000009   7FFF         MOV       R7,#-0x1
   1046            uint16 possibleMin;
   1047            uint8 i;
   1048            for( i=0; i<bdb_reportingClusterEndpointArrayCount; i++ )
   \   00000B   7D00         MOV       R5,#0x0
   \   00000D   8026         SJMP      ??bdb_clusterEndpointArrayGetMin_0
   1049            {
   1050              if( FLAGS_CHECKFLAG( bdb_reportingClusterEndpointArray[i].flags, BDBREPORTING_HASBINDING_FLAG_MASK ) == BDBREPORTING_TRUE )
   1051              { //Only do with valid entries (HasBinding==true)
   1052                if( bdb_reportingClusterEndpointArray[i].consolidatedMaxReportInt != BDBREPORTING_NOPERIODIC &&  
   1053                   bdb_reportingClusterEndpointArray[i].consolidatedMaxReportInt != BDBREPORTING_REPORTOFF )
   1054                {
   1055                  //If maxInterval is BDBREPORTING_NOPERIODIC=0x0000 or BDBREPORTING_REPORTOFF=0xFFFF, ignore to calculate min
   1056                  if( ValueMin == 0 )
   1057                  {
   1058                    //stop if we find a minValue of zero because there no other Min less than that
   1059                    break;
   1060                  }
   1061                  possibleMin = bdb_reportingClusterEndpointArray[i].consolidatedMaxReportInt - bdb_reportingClusterEndpointArray[i].timeSinceLastReport;
   \                     ??bdb_clusterEndpointArrayGetMin_1:
   \   00000F   8882         MOV       DPL,R0
   \   000011   8983         MOV       DPH,R1
   \   000013   A3           INC       DPTR
   \   000014   A3           INC       DPTR
   \   000015   A3           INC       DPTR
   \   000016   A3           INC       DPTR
   \   000017   A3           INC       DPTR
   \   000018   A3           INC       DPTR
   \   000019   A3           INC       DPTR
   \   00001A   A3           INC       DPTR
   \   00001B   E0           MOVX      A,@DPTR
   \   00001C   F8           MOV       R0,A
   \   00001D   A3           INC       DPTR
   \   00001E   E0           MOVX      A,@DPTR
   \   00001F   F9           MOV       R1,A
   \   000020   EA           MOV       A,R2
   \   000021   C3           CLR       C
   \   000022   98           SUBB      A,R0
   \   000023   F8           MOV       R0,A
   \   000024   EB           MOV       A,R3
   \   000025   99           SUBB      A,R1
   \   000026   F9           MOV       R1,A
   1062                  if( possibleMin<ValueMin )
   \   000027   C3           CLR       C
   \   000028   E8           MOV       A,R0
   \   000029   9E           SUBB      A,R6
   \   00002A   E9           MOV       A,R1
   \   00002B   9F           SUBB      A,R7
   \   00002C   5006         JNC       ??bdb_clusterEndpointArrayGetMin_2
   1063                  {
   1064                    indexMin = i;
   \   00002E   ED           MOV       A,R5
   \   00002F   FC           MOV       R4,A
   1065                    ValueMin = possibleMin;
   \   000030   E8           MOV       A,R0
   \   000031   FE           MOV       R6,A
   \   000032   E9           MOV       A,R1
   \   000033   FF           MOV       R7,A
   1066                  }
   \                     ??bdb_clusterEndpointArrayGetMin_2:
   \   000034   0D           INC       R5
   \                     ??bdb_clusterEndpointArrayGetMin_0:
   \   000035   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   000038   E0           MOVX      A,@DPTR
   \   000039   F8           MOV       R0,A
   \   00003A   ED           MOV       A,R5
   \   00003B   C3           CLR       C
   \   00003C   98           SUBB      A,R0
   \   00003D   5036         JNC       ??bdb_clusterEndpointArrayGetMin_3
   \   00003F   ED           MOV       A,R5
   \   000040   75F00D       MOV       B,#0xd
   \   000043   A4           MUL       AB
   \   000044   F8           MOV       R0,A
   \   000045   A9F0         MOV       R1,B
   \   000047   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   000049   28           ADD       A,R0
   \   00004A   F8           MOV       R0,A
   \   00004B   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   00004D   39           ADDC      A,R1
   \   00004E   F9           MOV       R1,A
   \   00004F   8882         MOV       DPL,R0
   \   000051   F583         MOV       DPH,A
   \   000053   E0           MOVX      A,@DPTR
   \   000054   A2E0         MOV       C,0xE0 /* A   */.0
   \   000056   50DC         JNC       ??bdb_clusterEndpointArrayGetMin_2
   \   000058   A3           INC       DPTR
   \   000059   A3           INC       DPTR
   \   00005A   A3           INC       DPTR
   \   00005B   A3           INC       DPTR
   \   00005C   A3           INC       DPTR
   \   00005D   A3           INC       DPTR
   \   00005E   E0           MOVX      A,@DPTR
   \   00005F   FA           MOV       R2,A
   \   000060   A3           INC       DPTR
   \   000061   E0           MOVX      A,@DPTR
   \   000062   FB           MOV       R3,A
   \   000063   EA           MOV       A,R2
   \   000064   4B           ORL       A,R3
   \   000065   60CD         JZ        ??bdb_clusterEndpointArrayGetMin_2
   \   000067   74FF         MOV       A,#-0x1
   \   000069   6A           XRL       A,R2
   \   00006A   7003         JNZ       ??bdb_clusterEndpointArrayGetMin_4
   \   00006C   74FF         MOV       A,#-0x1
   \   00006E   6B           XRL       A,R3
   \                     ??bdb_clusterEndpointArrayGetMin_4:
   \   00006F   60C3         JZ        ??bdb_clusterEndpointArrayGetMin_2
   \   000071   EE           MOV       A,R6
   \   000072   4F           ORL       A,R7
   \   000073   709A         JNZ       ??bdb_clusterEndpointArrayGetMin_1
   1067                }
   1068              }
   1069            }
   1070            return indexMin;
   \                     ??bdb_clusterEndpointArrayGetMin_3:
   \   000075   EC           MOV       A,R4
   \   000076   F9           MOV       R1,A
   \   000077   7F01         MOV       R7,#0x1
   \   000079   02....       LJMP      ?BANKED_LEAVE_XDATA
   1071          
   1072          }
   1073          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1074          static uint8 bdb_clusterEndpointArrayRemoveAt( uint8 index )
   \                     bdb_clusterEndpointArrayRemoveAt:
   1075          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
   \   000006   FE           MOV       R6,A
   1076            if( index>=bdb_reportingClusterEndpointArrayCount )
   \   000007   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   00000A   E0           MOVX      A,@DPTR
   \   00000B   F8           MOV       R0,A
   \   00000C   E9           MOV       A,R1
   \   00000D   C3           CLR       C
   \   00000E   98           SUBB      A,R0
   \   00000F   4004         JC        ??bdb_clusterEndpointArrayRemoveAt_0
   1077            {
   1078              return BDBREPORTING_ERROR;
   \   000011   7901         MOV       R1,#0x1
   \   000013   8026         SJMP      ??bdb_clusterEndpointArrayRemoveAt_1
   1079            }
   1080            //Freeing list, all the other fields are not dynamic
   1081            bdb_linkedListAttrFreeAll( &bdb_reportingClusterEndpointArray[index].attrLinkedList );
   \                     ??bdb_clusterEndpointArrayRemoveAt_0:
   \   000015                ; Setup parameters for call to function bdb_linkedListAttrFreeAll
   \   000015   E9           MOV       A,R1
   \   000016   75F00D       MOV       B,#0xd
   \   000019   A4           MUL       AB
   \   00001A   F8           MOV       R0,A
   \   00001B   A9F0         MOV       R1,B
   \   00001D   74..         MOV       A,#(bdb_reportingClusterEndpointArray + 10) & 0xff
   \   00001F   28           ADD       A,R0
   \   000020   FA           MOV       R2,A
   \   000021   74..         MOV       A,#((bdb_reportingClusterEndpointArray + 10) >> 8) & 0xff
   \   000023   39           ADDC      A,R1
   \   000024   FB           MOV       R3,A
   \   000025   12....       LCALL     `??bdb_linkedListAttrFreeAll::?relay`; Banked call to: bdb_linkedListAttrFreeAll
   1082            //moving last element to free slot
   1083            bdb_clusterEndpointArrayMoveTo( index, bdb_reportingClusterEndpointArrayCount-1 );
   \   000028                ; Setup parameters for call to function bdb_clusterEndpointArrayMoveTo
   \   000028   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   00002B   E0           MOVX      A,@DPTR
   \   00002C   14           DEC       A
   \   00002D   FA           MOV       R2,A
   \   00002E   EE           MOV       A,R6
   \   00002F   F9           MOV       R1,A
   \   000030   12....       LCALL     `??bdb_clusterEndpointArrayMoveTo::?relay`; Banked call to: bdb_clusterEndpointArrayMoveTo
   1084            bdb_reportingClusterEndpointArrayCount--;
   \   000033   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   000036   E0           MOVX      A,@DPTR
   \   000037   14           DEC       A
   \   000038   F0           MOVX      @DPTR,A
   1085            return BDBREPORTING_SUCCESS;
   \   000039   7900         MOV       R1,#0x0
   \                     ??bdb_clusterEndpointArrayRemoveAt_1:
   \   00003B   7F01         MOV       R7,#0x1
   \   00003D   02....       LJMP      ?BANKED_LEAVE_XDATA
   1086          }
   1087          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1088          static void bdb_clusterEndpointArrayMoveTo( uint8 indexSrc, uint8 indexDest )
   \                     bdb_clusterEndpointArrayMoveTo:
   1089          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   1090            bdb_reportingClusterEndpointArray[indexSrc].cluster = bdb_reportingClusterEndpointArray[indexDest].cluster;
   \   000005   E9           MOV       A,R1
   \   000006   75F00D       MOV       B,#0xd
   \   000009   A4           MUL       AB
   \   00000A   F8           MOV       R0,A
   \   00000B   A9F0         MOV       R1,B
   \   00000D   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   00000F   28           ADD       A,R0
   \   000010   F8           MOV       R0,A
   \   000011   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   000013   39           ADDC      A,R1
   \   000014   F9           MOV       R1,A
   \   000015   EA           MOV       A,R2
   \   000016   75F00D       MOV       B,#0xd
   \   000019   A4           MUL       AB
   \   00001A   FA           MOV       R2,A
   \   00001B   ABF0         MOV       R3,B
   \   00001D   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   00001F   2A           ADD       A,R2
   \   000020   FA           MOV       R2,A
   \   000021   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   000023   3B           ADDC      A,R3
   \   000024   8A..         MOV       ?V0,R2
   \   000026   F5..         MOV       ?V1,A
   \   000028   8A82         MOV       DPL,R2
   \   00002A   F583         MOV       DPH,A
   \   00002C   A3           INC       DPTR
   \   00002D   A3           INC       DPTR
   \   00002E   E0           MOVX      A,@DPTR
   \   00002F   FA           MOV       R2,A
   \   000030   A3           INC       DPTR
   \   000031   E0           MOVX      A,@DPTR
   \   000032   FB           MOV       R3,A
   \   000033   8882         MOV       DPL,R0
   \   000035   8983         MOV       DPH,R1
   \   000037   A3           INC       DPTR
   \   000038   A3           INC       DPTR
   \   000039   EA           MOV       A,R2
   \   00003A   F0           MOVX      @DPTR,A
   \   00003B   A3           INC       DPTR
   \   00003C   EB           MOV       A,R3
   \   00003D   F0           MOVX      @DPTR,A
   1091            bdb_reportingClusterEndpointArray[indexSrc].endpoint = bdb_reportingClusterEndpointArray[indexDest].endpoint;
   \   00003E   85..82       MOV       DPL,?V0
   \   000041   85..83       MOV       DPH,?V1
   \   000044   A3           INC       DPTR
   \   000045   E0           MOVX      A,@DPTR
   \   000046   8882         MOV       DPL,R0
   \   000048   8983         MOV       DPH,R1
   \   00004A   A3           INC       DPTR
   \   00004B   F0           MOVX      @DPTR,A
   1092            bdb_reportingClusterEndpointArray[indexSrc].consolidatedMaxReportInt = bdb_reportingClusterEndpointArray[indexDest].consolidatedMaxReportInt;
   \   00004C   85..82       MOV       DPL,?V0
   \   00004F   85..83       MOV       DPH,?V1
   \   000052   A3           INC       DPTR
   \   000053   A3           INC       DPTR
   \   000054   A3           INC       DPTR
   \   000055   A3           INC       DPTR
   \   000056   A3           INC       DPTR
   \   000057   A3           INC       DPTR
   \   000058   E0           MOVX      A,@DPTR
   \   000059   FA           MOV       R2,A
   \   00005A   A3           INC       DPTR
   \   00005B   E0           MOVX      A,@DPTR
   \   00005C   FB           MOV       R3,A
   \   00005D   8882         MOV       DPL,R0
   \   00005F   8983         MOV       DPH,R1
   \   000061   A3           INC       DPTR
   \   000062   A3           INC       DPTR
   \   000063   A3           INC       DPTR
   \   000064   A3           INC       DPTR
   \   000065   A3           INC       DPTR
   \   000066   A3           INC       DPTR
   \   000067   EA           MOV       A,R2
   \   000068   F0           MOVX      @DPTR,A
   \   000069   A3           INC       DPTR
   \   00006A   EB           MOV       A,R3
   \   00006B   F0           MOVX      @DPTR,A
   1093            bdb_reportingClusterEndpointArray[indexSrc].consolidatedMinReportInt = bdb_reportingClusterEndpointArray[indexDest].consolidatedMinReportInt;
   \   00006C   85..82       MOV       DPL,?V0
   \   00006F   85..83       MOV       DPH,?V1
   \   000072   A3           INC       DPTR
   \   000073   A3           INC       DPTR
   \   000074   A3           INC       DPTR
   \   000075   A3           INC       DPTR
   \   000076   E0           MOVX      A,@DPTR
   \   000077   FA           MOV       R2,A
   \   000078   A3           INC       DPTR
   \   000079   E0           MOVX      A,@DPTR
   \   00007A   FB           MOV       R3,A
   \   00007B   8882         MOV       DPL,R0
   \   00007D   8983         MOV       DPH,R1
   \   00007F   A3           INC       DPTR
   \   000080   A3           INC       DPTR
   \   000081   A3           INC       DPTR
   \   000082   A3           INC       DPTR
   \   000083   EA           MOV       A,R2
   \   000084   F0           MOVX      @DPTR,A
   \   000085   A3           INC       DPTR
   \   000086   EB           MOV       A,R3
   \   000087   F0           MOVX      @DPTR,A
   1094            bdb_reportingClusterEndpointArray[indexSrc].timeSinceLastReport = bdb_reportingClusterEndpointArray[indexDest].timeSinceLastReport;
   \   000088   85..82       MOV       DPL,?V0
   \   00008B   85..83       MOV       DPH,?V1
   \   00008E   A3           INC       DPTR
   \   00008F   A3           INC       DPTR
   \   000090   A3           INC       DPTR
   \   000091   A3           INC       DPTR
   \   000092   A3           INC       DPTR
   \   000093   A3           INC       DPTR
   \   000094   A3           INC       DPTR
   \   000095   A3           INC       DPTR
   \   000096   E0           MOVX      A,@DPTR
   \   000097   FA           MOV       R2,A
   \   000098   A3           INC       DPTR
   \   000099   E0           MOVX      A,@DPTR
   \   00009A   FB           MOV       R3,A
   \   00009B   8882         MOV       DPL,R0
   \   00009D   8983         MOV       DPH,R1
   \   00009F   A3           INC       DPTR
   \   0000A0   A3           INC       DPTR
   \   0000A1   A3           INC       DPTR
   \   0000A2   A3           INC       DPTR
   \   0000A3   A3           INC       DPTR
   \   0000A4   A3           INC       DPTR
   \   0000A5   A3           INC       DPTR
   \   0000A6   A3           INC       DPTR
   \   0000A7   EA           MOV       A,R2
   \   0000A8   F0           MOVX      @DPTR,A
   \   0000A9   A3           INC       DPTR
   \   0000AA   EB           MOV       A,R3
   \   0000AB   F0           MOVX      @DPTR,A
   1095            bdb_reportingClusterEndpointArray[indexSrc].attrLinkedList = bdb_reportingClusterEndpointArray[indexDest].attrLinkedList;
   \   0000AC   E5..         MOV       A,?V0
   \   0000AE   240A         ADD       A,#0xa
   \   0000B0   FA           MOV       R2,A
   \   0000B1   E4           CLR       A
   \   0000B2   35..         ADDC      A,?V1
   \   0000B4   FB           MOV       R3,A
   \   0000B5   8A82         MOV       DPL,R2
   \   0000B7   F583         MOV       DPH,A
   \   0000B9   E8           MOV       A,R0
   \   0000BA   240A         ADD       A,#0xa
   \   0000BC   FC           MOV       R4,A
   \   0000BD   E4           CLR       A
   \   0000BE   39           ADDC      A,R1
   \   0000BF   FD           MOV       R5,A
   \   0000C0   7403         MOV       A,#0x3
   \   0000C2   12....       LCALL     ?MOVE_LONG8_XDATA_XDATA
   1096            bdb_reportingClusterEndpointArray[indexSrc].flags = bdb_reportingClusterEndpointArray[indexDest].flags;
   \   0000C5   85..82       MOV       DPL,?V0
   \   0000C8   85..83       MOV       DPH,?V1
   \   0000CB   E0           MOVX      A,@DPTR
   \   0000CC   8882         MOV       DPL,R0
   \   0000CE   8983         MOV       DPH,R1
   \   0000D0   F0           MOVX      @DPTR,A
   1097            bdb_linkedListAttrClearList( &bdb_reportingClusterEndpointArray[indexDest].attrLinkedList );
   \   0000D1                ; Setup parameters for call to function bdb_linkedListAttrClearList
   \   0000D1   12....       LCALL     `??bdb_linkedListAttrClearList::?relay`; Banked call to: bdb_linkedListAttrClearList
   1098          }
   \   0000D4   7F02         MOV       R7,#0x2
   \   0000D6   02....       LJMP      ?BANKED_LEAVE_XDATA
   1099          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1100          static uint8 bdb_clusterEndpointArrayUpdateAt( uint8 index, uint16 newTimeSinceLastReport, uint8 markHasBinding, uint8 markNoNextIncrement )
   \                     bdb_clusterEndpointArrayUpdateAt:
   1101          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   1102            if( index >= bdb_reportingClusterEndpointArrayCount )
   \   000005   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   000008   E0           MOVX      A,@DPTR
   \   000009   F8           MOV       R0,A
   \   00000A   E9           MOV       A,R1
   \   00000B   C3           CLR       C
   \   00000C   98           SUBB      A,R0
   \   00000D   4004         JC        ??bdb_clusterEndpointArrayUpdateAt_0
   1103            {
   1104              return BDBREPORTING_ERROR;
   \   00000F   7901         MOV       R1,#0x1
   \   000011   8051         SJMP      ??bdb_clusterEndpointArrayUpdateAt_1
   1105            }
   1106            bdb_reportingClusterEndpointArray[index].timeSinceLastReport = newTimeSinceLastReport;
   \                     ??bdb_clusterEndpointArrayUpdateAt_0:
   \   000013   E9           MOV       A,R1
   \   000014   75F00D       MOV       B,#0xd
   \   000017   A4           MUL       AB
   \   000018   F8           MOV       R0,A
   \   000019   A9F0         MOV       R1,B
   \   00001B   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   00001D   28           ADD       A,R0
   \   00001E   F8           MOV       R0,A
   \   00001F   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   000021   39           ADDC      A,R1
   \   000022   F9           MOV       R1,A
   \   000023   8882         MOV       DPL,R0
   \   000025   F583         MOV       DPH,A
   \   000027   A3           INC       DPTR
   \   000028   A3           INC       DPTR
   \   000029   A3           INC       DPTR
   \   00002A   A3           INC       DPTR
   \   00002B   A3           INC       DPTR
   \   00002C   A3           INC       DPTR
   \   00002D   A3           INC       DPTR
   \   00002E   A3           INC       DPTR
   \   00002F   EA           MOV       A,R2
   \   000030   F0           MOVX      @DPTR,A
   \   000031   A3           INC       DPTR
   \   000032   EB           MOV       A,R3
   \   000033   F0           MOVX      @DPTR,A
   1107            if( markHasBinding != BDBREPORTING_IGNORE )
   \   000034   74FF         MOV       A,#-0x1
   \   000036   6C           XRL       A,R4
   \   000037   6012         JZ        ??bdb_clusterEndpointArrayUpdateAt_2
   1108            {
   1109              if( markHasBinding == BDBREPORTING_TRUE )
   \   000039   7401         MOV       A,#0x1
   \   00003B   6C           XRL       A,R4
   \   00003C   8882         MOV       DPL,R0
   \   00003E   8983         MOV       DPH,R1
   \   000040   7005         JNZ       ??bdb_clusterEndpointArrayUpdateAt_3
   1110              {
   1111                FLAGS_TURNONFLAG( bdb_reportingClusterEndpointArray[index].flags, BDBREPORTING_HASBINDING_FLAG_MASK );
   \   000042   E0           MOVX      A,@DPTR
   \   000043   D2E0         SETB      0xE0 /* A   */.0
   \   000045   8003         SJMP      ??bdb_clusterEndpointArrayUpdateAt_4
   1112              }
   1113              else
   1114              {
   1115                FLAGS_TURNOFFFLAG( bdb_reportingClusterEndpointArray[index].flags, BDBREPORTING_HASBINDING_FLAG_MASK );
   \                     ??bdb_clusterEndpointArrayUpdateAt_3:
   \   000047   E0           MOVX      A,@DPTR
   \   000048   C2E0         CLR       0xE0 /* A   */.0
   \                     ??bdb_clusterEndpointArrayUpdateAt_4:
   \   00004A   F0           MOVX      @DPTR,A
   1116              }
   1117            }
   1118            if( markNoNextIncrement != BDBREPORTING_IGNORE )
   \                     ??bdb_clusterEndpointArrayUpdateAt_2:
   \   00004B   74FF         MOV       A,#-0x1
   \   00004D   6D           XRL       A,R5
   \   00004E   6012         JZ        ??bdb_clusterEndpointArrayUpdateAt_5
   1119            {
   1120              if( markNoNextIncrement == BDBREPORTING_TRUE )
   \   000050   7401         MOV       A,#0x1
   \   000052   6D           XRL       A,R5
   \   000053   8882         MOV       DPL,R0
   \   000055   8983         MOV       DPH,R1
   \   000057   7005         JNZ       ??bdb_clusterEndpointArrayUpdateAt_6
   1121              {
   1122                FLAGS_TURNONFLAG( bdb_reportingClusterEndpointArray[index].flags, BDBREPORTING_NONEXTINCREMENT_FLAG_MASK );
   \   000059   E0           MOVX      A,@DPTR
   \   00005A   D2E1         SETB      0xE0 /* A   */.1
   \   00005C   8003         SJMP      ??bdb_clusterEndpointArrayUpdateAt_7
   1123              }
   1124              else
   1125              {
   1126                FLAGS_TURNOFFFLAG( bdb_reportingClusterEndpointArray[index].flags, BDBREPORTING_NONEXTINCREMENT_FLAG_MASK );
   \                     ??bdb_clusterEndpointArrayUpdateAt_6:
   \   00005E   E0           MOVX      A,@DPTR
   \   00005F   C2E1         CLR       0xE0 /* A   */.1
   \                     ??bdb_clusterEndpointArrayUpdateAt_7:
   \   000061   F0           MOVX      @DPTR,A
   1127              }
   1128            }
   1129            return BDBREPORTING_SUCCESS;
   \                     ??bdb_clusterEndpointArrayUpdateAt_5:
   \   000062   7900         MOV       R1,#0x0
   \                     ??bdb_clusterEndpointArrayUpdateAt_1:
   \   000064   7F01         MOV       R7,#0x1
   \   000066   02....       LJMP      ?BANKED_LEAVE_XDATA
   1130          }
   1131          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1132          static void bdb_clusterEndpointArrayFreeAll( )
   \                     bdb_clusterEndpointArrayFreeAll:
   1133          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   1134            uint8 i;
   1135            uint8 numElements = bdb_reportingClusterEndpointArrayCount;
   \   000005   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   000008   E0           MOVX      A,@DPTR
   \   000009   FF           MOV       R7,A
   1136            for( i=0; i<numElements; i++ )
   \   00000A   7E00         MOV       R6,#0x0
   \   00000C   8006         SJMP      ??bdb_clusterEndpointArrayFreeAll_0
   1137            {
   1138              bdb_clusterEndpointArrayRemoveAt( 0 );
   \                     ??bdb_clusterEndpointArrayFreeAll_1:
   \   00000E                ; Setup parameters for call to function bdb_clusterEndpointArrayRemoveAt
   \   00000E   7900         MOV       R1,#0x0
   \   000010   12....       LCALL     `??bdb_clusterEndpointArrayRemoveAt::?relay`; Banked call to: bdb_clusterEndpointArrayRemoveAt
   1139            }
   \   000013   0E           INC       R6
   \                     ??bdb_clusterEndpointArrayFreeAll_0:
   \   000014   EE           MOV       A,R6
   \   000015   C3           CLR       C
   \   000016   9F           SUBB      A,R7
   \   000017   40F5         JC        ??bdb_clusterEndpointArrayFreeAll_1
   1140          }
   \   000019   7F01         MOV       R7,#0x1
   \   00001B   02....       LJMP      ?BANKED_LEAVE_XDATA
   1141          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1142          static uint8 bdb_clusterEndpointArraySearch( uint8 endpoint, uint16 cluster )
   \                     bdb_clusterEndpointArraySearch:
   1143          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
   \   000006   FF           MOV       R7,A
   1144            uint8 i;
   1145            uint8 foundIndex = BDBREPORTING_INVALIDINDEX;
   \   000007   79FF         MOV       R1,#-0x1
   1146            for( i=0; i<bdb_reportingClusterEndpointArrayCount; i++ )
   \   000009   7800         MOV       R0,#0x0
   \   00000B   8001         SJMP      ??bdb_clusterEndpointArraySearch_0
   \                     ??bdb_clusterEndpointArraySearch_1:
   \   00000D   08           INC       R0
   \                     ??bdb_clusterEndpointArraySearch_0:
   \   00000E   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   000011   E0           MOVX      A,@DPTR
   \   000012   FC           MOV       R4,A
   \   000013   E8           MOV       A,R0
   \   000014   C3           CLR       C
   \   000015   9C           SUBB      A,R4
   \   000016   502A         JNC       ??bdb_clusterEndpointArraySearch_2
   1147            {
   1148              if( bdb_reportingClusterEndpointArray[i].endpoint == endpoint && bdb_reportingClusterEndpointArray[i].cluster == cluster )
   \   000018   E8           MOV       A,R0
   \   000019   75F00D       MOV       B,#0xd
   \   00001C   A4           MUL       AB
   \   00001D   FC           MOV       R4,A
   \   00001E   ADF0         MOV       R5,B
   \   000020   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   000022   2C           ADD       A,R4
   \   000023   FC           MOV       R4,A
   \   000024   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   000026   3D           ADDC      A,R5
   \   000027   FD           MOV       R5,A
   \   000028   8C82         MOV       DPL,R4
   \   00002A   F583         MOV       DPH,A
   \   00002C   A3           INC       DPTR
   \   00002D   E0           MOVX      A,@DPTR
   \   00002E   6F           XRL       A,R7
   \   00002F   70DC         JNZ       ??bdb_clusterEndpointArraySearch_1
   \   000031   8C82         MOV       DPL,R4
   \   000033   8D83         MOV       DPH,R5
   \   000035   A3           INC       DPTR
   \   000036   A3           INC       DPTR
   \   000037   E0           MOVX      A,@DPTR
   \   000038   6A           XRL       A,R2
   \   000039   7003         JNZ       ??bdb_clusterEndpointArraySearch_3
   \   00003B   A3           INC       DPTR
   \   00003C   E0           MOVX      A,@DPTR
   \   00003D   6B           XRL       A,R3
   \                     ??bdb_clusterEndpointArraySearch_3:
   \   00003E   70CD         JNZ       ??bdb_clusterEndpointArraySearch_1
   1149              {
   1150                foundIndex = i;
   \   000040   E8           MOV       A,R0
   \   000041   F9           MOV       R1,A
   1151                break;
   1152              }
   1153            }
   1154            return foundIndex;
   \                     ??bdb_clusterEndpointArraySearch_2:
   \   000042   7F01         MOV       R7,#0x1
   \   000044   02....       LJMP      ?BANKED_LEAVE_XDATA
   1155          }
   1156          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1157          static void bdb_clusterEndpointArrayIncrementAll( uint16 timeSinceLastReportIncrement, uint8 CheckNoIncrementFlag )
   \                     bdb_clusterEndpointArrayIncrementAll:
   1158          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000   74F2         MOV       A,#-0xe
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   89..         MOV       ?V3,R1
   1159            uint8 i;
   1160            uint8 doIncrement;
   1161            for( i=0; i<bdb_reportingClusterEndpointArrayCount; i++ )
   \   000007   75..00       MOV       ?V2,#0x0
   \   00000A   801E         SJMP      ??bdb_clusterEndpointArrayIncrementAll_0
   1162            {
   1163              doIncrement = BDBREPORTING_FALSE;
   1164              if( FLAGS_CHECKFLAG( bdb_reportingClusterEndpointArray[i].flags, BDBREPORTING_HASBINDING_FLAG_MASK ) == BDBREPORTING_TRUE )
   1165              { 
   1166                //Only do with valid entries (HasBinding==true)
   1167                if( CheckNoIncrementFlag == BDBREPORTING_FALSE )
   1168                {
   1169                  doIncrement = BDBREPORTING_TRUE;
   1170                }
   1171                else
   1172                {
   1173                  if( FLAGS_CHECKFLAG( bdb_reportingClusterEndpointArray[i].flags, BDBREPORTING_NONEXTINCREMENT_FLAG_MASK ) == BDBREPORTING_FALSE )
   1174                  {
   1175                    doIncrement = BDBREPORTING_TRUE;
   1176                  }
   1177                }
   1178                if( doIncrement == BDBREPORTING_TRUE )
   1179                {
   1180                  if( bdb_reportingClusterEndpointArray[i].consolidatedMaxReportInt != BDBREPORTING_NOPERIODIC &&  bdb_reportingClusterEndpointArray[i].consolidatedMaxReportInt != BDBREPORTING_REPORTOFF )
   1181                  {
   1182                    bdb_reportingClusterEndpointArray[i].timeSinceLastReport = (bdb_reportingClusterEndpointArray[i].timeSinceLastReport+timeSinceLastReportIncrement 
   1183                                                                                > bdb_reportingClusterEndpointArray[i].consolidatedMaxReportInt)? 
   1184                                                                                bdb_reportingClusterEndpointArray[i].consolidatedMaxReportInt: 
   1185                                                                                bdb_reportingClusterEndpointArray[i].timeSinceLastReport+timeSinceLastReportIncrement;
   \                     ??bdb_clusterEndpointArrayIncrementAll_1:
   \   00000C   8E82         MOV       DPL,R6
   \   00000E   8F83         MOV       DPH,R7
   \   000010   E0           MOVX      A,@DPTR
   \   000011   2A           ADD       A,R2
   \   000012   FC           MOV       R4,A
   \   000013   A3           INC       DPTR
   \   000014   E0           MOVX      A,@DPTR
   \   000015   3B           ADDC      A,R3
   \                     ??bdb_clusterEndpointArrayIncrementAll_2:
   \   000016   FD           MOV       R5,A
   \   000017   8E82         MOV       DPL,R6
   \   000019   8F83         MOV       DPH,R7
   \   00001B   EC           MOV       A,R4
   \   00001C   F0           MOVX      @DPTR,A
   \   00001D   A3           INC       DPTR
   \   00001E   ED           MOV       A,R5
   \   00001F   F0           MOVX      @DPTR,A
   1186                  }
   1187                }
   1188                FLAGS_TURNOFFFLAG( bdb_reportingClusterEndpointArray[i].flags, BDBREPORTING_NONEXTINCREMENT_FLAG_MASK ); //Always turn off, one shot functionality
   \                     ??bdb_clusterEndpointArrayIncrementAll_3:
   \   000020   8882         MOV       DPL,R0
   \   000022   8983         MOV       DPH,R1
   \   000024   E0           MOVX      A,@DPTR
   \   000025   C2E1         CLR       0xE0 /* A   */.1
   \   000027   F0           MOVX      @DPTR,A
   \                     ??bdb_clusterEndpointArrayIncrementAll_4:
   \   000028   05..         INC       ?V2
   \                     ??bdb_clusterEndpointArrayIncrementAll_0:
   \   00002A   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   00002D   E0           MOVX      A,@DPTR
   \   00002E   F8           MOV       R0,A
   \   00002F   E5..         MOV       A,?V2
   \   000031   C3           CLR       C
   \   000032   98           SUBB      A,R0
   \   000033   507D         JNC       ??bdb_clusterEndpointArrayIncrementAll_5
   \   000035   7C00         MOV       R4,#0x0
   \   000037   E5..         MOV       A,?V2
   \   000039   75F00D       MOV       B,#0xd
   \   00003C   A4           MUL       AB
   \   00003D   F8           MOV       R0,A
   \   00003E   A9F0         MOV       R1,B
   \   000040   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   000042   28           ADD       A,R0
   \   000043   F8           MOV       R0,A
   \   000044   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   000046   39           ADDC      A,R1
   \   000047   F9           MOV       R1,A
   \   000048   8882         MOV       DPL,R0
   \   00004A   F583         MOV       DPH,A
   \   00004C   E0           MOVX      A,@DPTR
   \   00004D   A2E0         MOV       C,0xE0 /* A   */.0
   \   00004F   50D7         JNC       ??bdb_clusterEndpointArrayIncrementAll_4
   \   000051   E5..         MOV       A,?V3
   \   000053   6005         JZ        ??bdb_clusterEndpointArrayIncrementAll_6
   \   000055   E0           MOVX      A,@DPTR
   \   000056   A2E1         MOV       C,0xE0 /* A   */.1
   \   000058   4002         JC        ??bdb_clusterEndpointArrayIncrementAll_7
   \                     ??bdb_clusterEndpointArrayIncrementAll_6:
   \   00005A   7C01         MOV       R4,#0x1
   \                     ??bdb_clusterEndpointArrayIncrementAll_7:
   \   00005C   7401         MOV       A,#0x1
   \   00005E   6C           XRL       A,R4
   \   00005F   70BF         JNZ       ??bdb_clusterEndpointArrayIncrementAll_3
   \   000061   E8           MOV       A,R0
   \   000062   2406         ADD       A,#0x6
   \   000064   FC           MOV       R4,A
   \   000065   E4           CLR       A
   \   000066   39           ADDC      A,R1
   \   000067   FD           MOV       R5,A
   \   000068   8C82         MOV       DPL,R4
   \   00006A   F583         MOV       DPH,A
   \   00006C   E0           MOVX      A,@DPTR
   \   00006D   F5..         MOV       ?V0,A
   \   00006F   A3           INC       DPTR
   \   000070   E0           MOVX      A,@DPTR
   \   000071   F5..         MOV       ?V1,A
   \   000073   E5..         MOV       A,?V0
   \   000075   45..         ORL       A,?V1
   \   000077   60A7         JZ        ??bdb_clusterEndpointArrayIncrementAll_3
   \   000079   74FF         MOV       A,#-0x1
   \   00007B   65..         XRL       A,?V0
   \   00007D   7004         JNZ       ??bdb_clusterEndpointArrayIncrementAll_8
   \   00007F   74FF         MOV       A,#-0x1
   \   000081   65..         XRL       A,?V1
   \                     ??bdb_clusterEndpointArrayIncrementAll_8:
   \   000083   609B         JZ        ??bdb_clusterEndpointArrayIncrementAll_3
   \   000085   E8           MOV       A,R0
   \   000086   2408         ADD       A,#0x8
   \   000088   FE           MOV       R6,A
   \   000089   E4           CLR       A
   \   00008A   39           ADDC      A,R1
   \   00008B   FF           MOV       R7,A
   \   00008C   8E82         MOV       DPL,R6
   \   00008E   F583         MOV       DPH,A
   \   000090   E0           MOVX      A,@DPTR
   \   000091   2A           ADD       A,R2
   \   000092   F5..         MOV       ?V4,A
   \   000094   A3           INC       DPTR
   \   000095   E0           MOVX      A,@DPTR
   \   000096   3B           ADDC      A,R3
   \   000097   F5..         MOV       ?V5,A
   \   000099   C3           CLR       C
   \   00009A   E5..         MOV       A,?V0
   \   00009C   95..         SUBB      A,?V4
   \   00009E   E5..         MOV       A,?V1
   \   0000A0   95..         SUBB      A,?V5
   \   0000A2   4003         JC        $+5
   \   0000A4   02....       LJMP      ??bdb_clusterEndpointArrayIncrementAll_1 & 0xFFFF
   \   0000A7   8C82         MOV       DPL,R4
   \   0000A9   8D83         MOV       DPH,R5
   \   0000AB   E0           MOVX      A,@DPTR
   \   0000AC   FC           MOV       R4,A
   \   0000AD   A3           INC       DPTR
   \   0000AE   E0           MOVX      A,@DPTR
   \   0000AF   02....       LJMP      ??bdb_clusterEndpointArrayIncrementAll_2 & 0xFFFF
   1189                
   1190              }
   1191            }
   1192          }
   \                     ??bdb_clusterEndpointArrayIncrementAll_5:
   \   0000B2   7F06         MOV       R7,#0x6
   \   0000B4   02....       LJMP      ?BANKED_LEAVE_XDATA
   1193          
   1194          /*
   1195          * End: Cluster-endpoint array live data methods
   1196          */
   1197          
   1198          
   1199          /* 
   1200          * Begin: Single linked list default attr cfg records methods
   1201          */
   1202          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1203          static void bdb_repAttrDefaultCfgRecordInitValues( bdbReportAttrDefaultCfgData_t* item )
   \                     bdb_repAttrDefaultCfgRecordInitValues:
   1204          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1205            uint8 i;
   1206            for( i=0; i<BDBREPORTING_MAX_ANALOG_ATTR_SIZE; i++ )
   \   000004   7800         MOV       R0,#0x0
   \   000006   8016         SJMP      ??bdb_repAttrDefaultCfgRecordInitValues_0
   1207            {
   1208              item->reportableChange[i] = 0x00;
   \                     ??bdb_repAttrDefaultCfgRecordInitValues_1:
   \   000008   E8           MOV       A,R0
   \   000009   FC           MOV       R4,A
   \   00000A   EA           MOV       A,R2
   \   00000B   2C           ADD       A,R4
   \   00000C   F582         MOV       DPL,A
   \   00000E   E4           CLR       A
   \   00000F   3B           ADDC      A,R3
   \   000010   F583         MOV       DPH,A
   \   000012   A3           INC       DPTR
   \   000013   A3           INC       DPTR
   \   000014   A3           INC       DPTR
   \   000015   A3           INC       DPTR
   \   000016   A3           INC       DPTR
   \   000017   A3           INC       DPTR
   \   000018   A3           INC       DPTR
   \   000019   A3           INC       DPTR
   \   00001A   A3           INC       DPTR
   \   00001B   E4           CLR       A
   \   00001C   F0           MOVX      @DPTR,A
   1209            }
   \   00001D   08           INC       R0
   \                     ??bdb_repAttrDefaultCfgRecordInitValues_0:
   \   00001E   E8           MOV       A,R0
   \   00001F   C3           CLR       C
   \   000020   9404         SUBB      A,#0x4
   \   000022   40E4         JC        ??bdb_repAttrDefaultCfgRecordInitValues_1
   1210            item->attrID = 0x0000;
   \   000024   8A82         MOV       DPL,R2
   \   000026   8B83         MOV       DPH,R3
   \   000028   A3           INC       DPTR
   \   000029   A3           INC       DPTR
   \   00002A   A3           INC       DPTR
   \   00002B   E4           CLR       A
   \   00002C   F0           MOVX      @DPTR,A
   \   00002D   A3           INC       DPTR
   \   00002E   F0           MOVX      @DPTR,A
   1211            item->endpoint = 0xFF;
   \   00002F   8A82         MOV       DPL,R2
   \   000031   8B83         MOV       DPH,R3
   \   000033   74FF         MOV       A,#-0x1
   \   000035   F0           MOVX      @DPTR,A
   1212            item->cluster = 0xFFFF;
   \   000036   A3           INC       DPTR
   \   000037   F0           MOVX      @DPTR,A
   \   000038   A3           INC       DPTR
   \   000039   F0           MOVX      @DPTR,A
   1213            item->maxReportInt = 0x0000;
   \   00003A   8A82         MOV       DPL,R2
   \   00003C   8B83         MOV       DPH,R3
   \   00003E   A3           INC       DPTR
   \   00003F   A3           INC       DPTR
   \   000040   A3           INC       DPTR
   \   000041   A3           INC       DPTR
   \   000042   A3           INC       DPTR
   \   000043   A3           INC       DPTR
   \   000044   A3           INC       DPTR
   \   000045   E4           CLR       A
   \   000046   F0           MOVX      @DPTR,A
   \   000047   A3           INC       DPTR
   \   000048   F0           MOVX      @DPTR,A
   1214            item->minReportInt = 0x0000;
   \   000049   8A82         MOV       DPL,R2
   \   00004B   8B83         MOV       DPH,R3
   \   00004D   A3           INC       DPTR
   \   00004E   A3           INC       DPTR
   \   00004F   A3           INC       DPTR
   \   000050   A3           INC       DPTR
   \   000051   A3           INC       DPTR
   \   000052   F0           MOVX      @DPTR,A
   \   000053   A3           INC       DPTR
   \   000054   F0           MOVX      @DPTR,A
   1215          }
   \   000055   D083         POP       DPH
   \   000057   D082         POP       DPL
   \   000059   02....       LJMP      ?BRET
   1216          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1217          static void bdb_repAttrDefaultCfgRecordsLinkedListInit( bdbRepAttrDefaultCfgRecordLinkedList_t *list )
   \                     bdb_repAttrDefaultCfgRecordsLinkedListInit:
   1218          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1219            list->head = NULL;
   \   000004   8A82         MOV       DPL,R2
   \   000006   8B83         MOV       DPH,R3
   \   000008   A3           INC       DPTR
   \   000009   E4           CLR       A
   \   00000A   F0           MOVX      @DPTR,A
   \   00000B   A3           INC       DPTR
   \   00000C   F0           MOVX      @DPTR,A
   1220            list->numItems = 0;
   \   00000D   8A82         MOV       DPL,R2
   \   00000F   8B83         MOV       DPH,R3
   \   000011   F0           MOVX      @DPTR,A
   1221          }
   \   000012   D083         POP       DPH
   \   000014   D082         POP       DPL
   \   000016   02....       LJMP      ?BRET
   1222          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1223          static uint8 bdb_repAttrDefaultCfgRecordsLinkedListAdd( bdbRepAttrDefaultCfgRecordLinkedList_t *list, bdbReportAttrDefaultCfgData_t* data )
   \                     bdb_repAttrDefaultCfgRecordsLinkedListAdd:
   1224          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000   74F4         MOV       A,#-0xc
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV       ?V0,R2
   \   000007   8B..         MOV       ?V1,R3
   \   000009   EC           MOV       A,R4
   \   00000A   FE           MOV       R6,A
   \   00000B   ED           MOV       A,R5
   \   00000C   FF           MOV       R7,A
   1225            bdbRepAttrDefaultCfgRecordLinkedListItem_t* newItem = (bdbRepAttrDefaultCfgRecordLinkedListItem_t *)osal_mem_alloc( sizeof(bdbRepAttrDefaultCfgRecordLinkedListItem_t ) );
   \   00000D                ; Setup parameters for call to function osal_mem_alloc
   \   00000D   7A04         MOV       R2,#0x4
   \   00000F   7B00         MOV       R3,#0x0
   \   000011   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   000014   8A..         MOV       ?V2,R2
   \   000016   8B..         MOV       ?V3,R3
   \   000018   A8..         MOV       R0,?V2
   \   00001A   A9..         MOV       R1,?V3
   1226            if( newItem == NULL )
   \   00001C   EA           MOV       A,R2
   \   00001D   49           ORL       A,R1
   \   00001E   7004         JNZ       ??bdb_repAttrDefaultCfgRecordsLinkedListAdd_0
   1227            {
   1228              return BDBREPORTING_ERROR;
   \   000020   7901         MOV       R1,#0x1
   \   000022   8038         SJMP      ??bdb_repAttrDefaultCfgRecordsLinkedListAdd_1
   1229            }
   1230            newItem->data = data;
   \                     ??bdb_repAttrDefaultCfgRecordsLinkedListAdd_0:
   \   000024   8A82         MOV       DPL,R2
   \   000026   8B83         MOV       DPH,R3
   \   000028   EE           MOV       A,R6
   \   000029   F0           MOVX      @DPTR,A
   \   00002A   A3           INC       DPTR
   \   00002B   EF           MOV       A,R7
   \   00002C   F0           MOVX      @DPTR,A
   1231            newItem->next = list->head;
   \   00002D   85..82       MOV       DPL,?V0
   \   000030   85..83       MOV       DPH,?V1
   \   000033   A3           INC       DPTR
   \   000034   AA82         MOV       R2,DPL
   \   000036   AB83         MOV       R3,DPH
   \   000038   E0           MOVX      A,@DPTR
   \   000039   FC           MOV       R4,A
   \   00003A   A3           INC       DPTR
   \   00003B   E0           MOVX      A,@DPTR
   \   00003C   FD           MOV       R5,A
   \   00003D   8882         MOV       DPL,R0
   \   00003F   8983         MOV       DPH,R1
   \   000041   A3           INC       DPTR
   \   000042   A3           INC       DPTR
   \   000043   EC           MOV       A,R4
   \   000044   F0           MOVX      @DPTR,A
   \   000045   A3           INC       DPTR
   \   000046   ED           MOV       A,R5
   \   000047   F0           MOVX      @DPTR,A
   1232            list->head = newItem;
   \   000048   8A82         MOV       DPL,R2
   \   00004A   8B83         MOV       DPH,R3
   \   00004C   E8           MOV       A,R0
   \   00004D   F0           MOVX      @DPTR,A
   \   00004E   A3           INC       DPTR
   \   00004F   E9           MOV       A,R1
   \   000050   F0           MOVX      @DPTR,A
   1233            list->numItems++;
   \   000051   85..82       MOV       DPL,?V0
   \   000054   85..83       MOV       DPH,?V1
   \   000057   E0           MOVX      A,@DPTR
   \   000058   04           INC       A
   \   000059   F0           MOVX      @DPTR,A
   1234            return BDBREPORTING_SUCCESS;
   \   00005A   7900         MOV       R1,#0x0
   \                     ??bdb_repAttrDefaultCfgRecordsLinkedListAdd_1:
   \   00005C   7F04         MOV       R7,#0x4
   \   00005E   02....       LJMP      ?BANKED_LEAVE_XDATA
   1235          }
   1236          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1237          static bdbRepAttrDefaultCfgRecordLinkedListItem_t* bdb_repAttrDefaultCfgRecordsLinkedListSearch( bdbRepAttrDefaultCfgRecordLinkedList_t *list, bdbReportAttrDefaultCfgData_t searchdata )
   \                     bdb_repAttrDefaultCfgRecordsLinkedListSearch:
   1238          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1239            bdbRepAttrDefaultCfgRecordLinkedListItem_t* cur = list->head;
   \   000004   8A82         MOV       DPL,R2
   \   000006   8B83         MOV       DPH,R3
   \   000008   8005         SJMP      ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_0
   1240            while( cur != NULL )
   1241            {
   1242              if( EQUAL_LLISTCFGATTRITEMDATA( (*(cur->data)), searchdata) )
   1243              {
   1244                return cur;
   1245              }
   1246              cur = cur->next;
   \                     ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_1:
   \   00000A   8A82         MOV       DPL,R2
   \   00000C   8B83         MOV       DPH,R3
   \   00000E   A3           INC       DPTR
   \                     ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_0:
   \   00000F   A3           INC       DPTR
   \   000010   E0           MOVX      A,@DPTR
   \   000011   FA           MOV       R2,A
   \   000012   A3           INC       DPTR
   \   000013   E0           MOVX      A,@DPTR
   \   000014   FB           MOV       R3,A
   \   000015   EA           MOV       A,R2
   \   000016   4B           ORL       A,R3
   \   000017   604D         JZ        ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_2
   \   000019   8A82         MOV       DPL,R2
   \   00001B   8B83         MOV       DPH,R3
   \   00001D   E0           MOVX      A,@DPTR
   \   00001E   F8           MOV       R0,A
   \   00001F   A3           INC       DPTR
   \   000020   E0           MOVX      A,@DPTR
   \   000021   F9           MOV       R1,A
   \   000022   8882         MOV       DPL,R0
   \   000024   F583         MOV       DPH,A
   \   000026   E0           MOVX      A,@DPTR
   \   000027   FC           MOV       R4,A
   \   000028   85..82       MOV       DPL,?XSP + 0
   \   00002B   85..83       MOV       DPH,?XSP + 1
   \   00002E   E0           MOVX      A,@DPTR
   \   00002F   6C           XRL       A,R4
   \   000030   70D8         JNZ       ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_1
   \   000032   8882         MOV       DPL,R0
   \   000034   8983         MOV       DPH,R1
   \   000036   A3           INC       DPTR
   \   000037   A3           INC       DPTR
   \   000038   A3           INC       DPTR
   \   000039   E0           MOVX      A,@DPTR
   \   00003A   FC           MOV       R4,A
   \   00003B   A3           INC       DPTR
   \   00003C   E0           MOVX      A,@DPTR
   \   00003D   FD           MOV       R5,A
   \   00003E   7403         MOV       A,#0x3
   \   000040   12....       LCALL     ?XSTACK_DISP0_8
   \   000043   E0           MOVX      A,@DPTR
   \   000044   6C           XRL       A,R4
   \   000045   7003         JNZ       ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_3
   \   000047   A3           INC       DPTR
   \   000048   E0           MOVX      A,@DPTR
   \   000049   6D           XRL       A,R5
   \                     ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_3:
   \   00004A   70BE         JNZ       ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_1
   \   00004C   8882         MOV       DPL,R0
   \   00004E   8983         MOV       DPH,R1
   \   000050   A3           INC       DPTR
   \   000051   E0           MOVX      A,@DPTR
   \   000052   F8           MOV       R0,A
   \   000053   A3           INC       DPTR
   \   000054   E0           MOVX      A,@DPTR
   \   000055   F9           MOV       R1,A
   \   000056   7401         MOV       A,#0x1
   \   000058   12....       LCALL     ?XSTACK_DISP0_8
   \   00005B   E0           MOVX      A,@DPTR
   \   00005C   68           XRL       A,R0
   \   00005D   7003         JNZ       ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_4
   \   00005F   A3           INC       DPTR
   \   000060   E0           MOVX      A,@DPTR
   \   000061   69           XRL       A,R1
   \                     ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_4:
   \   000062   70A6         JNZ       ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_1
   \   000064   8004         SJMP      ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_5
   1247            }
   1248            return NULL;
   \                     ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_2:
   \   000066   7A00         MOV       R2,#0x0
   \   000068   7B00         MOV       R3,#0x0
   \                     ??bdb_repAttrDefaultCfgRecordsLinkedListSearch_5:
   \   00006A   D083         POP       DPH
   \   00006C   D082         POP       DPL
   \   00006E   02....       LJMP      ?BRET
   1249          }
   1250          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1251          static bdbReportAttrDefaultCfgData_t* bdb_repAttrDefaultCfgRecordsLinkedListRemove( bdbRepAttrDefaultCfgRecordLinkedList_t *list )
   \                     bdb_repAttrDefaultCfgRecordsLinkedListRemove:
   1252          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV       ?V0,R2
   \   000007   8B..         MOV       ?V1,R3
   1253            bdbReportAttrDefaultCfgData_t* resdata = NULL;
   1254            bdbRepAttrDefaultCfgRecordLinkedListItem_t* cur = list->head;
   \   000009   8A82         MOV       DPL,R2
   \   00000B   8B83         MOV       DPH,R3
   \   00000D   A3           INC       DPTR
   \   00000E   AC82         MOV       R4,DPL
   \   000010   AD83         MOV       R5,DPH
   \   000012   E0           MOVX      A,@DPTR
   \   000013   F8           MOV       R0,A
   \   000014   A3           INC       DPTR
   \   000015   E0           MOVX      A,@DPTR
   \   000016   F9           MOV       R1,A
   \   000017   E8           MOV       A,R0
   \   000018   FA           MOV       R2,A
   \   000019   E9           MOV       A,R1
   \   00001A   FB           MOV       R3,A
   1255            if( list->head == NULL )
   \   00001B   E8           MOV       A,R0
   \   00001C   49           ORL       A,R1
   \   00001D   7006         JNZ       ??bdb_repAttrDefaultCfgRecordsLinkedListRemove_0
   1256            {
   1257              return NULL;
   \   00001F   7A00         MOV       R2,#0x0
   \   000021   7B00         MOV       R3,#0x0
   \   000023   802D         SJMP      ??bdb_repAttrDefaultCfgRecordsLinkedListRemove_1
   1258            }
   1259            list->head = cur->next;
   \                     ??bdb_repAttrDefaultCfgRecordsLinkedListRemove_0:
   \   000025   8882         MOV       DPL,R0
   \   000027   8983         MOV       DPH,R1
   \   000029   A3           INC       DPTR
   \   00002A   A3           INC       DPTR
   \   00002B   E0           MOVX      A,@DPTR
   \   00002C   F8           MOV       R0,A
   \   00002D   A3           INC       DPTR
   \   00002E   E0           MOVX      A,@DPTR
   \   00002F   F9           MOV       R1,A
   \   000030   8C82         MOV       DPL,R4
   \   000032   8D83         MOV       DPH,R5
   \   000034   E8           MOV       A,R0
   \   000035   F0           MOVX      @DPTR,A
   \   000036   A3           INC       DPTR
   \   000037   E9           MOV       A,R1
   \   000038   F0           MOVX      @DPTR,A
   1260            resdata =cur->data;
   \   000039   8A82         MOV       DPL,R2
   \   00003B   8B83         MOV       DPH,R3
   \   00003D   E0           MOVX      A,@DPTR
   \   00003E   FE           MOV       R6,A
   \   00003F   A3           INC       DPTR
   \   000040   E0           MOVX      A,@DPTR
   \   000041   FF           MOV       R7,A
   1261            osal_mem_free( cur );
   \   000042                ; Setup parameters for call to function osal_mem_free
   \   000042   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
   1262            list->numItems--;
   \   000045   85..82       MOV       DPL,?V0
   \   000048   85..83       MOV       DPH,?V1
   \   00004B   E0           MOVX      A,@DPTR
   \   00004C   14           DEC       A
   \   00004D   F0           MOVX      @DPTR,A
   1263            return resdata;
   \   00004E   EE           MOV       A,R6
   \   00004F   FA           MOV       R2,A
   \   000050   EF           MOV       A,R7
   \   000051   FB           MOV       R3,A
   \                     ??bdb_repAttrDefaultCfgRecordsLinkedListRemove_1:
   \   000052   7F02         MOV       R7,#0x2
   \   000054   02....       LJMP      ?BANKED_LEAVE_XDATA
   1264          }
   1265          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1266          static uint8 bdb_repAttrDefaultCfgRecordsLinkedListFreeAll( bdbRepAttrDefaultCfgRecordLinkedList_t *list )
   \                     bdb_repAttrDefaultCfgRecordsLinkedListFreeAll:
   1267          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV       A,R2
   \   000006   FE           MOV       R6,A
   \   000007   EB           MOV       A,R3
   \   000008   FF           MOV       R7,A
   \   000009   800A         SJMP      ??bdb_repAttrDefaultCfgRecordsLinkedListFreeAll_1
   1268            bdbReportAttrDefaultCfgData_t* toremovedata;
   1269            while( list->head != NULL )
   1270            {
   1271              toremovedata = bdb_repAttrDefaultCfgRecordsLinkedListRemove( list );
   1272              osal_mem_free( toremovedata );
   \                     ??bdb_repAttrDefaultCfgRecordsLinkedListFreeAll_2:
   \   00000B                ; Setup parameters for call to function osal_mem_free
   \   00000B                ; Setup parameters for call to function bdb_repAttrDefaultCfgRecordsLinkedListRemove
   \   00000B   EE           MOV       A,R6
   \   00000C   FA           MOV       R2,A
   \   00000D   EF           MOV       A,R7
   \   00000E   FB           MOV       R3,A
   \   00000F   12....       LCALL     `??bdb_repAttrDefaultCfgRecordsLinkedListRemove:`; Banked call to: bdb_repAttrDefaultCfgRecordsLinkedListRemove
   \   000012   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
   1273            }
   \                     ??bdb_repAttrDefaultCfgRecordsLinkedListFreeAll_1:
   \   000015   8E82         MOV       DPL,R6
   \   000017   8F83         MOV       DPH,R7
   \   000019   A3           INC       DPTR
   \   00001A   E0           MOVX      A,@DPTR
   \   00001B   F8           MOV       R0,A
   \   00001C   A3           INC       DPTR
   \   00001D   E0           MOVX      A,@DPTR
   \   00001E   F9           MOV       R1,A
   \   00001F   E8           MOV       A,R0
   \   000020   49           ORL       A,R1
   \   000021   70E8         JNZ       ??bdb_repAttrDefaultCfgRecordsLinkedListFreeAll_2
   1274            return BDBREPORTING_SUCCESS;
   \   000023   7900         MOV       R1,#0x0
   \   000025   7F01         MOV       R7,#0x1
   \   000027   02....       LJMP      ?BANKED_LEAVE_XDATA
   1275          }
   1276          
   1277          /* 
   1278          * End: Single linked list default attr cfg records methods
   1279          */
   1280          
   1281          
   1282          /*
   1283          * Begin: Reporting attr configuration array methods
   1284          */
   1285          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1286          static void bdb_repAttrCfgRecordsArrayInit( void )
   \                     bdb_repAttrCfgRecordsArrayInit:
   1287          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1288            bdb_reportingAttrCfgRecordsArray = NULL;
   \   000004   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000007   E4           CLR       A
   \   000008   F0           MOVX      @DPTR,A
   \   000009   A3           INC       DPTR
   \   00000A   F0           MOVX      @DPTR,A
   1289            bdb_reportingAttrCfgRecordsArrayCount = 0;
   \   00000B   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   00000E   F0           MOVX      @DPTR,A
   1290          }
   \   00000F   D083         POP       DPH
   \   000011   D082         POP       DPL
   \   000013   02....       LJMP      ?BRET
   1291          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1292          static uint8 bdb_repAttrCfgRecordsArrayCreate( uint8 maxNumRepAttrConfRecords )
   \                     bdb_repAttrCfgRecordsArrayCreate:
   1293          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
   1294            if( maxNumRepAttrConfRecords==0 )
   \   000006   602C         JZ        ??bdb_repAttrCfgRecordsArrayCreate_0
   1295            {
   1296              return BDBREPORTING_SUCCESS;
   1297            }
   1298          
   1299            bdb_reportingAttrCfgRecordsArrayMaxSize = maxNumRepAttrConfRecords;
   \   000008   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayMaxSize
   \   00000B   F0           MOVX      @DPTR,A
   1300            bdb_reportingAttrCfgRecordsArray= (bdbReportAttrCfgData_t *)osal_mem_alloc( sizeof( bdbReportAttrCfgData_t )*bdb_reportingAttrCfgRecordsArrayMaxSize );
   \   00000C                ; Setup parameters for call to function osal_mem_alloc
   \   00000C   E0           MOVX      A,@DPTR
   \   00000D   75F015       MOV       B,#0x15
   \   000010   A4           MUL       AB
   \   000011   FA           MOV       R2,A
   \   000012   ABF0         MOV       R3,B
   \   000014   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   000017   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00001A   EA           MOV       A,R2
   \   00001B   F0           MOVX      @DPTR,A
   \   00001C   A3           INC       DPTR
   \   00001D   EB           MOV       A,R3
   \   00001E   F0           MOVX      @DPTR,A
   1301            bdb_reportingAttrCfgRecordsArrayCount = 0;
   \   00001F   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   000022   E4           CLR       A
   \   000023   F0           MOVX      @DPTR,A
   1302            if( bdb_reportingAttrCfgRecordsArray==NULL )
   \   000024   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000027   E0           MOVX      A,@DPTR
   \   000028   F8           MOV       R0,A
   \   000029   A3           INC       DPTR
   \   00002A   E0           MOVX      A,@DPTR
   \   00002B   F9           MOV       R1,A
   \   00002C   E8           MOV       A,R0
   \   00002D   49           ORL       A,R1
   \   00002E   7004         JNZ       ??bdb_repAttrCfgRecordsArrayCreate_0
   1303            {
   1304              return BDBREPORTING_ERROR;
   \   000030   7901         MOV       R1,#0x1
   \   000032   8002         SJMP      ??bdb_repAttrCfgRecordsArrayCreate_1
   1305            }
   1306            return BDBREPORTING_SUCCESS;
   \                     ??bdb_repAttrCfgRecordsArrayCreate_0:
   \   000034   7900         MOV       R1,#0x0
   \                     ??bdb_repAttrCfgRecordsArrayCreate_1:
   \   000036   7F01         MOV       R7,#0x1
   \   000038   02....       LJMP      ?BANKED_LEAVE_XDATA
   1307          }
   1308          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1309          static uint8 bdb_repAttrCfgRecordsArrayAdd( uint8 endpoint, uint16 cluster, uint16 attrID, uint16 minReportInt, uint16 maxReportInt, uint8  reportableChange[], 
   \                     bdb_repAttrCfgRecordsArrayAdd:
   1310                                                     uint16 defMinReportInt, uint16 defMaxReportInt, uint8 defReportChange[] )
   1311          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000   74F5         MOV       A,#-0xb
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
   \   000006   FE           MOV       R6,A
   1312            if( bdb_reportingAttrCfgRecordsArray==NULL )
   \   000007   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00000A   E0           MOVX      A,@DPTR
   \   00000B   F8           MOV       R0,A
   \   00000C   A3           INC       DPTR
   \   00000D   E0           MOVX      A,@DPTR
   \   00000E   F9           MOV       R1,A
   \   00000F   E8           MOV       A,R0
   \   000010   49           ORL       A,R1
   \   000011   600D         JZ        ??bdb_repAttrCfgRecordsArrayAdd_0
   1313            {
   1314              return BDBREPORTING_ERROR;
   1315            }
   1316            if( bdb_reportingAttrCfgRecordsArrayCount>=bdb_reportingAttrCfgRecordsArrayMaxSize )
   \   000013   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayMaxSize
   \   000016   E0           MOVX      A,@DPTR
   \   000017   F8           MOV       R0,A
   \   000018   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   00001B   E0           MOVX      A,@DPTR
   \   00001C   C3           CLR       C
   \   00001D   98           SUBB      A,R0
   \   00001E   4005         JC        ??bdb_repAttrCfgRecordsArrayAdd_1
   1317            {
   1318              return BDBREPORTING_ERROR;
   \                     ??bdb_repAttrCfgRecordsArrayAdd_0:
   \   000020   7901         MOV       R1,#0x1
   \   000022   02....       LJMP      ??bdb_repAttrCfgRecordsArrayAdd_2 & 0xFFFF
   1319            }
   1320            
   1321            bdb_reportingAttrCfgRecordsArray[bdb_reportingAttrCfgRecordsArrayCount].endpoint = endpoint;
   \                     ??bdb_repAttrCfgRecordsArrayAdd_1:
   \   000025   EE           MOV       A,R6
   \   000026   C0E0         PUSH      A
   \   000028   E0           MOVX      A,@DPTR
   \   000029   75F015       MOV       B,#0x15
   \   00002C   A4           MUL       AB
   \   00002D   F8           MOV       R0,A
   \   00002E   A9F0         MOV       R1,B
   \   000030   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000033   E0           MOVX      A,@DPTR
   \   000034   28           ADD       A,R0
   \   000035   FF           MOV       R7,A
   \   000036   A3           INC       DPTR
   \   000037   E0           MOVX      A,@DPTR
   \   000038   39           ADDC      A,R1
   \   000039   8F82         MOV       DPL,R7
   \   00003B   F583         MOV       DPH,A
   \   00003D   D0E0         POP       A
   \   00003F   F0           MOVX      @DPTR,A
   1322            bdb_reportingAttrCfgRecordsArray[bdb_reportingAttrCfgRecordsArrayCount].cluster = cluster;
   \   000040   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   000043   E0           MOVX      A,@DPTR
   \   000044   75F015       MOV       B,#0x15
   \   000047   A4           MUL       AB
   \   000048   F8           MOV       R0,A
   \   000049   A9F0         MOV       R1,B
   \   00004B   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00004E   E0           MOVX      A,@DPTR
   \   00004F   28           ADD       A,R0
   \   000050   FF           MOV       R7,A
   \   000051   A3           INC       DPTR
   \   000052   E0           MOVX      A,@DPTR
   \   000053   39           ADDC      A,R1
   \   000054   8F82         MOV       DPL,R7
   \   000056   F583         MOV       DPH,A
   \   000058   A3           INC       DPTR
   \   000059   EA           MOV       A,R2
   \   00005A   F0           MOVX      @DPTR,A
   \   00005B   A3           INC       DPTR
   \   00005C   EB           MOV       A,R3
   \   00005D   F0           MOVX      @DPTR,A
   1323            bdb_reportingAttrCfgRecordsArray[bdb_reportingAttrCfgRecordsArrayCount].attrID = attrID;
   \   00005E   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   000061   E0           MOVX      A,@DPTR
   \   000062   75F015       MOV       B,#0x15
   \   000065   A4           MUL       AB
   \   000066   F8           MOV       R0,A
   \   000067   A9F0         MOV       R1,B
   \   000069   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00006C   E0           MOVX      A,@DPTR
   \   00006D   28           ADD       A,R0
   \   00006E   FA           MOV       R2,A
   \   00006F   A3           INC       DPTR
   \   000070   E0           MOVX      A,@DPTR
   \   000071   39           ADDC      A,R1
   \   000072   8A82         MOV       DPL,R2
   \   000074   F583         MOV       DPH,A
   \   000076   A3           INC       DPTR
   \   000077   A3           INC       DPTR
   \   000078   A3           INC       DPTR
   \   000079   EC           MOV       A,R4
   \   00007A   F0           MOVX      @DPTR,A
   \   00007B   A3           INC       DPTR
   \   00007C   ED           MOV       A,R5
   \   00007D   F0           MOVX      @DPTR,A
   1324            bdb_reportingAttrCfgRecordsArray[bdb_reportingAttrCfgRecordsArrayCount].minReportInt = minReportInt;
   \   00007E   740B         MOV       A,#0xb
   \   000080   12....       LCALL     ?XSTACK_DISP0_8
   \   000083   E0           MOVX      A,@DPTR
   \   000084   FA           MOV       R2,A
   \   000085   A3           INC       DPTR
   \   000086   E0           MOVX      A,@DPTR
   \   000087   FB           MOV       R3,A
   \   000088   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   00008B   E0           MOVX      A,@DPTR
   \   00008C   75F015       MOV       B,#0x15
   \   00008F   A4           MUL       AB
   \   000090   F8           MOV       R0,A
   \   000091   A9F0         MOV       R1,B
   \   000093   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000096   E0           MOVX      A,@DPTR
   \   000097   28           ADD       A,R0
   \   000098   FC           MOV       R4,A
   \   000099   A3           INC       DPTR
   \   00009A   E0           MOVX      A,@DPTR
   \   00009B   39           ADDC      A,R1
   \   00009C   8C82         MOV       DPL,R4
   \   00009E   F583         MOV       DPH,A
   \   0000A0   A3           INC       DPTR
   \   0000A1   A3           INC       DPTR
   \   0000A2   A3           INC       DPTR
   \   0000A3   A3           INC       DPTR
   \   0000A4   A3           INC       DPTR
   \   0000A5   EA           MOV       A,R2
   \   0000A6   F0           MOVX      @DPTR,A
   \   0000A7   A3           INC       DPTR
   \   0000A8   EB           MOV       A,R3
   \   0000A9   F0           MOVX      @DPTR,A
   1325            bdb_reportingAttrCfgRecordsArray[bdb_reportingAttrCfgRecordsArrayCount].maxReportInt = maxReportInt;
   \   0000AA   740D         MOV       A,#0xd
   \   0000AC   12....       LCALL     ?XSTACK_DISP0_8
   \   0000AF   E0           MOVX      A,@DPTR
   \   0000B0   FA           MOV       R2,A
   \   0000B1   A3           INC       DPTR
   \   0000B2   E0           MOVX      A,@DPTR
   \   0000B3   FB           MOV       R3,A
   \   0000B4   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   0000B7   E0           MOVX      A,@DPTR
   \   0000B8   75F015       MOV       B,#0x15
   \   0000BB   A4           MUL       AB
   \   0000BC   F8           MOV       R0,A
   \   0000BD   A9F0         MOV       R1,B
   \   0000BF   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   0000C2   E0           MOVX      A,@DPTR
   \   0000C3   28           ADD       A,R0
   \   0000C4   FC           MOV       R4,A
   \   0000C5   A3           INC       DPTR
   \   0000C6   E0           MOVX      A,@DPTR
   \   0000C7   39           ADDC      A,R1
   \   0000C8   8C82         MOV       DPL,R4
   \   0000CA   F583         MOV       DPH,A
   \   0000CC   A3           INC       DPTR
   \   0000CD   A3           INC       DPTR
   \   0000CE   A3           INC       DPTR
   \   0000CF   A3           INC       DPTR
   \   0000D0   A3           INC       DPTR
   \   0000D1   A3           INC       DPTR
   \   0000D2   A3           INC       DPTR
   \   0000D3   EA           MOV       A,R2
   \   0000D4   F0           MOVX      @DPTR,A
   \   0000D5   A3           INC       DPTR
   \   0000D6   EB           MOV       A,R3
   \   0000D7   F0           MOVX      @DPTR,A
   \   0000D8   740F         MOV       A,#0xf
   \   0000DA   12....       LCALL     ?XSTACK_DISP0_8
   \   0000DD   E0           MOVX      A,@DPTR
   \   0000DE   F5..         MOV       ?V0,A
   \   0000E0   A3           INC       DPTR
   \   0000E1   E0           MOVX      A,@DPTR
   \   0000E2   F5..         MOV       ?V1,A
   1326            if( reportableChange!=NULL )
   \   0000E4   E5..         MOV       A,?V0
   \   0000E6   45..         ORL       A,?V1
   \   0000E8   6030         JZ        ??bdb_repAttrCfgRecordsArrayAdd_3
   1327            {
   1328              osal_memcpy( bdb_reportingAttrCfgRecordsArray[bdb_reportingAttrCfgRecordsArrayCount].reportableChange, reportableChange, BDBREPORTING_MAX_ANALOG_ATTR_SIZE );
   \   0000EA                ; Setup parameters for call to function osal_memcpy
   \   0000EA   75..00       MOV       ?V2,#0x0
   \   0000ED   78..         MOV       R0,#?V0
   \   0000EF   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   0000F2   7C04         MOV       R4,#0x4
   \   0000F4   7D00         MOV       R5,#0x0
   \   0000F6   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   0000F9   E0           MOVX      A,@DPTR
   \   0000FA   75F015       MOV       B,#0x15
   \   0000FD   A4           MUL       AB
   \   0000FE   F8           MOV       R0,A
   \   0000FF   A9F0         MOV       R1,B
   \   000101   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000104   E0           MOVX      A,@DPTR
   \   000105   28           ADD       A,R0
   \   000106   F8           MOV       R0,A
   \   000107   A3           INC       DPTR
   \   000108   E0           MOVX      A,@DPTR
   \   000109   39           ADDC      A,R1
   \   00010A   F9           MOV       R1,A
   \   00010B   E8           MOV       A,R0
   \   00010C   240D         ADD       A,#0xd
   \   00010E   FA           MOV       R2,A
   \   00010F   E4           CLR       A
   \   000110   39           ADDC      A,R1
   \   000111   FB           MOV       R3,A
   \   000112   12....       LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
   \   000115   7403         MOV       A,#0x3
   \   000117   12....       LCALL     ?DEALLOC_XSTACK8
   1329            }
   1330            bdb_reportingAttrCfgRecordsArray[bdb_reportingAttrCfgRecordsArrayCount].defaultMinReportInt = defMinReportInt;
   \                     ??bdb_repAttrCfgRecordsArrayAdd_3:
   \   00011A   7411         MOV       A,#0x11
   \   00011C   12....       LCALL     ?XSTACK_DISP0_8
   \   00011F   E0           MOVX      A,@DPTR
   \   000120   FA           MOV       R2,A
   \   000121   A3           INC       DPTR
   \   000122   E0           MOVX      A,@DPTR
   \   000123   FB           MOV       R3,A
   \   000124   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   000127   E0           MOVX      A,@DPTR
   \   000128   75F015       MOV       B,#0x15
   \   00012B   A4           MUL       AB
   \   00012C   F8           MOV       R0,A
   \   00012D   A9F0         MOV       R1,B
   \   00012F   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000132   E0           MOVX      A,@DPTR
   \   000133   28           ADD       A,R0
   \   000134   FC           MOV       R4,A
   \   000135   A3           INC       DPTR
   \   000136   E0           MOVX      A,@DPTR
   \   000137   39           ADDC      A,R1
   \   000138   8C82         MOV       DPL,R4
   \   00013A   F583         MOV       DPH,A
   \   00013C   A3           INC       DPTR
   \   00013D   A3           INC       DPTR
   \   00013E   A3           INC       DPTR
   \   00013F   A3           INC       DPTR
   \   000140   A3           INC       DPTR
   \   000141   A3           INC       DPTR
   \   000142   A3           INC       DPTR
   \   000143   A3           INC       DPTR
   \   000144   A3           INC       DPTR
   \   000145   EA           MOV       A,R2
   \   000146   F0           MOVX      @DPTR,A
   \   000147   A3           INC       DPTR
   \   000148   EB           MOV       A,R3
   \   000149   F0           MOVX      @DPTR,A
   1331            bdb_reportingAttrCfgRecordsArray[bdb_reportingAttrCfgRecordsArrayCount].defaultMaxReportInt = defMaxReportInt;
   \   00014A   7413         MOV       A,#0x13
   \   00014C   12....       LCALL     ?XSTACK_DISP0_8
   \   00014F   E0           MOVX      A,@DPTR
   \   000150   FA           MOV       R2,A
   \   000151   A3           INC       DPTR
   \   000152   E0           MOVX      A,@DPTR
   \   000153   FB           MOV       R3,A
   \   000154   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   000157   E0           MOVX      A,@DPTR
   \   000158   75F015       MOV       B,#0x15
   \   00015B   A4           MUL       AB
   \   00015C   F8           MOV       R0,A
   \   00015D   A9F0         MOV       R1,B
   \   00015F   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000162   E0           MOVX      A,@DPTR
   \   000163   28           ADD       A,R0
   \   000164   F8           MOV       R0,A
   \   000165   A3           INC       DPTR
   \   000166   E0           MOVX      A,@DPTR
   \   000167   39           ADDC      A,R1
   \   000168   F9           MOV       R1,A
   \   000169   E8           MOV       A,R0
   \   00016A   240B         ADD       A,#0xb
   \   00016C   F582         MOV       DPL,A
   \   00016E   E4           CLR       A
   \   00016F   39           ADDC      A,R1
   \   000170   F583         MOV       DPH,A
   \   000172   EA           MOV       A,R2
   \   000173   F0           MOVX      @DPTR,A
   \   000174   A3           INC       DPTR
   \   000175   EB           MOV       A,R3
   \   000176   F0           MOVX      @DPTR,A
   \   000177   7415         MOV       A,#0x15
   \   000179   12....       LCALL     ?XSTACK_DISP0_8
   \   00017C   E0           MOVX      A,@DPTR
   \   00017D   F5..         MOV       ?V0,A
   \   00017F   A3           INC       DPTR
   \   000180   E0           MOVX      A,@DPTR
   \   000181   F5..         MOV       ?V1,A
   1332            if( defReportChange != NULL )
   \   000183   E5..         MOV       A,?V0
   \   000185   45..         ORL       A,?V1
   \   000187   6030         JZ        ??bdb_repAttrCfgRecordsArrayAdd_4
   1333            {
   1334              osal_memcpy( bdb_reportingAttrCfgRecordsArray[bdb_reportingAttrCfgRecordsArrayCount].defaultReportableChange, defReportChange, BDBREPORTING_MAX_ANALOG_ATTR_SIZE );   
   \   000189                ; Setup parameters for call to function osal_memcpy
   \   000189   75..00       MOV       ?V2,#0x0
   \   00018C   78..         MOV       R0,#?V0
   \   00018E   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   000191   7C04         MOV       R4,#0x4
   \   000193   7D00         MOV       R5,#0x0
   \   000195   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   000198   E0           MOVX      A,@DPTR
   \   000199   75F015       MOV       B,#0x15
   \   00019C   A4           MUL       AB
   \   00019D   F8           MOV       R0,A
   \   00019E   A9F0         MOV       R1,B
   \   0001A0   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   0001A3   E0           MOVX      A,@DPTR
   \   0001A4   28           ADD       A,R0
   \   0001A5   F8           MOV       R0,A
   \   0001A6   A3           INC       DPTR
   \   0001A7   E0           MOVX      A,@DPTR
   \   0001A8   39           ADDC      A,R1
   \   0001A9   F9           MOV       R1,A
   \   0001AA   E8           MOV       A,R0
   \   0001AB   2411         ADD       A,#0x11
   \   0001AD   FA           MOV       R2,A
   \   0001AE   E4           CLR       A
   \   0001AF   39           ADDC      A,R1
   \   0001B0   FB           MOV       R3,A
   \   0001B1   12....       LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
   \   0001B4   7403         MOV       A,#0x3
   \   0001B6   12....       LCALL     ?DEALLOC_XSTACK8
   1335            }
   1336            bdb_reportingAttrCfgRecordsArrayCount++;
   \                     ??bdb_repAttrCfgRecordsArrayAdd_4:
   \   0001B9   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   0001BC   E0           MOVX      A,@DPTR
   \   0001BD   04           INC       A
   \   0001BE   F0           MOVX      @DPTR,A
   1337            return BDBREPORTING_SUCCESS;
   \   0001BF   7900         MOV       R1,#0x0
   \                     ??bdb_repAttrCfgRecordsArrayAdd_2:
   \   0001C1   7F03         MOV       R7,#0x3
   \   0001C3   02....       LJMP      ?BANKED_LEAVE_XDATA
   1338          }
   1339          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1340          static void bdb_repAttrCfgRecordsArrayFreeAll( void )
   \                     bdb_repAttrCfgRecordsArrayFreeAll:
   1341          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1342            if( bdb_reportingAttrCfgRecordsArray==NULL )
   \   000004   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000007   E0           MOVX      A,@DPTR
   \   000008   F8           MOV       R0,A
   \   000009   A3           INC       DPTR
   \   00000A   E0           MOVX      A,@DPTR
   \   00000B   F9           MOV       R1,A
   \   00000C   E8           MOV       A,R0
   \   00000D   49           ORL       A,R1
   \   00000E   6016         JZ        ??bdb_repAttrCfgRecordsArrayFreeAll_0
   1343            {
   1344              return;
   1345            }
   1346            osal_mem_free( bdb_reportingAttrCfgRecordsArray );
   \   000010                ; Setup parameters for call to function osal_mem_free
   \   000010   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000013   E0           MOVX      A,@DPTR
   \   000014   FA           MOV       R2,A
   \   000015   A3           INC       DPTR
   \   000016   E0           MOVX      A,@DPTR
   \   000017   FB           MOV       R3,A
   \   000018   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
   1347            bdb_reportingAttrCfgRecordsArrayCount = 0;
   \   00001B   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   00001E   E4           CLR       A
   \   00001F   F0           MOVX      @DPTR,A
   1348            bdb_reportingAttrCfgRecordsArray=NULL;
   \   000020   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000023   F0           MOVX      @DPTR,A
   \   000024   A3           INC       DPTR
   \   000025   F0           MOVX      @DPTR,A
   1349          }
   \                     ??bdb_repAttrCfgRecordsArrayFreeAll_0:
   \   000026   D083         POP       DPH
   \   000028   D082         POP       DPL
   \   00002A   02....       LJMP      ?BRET
   1350          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1351          static uint8 bdb_repAttrCfgRecordsArraySearch( uint8 endpoint, uint16 cluster, uint16 attrID )
   \                     bdb_repAttrCfgRecordsArraySearch:
   1352          {
   \   000000                REQUIRE ?V0
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   89..         MOV       ?V0,R1
   1353            uint8 i;
   1354            if( bdb_reportingAttrCfgRecordsArray == NULL )
   \   000007   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00000A   E0           MOVX      A,@DPTR
   \   00000B   F8           MOV       R0,A
   \   00000C   A3           INC       DPTR
   \   00000D   E0           MOVX      A,@DPTR
   \   00000E   F9           MOV       R1,A
   \   00000F   E8           MOV       A,R0
   \   000010   49           ORL       A,R1
   \   000011   6048         JZ        ??bdb_repAttrCfgRecordsArraySearch_0
   1355            {
   1356              return BDBREPORTING_INVALIDINDEX;
   1357            }
   1358            for( i=0; i<bdb_reportingAttrCfgRecordsArrayCount; i++ )
   \   000013   7E00         MOV       R6,#0x0
   \   000015   8001         SJMP      ??bdb_repAttrCfgRecordsArraySearch_1
   \                     ??bdb_repAttrCfgRecordsArraySearch_2:
   \   000017   0E           INC       R6
   \                     ??bdb_repAttrCfgRecordsArraySearch_1:
   \   000018   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   00001B   E0           MOVX      A,@DPTR
   \   00001C   F8           MOV       R0,A
   \   00001D   EE           MOV       A,R6
   \   00001E   C3           CLR       C
   \   00001F   98           SUBB      A,R0
   \   000020   5039         JNC       ??bdb_repAttrCfgRecordsArraySearch_0
   1359            {
   1360              if( bdb_reportingAttrCfgRecordsArray[i].endpoint == endpoint && bdb_reportingAttrCfgRecordsArray[i].cluster == cluster && bdb_reportingAttrCfgRecordsArray[i].attrID == attrID )
   \   000022   EE           MOV       A,R6
   \   000023   75F015       MOV       B,#0x15
   \   000026   A4           MUL       AB
   \   000027   F8           MOV       R0,A
   \   000028   A9F0         MOV       R1,B
   \   00002A   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00002D   E0           MOVX      A,@DPTR
   \   00002E   28           ADD       A,R0
   \   00002F   F8           MOV       R0,A
   \   000030   A3           INC       DPTR
   \   000031   E0           MOVX      A,@DPTR
   \   000032   39           ADDC      A,R1
   \   000033   F9           MOV       R1,A
   \   000034   8882         MOV       DPL,R0
   \   000036   F583         MOV       DPH,A
   \   000038   E0           MOVX      A,@DPTR
   \   000039   65..         XRL       A,?V0
   \   00003B   70DA         JNZ       ??bdb_repAttrCfgRecordsArraySearch_2
   \   00003D   A3           INC       DPTR
   \   00003E   E0           MOVX      A,@DPTR
   \   00003F   6A           XRL       A,R2
   \   000040   7003         JNZ       ??bdb_repAttrCfgRecordsArraySearch_3
   \   000042   A3           INC       DPTR
   \   000043   E0           MOVX      A,@DPTR
   \   000044   6B           XRL       A,R3
   \                     ??bdb_repAttrCfgRecordsArraySearch_3:
   \   000045   70D0         JNZ       ??bdb_repAttrCfgRecordsArraySearch_2
   \   000047   8882         MOV       DPL,R0
   \   000049   8983         MOV       DPH,R1
   \   00004B   A3           INC       DPTR
   \   00004C   A3           INC       DPTR
   \   00004D   A3           INC       DPTR
   \   00004E   E0           MOVX      A,@DPTR
   \   00004F   6C           XRL       A,R4
   \   000050   7003         JNZ       ??bdb_repAttrCfgRecordsArraySearch_4
   \   000052   A3           INC       DPTR
   \   000053   E0           MOVX      A,@DPTR
   \   000054   6D           XRL       A,R5
   \                     ??bdb_repAttrCfgRecordsArraySearch_4:
   \   000055   70C0         JNZ       ??bdb_repAttrCfgRecordsArraySearch_2
   1361              {
   1362                return i;
   \   000057   EE           MOV       A,R6
   \   000058   F9           MOV       R1,A
   \   000059   8002         SJMP      ??bdb_repAttrCfgRecordsArraySearch_5
   1363              }
   1364            }
   1365            return BDBREPORTING_INVALIDINDEX;
   \                     ??bdb_repAttrCfgRecordsArraySearch_0:
   \   00005B   79FF         MOV       R1,#-0x1
   \                     ??bdb_repAttrCfgRecordsArraySearch_5:
   \   00005D   7F01         MOV       R7,#0x1
   \   00005F   02....       LJMP      ?BANKED_LEAVE_XDATA
   1366          }
   1367          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1368          static uint8 bdb_repAttrCfgRecordsArrayConsolidateValues( uint8 endpoint, uint16 cluster,  uint16* consolidatedMinReportInt, uint16* consolidatedMaxReportInt )
   \                     bdb_repAttrCfgRecordsArrayConsolidateValues:
   1369          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000   74F0         MOV       A,#-0x10
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   89..         MOV       ?V4,R1
   1370            uint8 i;
   1371            *consolidatedMinReportInt =0xFFFF;
   \   000007   8C82         MOV       DPL,R4
   \   000009   8D83         MOV       DPH,R5
   \   00000B   74FF         MOV       A,#-0x1
   \   00000D   F0           MOVX      @DPTR,A
   \   00000E   A3           INC       DPTR
   \   00000F   F0           MOVX      @DPTR,A
   \   000010   7410         MOV       A,#0x10
   \   000012   12....       LCALL     ?XSTACK_DISP0_8
   \   000015   E0           MOVX      A,@DPTR
   \   000016   F8           MOV       R0,A
   \   000017   A3           INC       DPTR
   \   000018   E0           MOVX      A,@DPTR
   \   000019   F9           MOV       R1,A
   \   00001A   E8           MOV       A,R0
   \   00001B   FE           MOV       R6,A
   \   00001C   E9           MOV       A,R1
   \   00001D   FF           MOV       R7,A
   1372            *consolidatedMaxReportInt = 0xFFFF;
   \   00001E   8882         MOV       DPL,R0
   \   000020   F583         MOV       DPH,A
   \   000022   74FF         MOV       A,#-0x1
   \   000024   F0           MOVX      @DPTR,A
   \   000025   A3           INC       DPTR
   \   000026   F0           MOVX      @DPTR,A
   1373            uint8 foundAttr = 0;
   \   000027   75..00       MOV       ?V2,#0x0
   1374            if( bdb_reportingAttrCfgRecordsArray == NULL )
   \   00002A   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00002D   E0           MOVX      A,@DPTR
   \   00002E   F8           MOV       R0,A
   \   00002F   A3           INC       DPTR
   \   000030   E0           MOVX      A,@DPTR
   \   000031   F9           MOV       R1,A
   \   000032   E8           MOV       A,R0
   \   000033   49           ORL       A,R1
   \   000034   7003         JNZ       $+5
   \   000036   02....       LJMP      ??bdb_repAttrCfgRecordsArrayConsolidateValues_0 & 0xFFFF
   1375            {
   1376              return BDBREPORTING_ERROR;
   1377            }
   1378            for( i=0; i<bdb_reportingAttrCfgRecordsArrayCount; i++ )
   \   000039   75..00       MOV       ?V3,#0x0
   \   00003C   02....       LJMP      ??bdb_repAttrCfgRecordsArrayConsolidateValues_1 & 0xFFFF
   1379            {
   1380              if( bdb_reportingAttrCfgRecordsArray[i].endpoint == endpoint && bdb_reportingAttrCfgRecordsArray[i].cluster == cluster )
   \                     ??bdb_repAttrCfgRecordsArrayConsolidateValues_2:
   \   00003F   E5..         MOV       A,?V3
   \   000041   75F015       MOV       B,#0x15
   \   000044   A4           MUL       AB
   \   000045   F8           MOV       R0,A
   \   000046   85F0..       MOV       ?V0,B
   \   000049   A9..         MOV       R1,?V0
   \   00004B   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00004E   E0           MOVX      A,@DPTR
   \   00004F   28           ADD       A,R0
   \   000050   F5..         MOV       ?V0,A
   \   000052   A3           INC       DPTR
   \   000053   E0           MOVX      A,@DPTR
   \   000054   39           ADDC      A,R1
   \   000055   F5..         MOV       ?V1,A
   \   000057   85..82       MOV       DPL,?V0
   \   00005A   F583         MOV       DPH,A
   \   00005C   E0           MOVX      A,@DPTR
   \   00005D   65..         XRL       A,?V4
   \   00005F   7079         JNZ       ??bdb_repAttrCfgRecordsArrayConsolidateValues_3
   \   000061   A3           INC       DPTR
   \   000062   E0           MOVX      A,@DPTR
   \   000063   6A           XRL       A,R2
   \   000064   7003         JNZ       ??bdb_repAttrCfgRecordsArrayConsolidateValues_4
   \   000066   A3           INC       DPTR
   \   000067   E0           MOVX      A,@DPTR
   \   000068   6B           XRL       A,R3
   \                     ??bdb_repAttrCfgRecordsArrayConsolidateValues_4:
   \   000069   706F         JNZ       ??bdb_repAttrCfgRecordsArrayConsolidateValues_3
   1381              {
   1382                foundAttr++;
   \   00006B   05..         INC       ?V2
   \   00006D   85..82       MOV       DPL,?V0
   \   000070   85..83       MOV       DPH,?V1
   \   000073   A3           INC       DPTR
   \   000074   A3           INC       DPTR
   \   000075   A3           INC       DPTR
   \   000076   A3           INC       DPTR
   \   000077   A3           INC       DPTR
   \   000078   E0           MOVX      A,@DPTR
   \   000079   F5..         MOV       ?V6,A
   \   00007B   A3           INC       DPTR
   \   00007C   E0           MOVX      A,@DPTR
   \   00007D   F5..         MOV       ?V7,A
   \   00007F   8C82         MOV       DPL,R4
   \   000081   8D83         MOV       DPH,R5
   \   000083   E0           MOVX      A,@DPTR
   \   000084   F5..         MOV       ?V0,A
   \   000086   A3           INC       DPTR
   \   000087   E0           MOVX      A,@DPTR
   \   000088   F5..         MOV       ?V1,A
   \   00008A   C3           CLR       C
   \   00008B   E5..         MOV       A,?V6
   \   00008D   95..         SUBB      A,?V0
   \   00008F   E5..         MOV       A,?V7
   \   000091   95..         SUBB      A,?V1
   \   000093   500B         JNC       ??bdb_repAttrCfgRecordsArrayConsolidateValues_5
   1383                //Consolidate min value
   1384                if( bdb_reportingAttrCfgRecordsArray[i].minReportInt < *consolidatedMinReportInt )
   1385                {
   1386                  *consolidatedMinReportInt = bdb_reportingAttrCfgRecordsArray[i].minReportInt;
   \   000095   8C82         MOV       DPL,R4
   \   000097   8D83         MOV       DPH,R5
   \   000099   E5..         MOV       A,?V6
   \   00009B   F0           MOVX      @DPTR,A
   \   00009C   A3           INC       DPTR
   \   00009D   E5..         MOV       A,?V7
   \   00009F   F0           MOVX      @DPTR,A
   \                     ??bdb_repAttrCfgRecordsArrayConsolidateValues_5:
   \   0000A0   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   0000A3   E0           MOVX      A,@DPTR
   \   0000A4   28           ADD       A,R0
   \   0000A5   F5..         MOV       ?V0,A
   \   0000A7   A3           INC       DPTR
   \   0000A8   E0           MOVX      A,@DPTR
   \   0000A9   39           ADDC      A,R1
   \   0000AA   85..82       MOV       DPL,?V0
   \   0000AD   F583         MOV       DPH,A
   \   0000AF   A3           INC       DPTR
   \   0000B0   A3           INC       DPTR
   \   0000B1   A3           INC       DPTR
   \   0000B2   A3           INC       DPTR
   \   0000B3   A3           INC       DPTR
   \   0000B4   A3           INC       DPTR
   \   0000B5   A3           INC       DPTR
   \   0000B6   E0           MOVX      A,@DPTR
   \   0000B7   F5..         MOV       ?V0,A
   \   0000B9   A3           INC       DPTR
   \   0000BA   E0           MOVX      A,@DPTR
   \   0000BB   F5..         MOV       ?V1,A
   \   0000BD   8E82         MOV       DPL,R6
   \   0000BF   8F83         MOV       DPH,R7
   \   0000C1   E0           MOVX      A,@DPTR
   \   0000C2   F8           MOV       R0,A
   \   0000C3   A3           INC       DPTR
   \   0000C4   E0           MOVX      A,@DPTR
   \   0000C5   F9           MOV       R1,A
   \   0000C6   C3           CLR       C
   \   0000C7   E5..         MOV       A,?V0
   \   0000C9   98           SUBB      A,R0
   \   0000CA   E5..         MOV       A,?V1
   \   0000CC   99           SUBB      A,R1
   \   0000CD   500B         JNC       ??bdb_repAttrCfgRecordsArrayConsolidateValues_3
   1387                }
   1388                
   1389                //Consolidate max value
   1390                if( bdb_reportingAttrCfgRecordsArray[i].maxReportInt < *consolidatedMaxReportInt )
   1391                {
   1392                  *consolidatedMaxReportInt = bdb_reportingAttrCfgRecordsArray[i].maxReportInt;
   \   0000CF   8E82         MOV       DPL,R6
   \   0000D1   8F83         MOV       DPH,R7
   \   0000D3   E5..         MOV       A,?V0
   \   0000D5   F0           MOVX      @DPTR,A
   \   0000D6   A3           INC       DPTR
   \   0000D7   E5..         MOV       A,?V1
   \   0000D9   F0           MOVX      @DPTR,A
   1393                }
   1394              }
   1395            }
   \                     ??bdb_repAttrCfgRecordsArrayConsolidateValues_3:
   \   0000DA   05..         INC       ?V3
   \                     ??bdb_repAttrCfgRecordsArrayConsolidateValues_1:
   \   0000DC   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   0000DF   E0           MOVX      A,@DPTR
   \   0000E0   F8           MOV       R0,A
   \   0000E1   E5..         MOV       A,?V3
   \   0000E3   C3           CLR       C
   \   0000E4   98           SUBB      A,R0
   \   0000E5   5003         JNC       $+5
   \   0000E7   02....       LJMP      ??bdb_repAttrCfgRecordsArrayConsolidateValues_2 & 0xFFFF
   1396            if( foundAttr==0 )
   \   0000EA   E5..         MOV       A,?V2
   \   0000EC   7004         JNZ       ??bdb_repAttrCfgRecordsArrayConsolidateValues_6
   1397            {
   1398              return BDBREPORTING_ERROR;
   \                     ??bdb_repAttrCfgRecordsArrayConsolidateValues_0:
   \   0000EE   7901         MOV       R1,#0x1
   \   0000F0   8002         SJMP      ??bdb_repAttrCfgRecordsArrayConsolidateValues_7
   1399            }
   1400            return BDBREPORTING_SUCCESS;
   \                     ??bdb_repAttrCfgRecordsArrayConsolidateValues_6:
   \   0000F2   7900         MOV       R1,#0x0
   \                     ??bdb_repAttrCfgRecordsArrayConsolidateValues_7:
   \   0000F4   7F08         MOV       R7,#0x8
   \   0000F6   02....       LJMP      ?BANKED_LEAVE_XDATA
   1401          }
   1402          
   1403          /*
   1404          * End: Reporting attr configuration array methods
   1405          */
   1406                            
   1407          
   1408          /*
   1409          * Begin: Helper methods
   1410          */
   1411          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1412          static uint8 bdb_repAttrBuildClusterEndPointArrayBasedOnConfRecordsArray( void )
   \                     bdb_repAttrBuildClusterEndPointArrayBasedOnConfRecordsArray:
   1413          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000                REQUIRE ?V8
   \   000000                REQUIRE ?V9
   \   000000                REQUIRE ?V10
   \   000000                REQUIRE ?V11
   \   000000   74EC         MOV       A,#-0x14
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 10
   \   000005   74F6         MOV       A,#-0xa
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   1414            uint8 i;
   1415            uint16 consolidatedMinReportInt =0xFFFF;
   \   00000A   7402         MOV       A,#0x2
   \   00000C   12....       LCALL     ?XSTACK_DISP0_8
   \   00000F   74FF         MOV       A,#-0x1
   \   000011   F0           MOVX      @DPTR,A
   \   000012   A3           INC       DPTR
   \   000013   F0           MOVX      @DPTR,A
   1416            uint16 consolidatedMaxReportInt = 0xFFFF;
   \   000014   85..82       MOV       DPL,?XSP + 0
   \   000017   85..83       MOV       DPH,?XSP + 1
   \   00001A   F0           MOVX      @DPTR,A
   \   00001B   A3           INC       DPTR
   \   00001C   F0           MOVX      @DPTR,A
   1417            uint8 status;
   1418            uint8 returnStatus = BDBREPORTING_SUCCESS;
   \   00001D   75..00       MOV       ?V11,#0x0
   1419            if( bdb_reportingAttrCfgRecordsArray == NULL )
   \   000020   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000023   E0           MOVX      A,@DPTR
   \   000024   F8           MOV       R0,A
   \   000025   A3           INC       DPTR
   \   000026   E0           MOVX      A,@DPTR
   \   000027   F9           MOV       R1,A
   \   000028   E8           MOV       A,R0
   \   000029   49           ORL       A,R1
   \   00002A   7005         JNZ       ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_1
   1420            {
   1421              return BDBREPORTING_ERROR;
   \   00002C   7901         MOV       R1,#0x1
   \   00002E   02....       LJMP      ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_2 & 0xFFFF
   1422            }           
   1423            for( i=0; i<bdb_reportingAttrCfgRecordsArrayCount; i++ )
   \                     ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_1:
   \   000031   75..00       MOV       ?V7,#0x0
   \   000034   02....       LJMP      ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_3 & 0xFFFF
   1424            {
   1425              uint16 curEndpoint = bdb_reportingAttrCfgRecordsArray[i].endpoint;
   1426              uint16 curCluster = bdb_reportingAttrCfgRecordsArray[i].cluster;
   1427              //See if there is already a cluster endpoint item
   1428              uint8 searchedIndex = bdb_clusterEndpointArraySearch( curEndpoint, curCluster );
   1429              if(searchedIndex == BDBREPORTING_INVALIDINDEX)
   1430              {
   1431                //Not found, add entry
   1432                status = bdb_repAttrCfgRecordsArrayConsolidateValues( curEndpoint, curCluster, &consolidatedMinReportInt, &consolidatedMaxReportInt );
   1433                if( status == BDBREPORTING_SUCCESS )
   \                     ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_4:
   \   000037                ; Setup parameters for call to function bdb_repAttrCfgRecordsArrayConsolidateValues
   \   000037   A8..         MOV       R0,?XSP + 0
   \   000039   A9..         MOV       R1,?XSP + 1
   \   00003B   88..         MOV       ?V4,R0
   \   00003D   89..         MOV       ?V5,R1
   \   00003F   78..         MOV       R0,#?V4
   \   000041   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000044   7404         MOV       A,#0x4
   \   000046   12....       LCALL     ?XSTACK_DISP102_8
   \   000049   EE           MOV       A,R6
   \   00004A   FA           MOV       R2,A
   \   00004B   EF           MOV       A,R7
   \   00004C   FB           MOV       R3,A
   \   00004D   A9..         MOV       R1,?V0
   \   00004F   12....       LCALL     `??bdb_repAttrCfgRecordsArrayConsolidateValues::`; Banked call to: bdb_repAttrCfgRecordsArrayConsolidateValues
   \   000052   7402         MOV       A,#0x2
   \   000054   12....       LCALL     ?DEALLOC_XSTACK8
   \   000057   E9           MOV       A,R1
   \   000058   6003         JZ        $+5
   \   00005A   02....       LJMP      ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_5 & 0xFFFF
   1434                {
   1435                  status = bdb_clusterEndpointArrayAdd( curEndpoint, curCluster, consolidatedMinReportInt, consolidatedMaxReportInt, 0 );
   1436                  if( status == BDBREPORTING_SUCCESS )
   \   00005D                ; Setup parameters for call to function bdb_clusterEndpointArrayAdd
   \   00005D   E4           CLR       A
   \   00005E   F5..         MOV       ?V4,A
   \   000060   F5..         MOV       ?V5,A
   \   000062   78..         MOV       R0,#?V4
   \   000064   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000067   7402         MOV       A,#0x2
   \   000069   12....       LCALL     ?XSTACK_DISP0_8
   \   00006C   12....       LCALL     ?PUSH_XSTACK8_X_TWO
   \   00006F   7406         MOV       A,#0x6
   \   000071   12....       LCALL     ?XSTACK_DISP0_8
   \   000074   E0           MOVX      A,@DPTR
   \   000075   FC           MOV       R4,A
   \   000076   A3           INC       DPTR
   \   000077   E0           MOVX      A,@DPTR
   \   000078   FD           MOV       R5,A
   \   000079   EE           MOV       A,R6
   \   00007A   FA           MOV       R2,A
   \   00007B   EF           MOV       A,R7
   \   00007C   FB           MOV       R3,A
   \   00007D   A9..         MOV       R1,?V0
   \   00007F   12....       LCALL     `??bdb_clusterEndpointArrayAdd::?relay`; Banked call to: bdb_clusterEndpointArrayAdd
   \   000082   7404         MOV       A,#0x4
   \   000084   12....       LCALL     ?DEALLOC_XSTACK8
   \   000087   E9           MOV       A,R1
   \   000088   6003         JZ        $+5
   \   00008A   02....       LJMP      ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_6 & 0xFFFF
   1437                  {
   1438                    zclAttribute_t zclAttribute;
   1439                    uint8  status;
   1440                    //Add attr value
   1441                    bdbReportAttrLive_t* newItemData;
   1442                    newItemData = (bdbReportAttrLive_t *)osal_mem_alloc( sizeof(bdbReportAttrLive_t) );
   \   00008D                ; Setup parameters for call to function osal_mem_alloc
   \   00008D   7A0A         MOV       R2,#0xa
   \   00008F   7B00         MOV       R3,#0x0
   \   000091   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   000094   8A..         MOV       ?V4,R2
   \   000096   8B..         MOV       ?V5,R3
   1443                    if( newItemData == NULL )
   \   000098   EA           MOV       A,R2
   \   000099   4B           ORL       A,R3
   \   00009A   7003         JNZ       $+5
   \   00009C   02....       LJMP      ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_6 & 0xFFFF
   1444                    {
   1445                      //Out of memory
   1446                      returnStatus = BDBREPORTING_OUTOFMEMORYERROR;
   1447                      break;
   1448                    }
   1449                    bdb_InitReportAttrLiveValues( newItemData );
   \   00009F                ; Setup parameters for call to function bdb_InitReportAttrLiveValues
   \   00009F   12....       LCALL     `??bdb_InitReportAttrLiveValues::?relay`; Banked call to: bdb_InitReportAttrLiveValues
   1450                    newItemData->attrID = bdb_reportingAttrCfgRecordsArray[i].attrID;
   \   0000A2   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   0000A5   E0           MOVX      A,@DPTR
   \   0000A6   25..         ADD       A,?V2
   \   0000A8   F8           MOV       R0,A
   \   0000A9   A3           INC       DPTR
   \   0000AA   E0           MOVX      A,@DPTR
   \   0000AB   35..         ADDC      A,?V3
   \   0000AD   8882         MOV       DPL,R0
   \   0000AF   F583         MOV       DPH,A
   \   0000B1   A3           INC       DPTR
   \   0000B2   A3           INC       DPTR
   \   0000B3   A3           INC       DPTR
   \   0000B4   E0           MOVX      A,@DPTR
   \   0000B5   F8           MOV       R0,A
   \   0000B6   A3           INC       DPTR
   \   0000B7   E0           MOVX      A,@DPTR
   \   0000B8   F9           MOV       R1,A
   \   0000B9   85..82       MOV       DPL,?V4
   \   0000BC   85..83       MOV       DPH,?V5
   \   0000BF   E8           MOV       A,R0
   \   0000C0   F0           MOVX      @DPTR,A
   \   0000C1   A3           INC       DPTR
   \   0000C2   E9           MOV       A,R1
   \   0000C3   F0           MOVX      @DPTR,A
   1451                    osal_memcpy( newItemData->reportableChange, bdb_reportingAttrCfgRecordsArray[i].reportableChange, BDBREPORTING_MAX_ANALOG_ATTR_SIZE );
   \   0000C4                ; Setup parameters for call to function osal_memcpy
   \   0000C4   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   0000C7   E0           MOVX      A,@DPTR
   \   0000C8   25..         ADD       A,?V2
   \   0000CA   F8           MOV       R0,A
   \   0000CB   A3           INC       DPTR
   \   0000CC   E0           MOVX      A,@DPTR
   \   0000CD   35..         ADDC      A,?V3
   \   0000CF   F9           MOV       R1,A
   \   0000D0   E8           MOV       A,R0
   \   0000D1   240D         ADD       A,#0xd
   \   0000D3   F5..         MOV       ?V8,A
   \   0000D5   E4           CLR       A
   \   0000D6   39           ADDC      A,R1
   \   0000D7   F5..         MOV       ?V9,A
   \   0000D9   75..00       MOV       ?V10,#0x0
   \   0000DC   78..         MOV       R0,#?V8
   \   0000DE   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   0000E1   7C04         MOV       R4,#0x4
   \   0000E3   7D00         MOV       R5,#0x0
   \   0000E5   E5..         MOV       A,?V4
   \   0000E7   2406         ADD       A,#0x6
   \   0000E9   FA           MOV       R2,A
   \   0000EA   E4           CLR       A
   \   0000EB   35..         ADDC      A,?V5
   \   0000ED   FB           MOV       R3,A
   \   0000EE   12....       LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
   \   0000F1   7403         MOV       A,#0x3
   \   0000F3   12....       LCALL     ?DEALLOC_XSTACK8
   1452                    
   1453                    //Read the attribute to keep the table updated
   1454                    if(BDBREPORTING_TRUE == bdb_RepFindAttrEntry(curEndpoint,curCluster,newItemData->attrID,&zclAttribute))
   \   0000F6                ; Setup parameters for call to function bdb_RepFindAttrEntry
   \   0000F6   7404         MOV       A,#0x4
   \   0000F8   12....       LCALL     ?XSTACK_DISP100_8
   \   0000FB   88..         MOV       ?V2,R0
   \   0000FD   89..         MOV       ?V3,R1
   \   0000FF   78..         MOV       R0,#?V2
   \   000101   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000104   85..82       MOV       DPL,?V4
   \   000107   85..83       MOV       DPH,?V5
   \   00010A   E0           MOVX      A,@DPTR
   \   00010B   FC           MOV       R4,A
   \   00010C   A3           INC       DPTR
   \   00010D   E0           MOVX      A,@DPTR
   \   00010E   FD           MOV       R5,A
   \   00010F   EE           MOV       A,R6
   \   000110   FA           MOV       R2,A
   \   000111   EF           MOV       A,R7
   \   000112   FB           MOV       R3,A
   \   000113   A9..         MOV       R1,?V0
   \   000115   12....       LCALL     `??bdb_RepFindAttrEntry::?relay`; Banked call to: bdb_RepFindAttrEntry
   \   000118   7402         MOV       A,#0x2
   \   00011A   12....       LCALL     ?DEALLOC_XSTACK8
   \   00011D   E9           MOV       A,R1
   \   00011E   6401         XRL       A,#0x1
   \   000120   7029         JNZ       ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_7
   1455                    {
   1456                      osal_memcpy(newItemData->lastValueReported, zclAttribute.dataPtr,BDBREPORTING_MAX_ANALOG_ATTR_SIZE);
   \   000122                ; Setup parameters for call to function osal_memcpy
   \   000122   7408         MOV       A,#0x8
   \   000124   12....       LCALL     ?XSTACK_DISP0_8
   \   000127   E0           MOVX      A,@DPTR
   \   000128   F5..         MOV       ?V0,A
   \   00012A   A3           INC       DPTR
   \   00012B   E0           MOVX      A,@DPTR
   \   00012C   F5..         MOV       ?V1,A
   \   00012E   75..00       MOV       ?V2,#0x0
   \   000131   78..         MOV       R0,#?V0
   \   000133   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   000136   7C04         MOV       R4,#0x4
   \   000138   7D00         MOV       R5,#0x0
   \   00013A   E5..         MOV       A,?V4
   \   00013C   2402         ADD       A,#0x2
   \   00013E   FA           MOV       R2,A
   \   00013F   E4           CLR       A
   \   000140   35..         ADDC      A,?V5
   \   000142   FB           MOV       R3,A
   \   000143   12....       LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
   \   000146   7403         MOV       A,#0x3
   \   000148   12....       LCALL     ?DEALLOC_XSTACK8
   1457                    }          
   1458                    
   1459                    status = bdb_linkedListAttrAdd( &(bdb_reportingClusterEndpointArray[bdb_reportingClusterEndpointArrayCount-1].attrLinkedList), newItemData );
   1460                    if( status == BDBREPORTING_ERROR )
   \                     ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_7:
   \   00014B                ; Setup parameters for call to function bdb_linkedListAttrAdd
   \   00014B   AC..         MOV       R4,?V4
   \   00014D   AD..         MOV       R5,?V5
   \   00014F   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   000152   E0           MOVX      A,@DPTR
   \   000153   75F00D       MOV       B,#0xd
   \   000156   A4           MUL       AB
   \   000157   F8           MOV       R0,A
   \   000158   A9F0         MOV       R1,B
   \   00015A   74..         MOV       A,#(bdb_reportingClusterEndpointArray + 253) & 0xff
   \   00015C   28           ADD       A,R0
   \   00015D   FA           MOV       R2,A
   \   00015E   74..         MOV       A,#((bdb_reportingClusterEndpointArray - 3) >> 8) & 0xff
   \   000160   39           ADDC      A,R1
   \   000161   FB           MOV       R3,A
   \   000162   12....       LCALL     `??bdb_linkedListAttrAdd::?relay`; Banked call to: bdb_linkedListAttrAdd
   \   000165   E9           MOV       A,R1
   \   000166   6401         XRL       A,#0x1
   \   000168   7003         JNZ       $+5
   \   00016A   02....       LJMP      ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_6 & 0xFFFF
   1461                    {
   1462                      returnStatus = BDBREPORTING_OUTOFMEMORYERROR;
   1463                      break;
   1464                    }
   1465                  }
   1466                  else
   1467                  {
   1468                    //Out of memory,
   1469                    returnStatus = BDBREPORTING_OUTOFMEMORYERROR;
   1470                    break;
   1471                  }
   1472                }
   1473              }
   \                     ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_5:
   \   00016D   05..         INC       ?V7
   \                     ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_3:
   \   00016F   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   000172   E0           MOVX      A,@DPTR
   \   000173   F8           MOV       R0,A
   \   000174   E5..         MOV       A,?V7
   \   000176   C3           CLR       C
   \   000177   98           SUBB      A,R0
   \   000178   4003         JC        $+5
   \   00017A   02....       LJMP      ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_8 & 0xFFFF
   \   00017D   E5..         MOV       A,?V7
   \   00017F   75F015       MOV       B,#0x15
   \   000182   A4           MUL       AB
   \   000183   F5..         MOV       ?V2,A
   \   000185   E5F0         MOV       A,B
   \   000187   F5..         MOV       ?V3,A
   \   000189   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00018C   E0           MOVX      A,@DPTR
   \   00018D   25..         ADD       A,?V2
   \   00018F   F8           MOV       R0,A
   \   000190   A3           INC       DPTR
   \   000191   E0           MOVX      A,@DPTR
   \   000192   35..         ADDC      A,?V3
   \   000194   8882         MOV       DPL,R0
   \   000196   F583         MOV       DPH,A
   \   000198   E0           MOVX      A,@DPTR
   \   000199   F5..         MOV       ?V0,A
   \   00019B   A3           INC       DPTR
   \   00019C   E0           MOVX      A,@DPTR
   \   00019D   FE           MOV       R6,A
   \   00019E   A3           INC       DPTR
   \   00019F   E0           MOVX      A,@DPTR
   \   0001A0   FF           MOV       R7,A
   \   0001A1                ; Setup parameters for call to function bdb_clusterEndpointArraySearch
   \   0001A1   EE           MOV       A,R6
   \   0001A2   FA           MOV       R2,A
   \   0001A3   EF           MOV       A,R7
   \   0001A4   FB           MOV       R3,A
   \   0001A5   A9..         MOV       R1,?V0
   \   0001A7   12....       LCALL     `??bdb_clusterEndpointArraySearch::?relay`; Banked call to: bdb_clusterEndpointArraySearch
   \   0001AA   E9           MOV       A,R1
   \   0001AB   F5..         MOV       ?V6,A
   \   0001AD   74FF         MOV       A,#-0x1
   \   0001AF   69           XRL       A,R1
   \   0001B0   7003         JNZ       $+5
   \   0001B2   02....       LJMP      ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_4 & 0xFFFF
   1474              else
   1475              {
   1476                zclAttribute_t zclAttribute;
   1477                uint8  status;
   1478                //Entry found, just add attr data to linked list
   1479                bdbReportAttrLive_t* newItemData;
   1480                newItemData = (bdbReportAttrLive_t *)osal_mem_alloc( sizeof( bdbReportAttrLive_t ) );
   \   0001B5                ; Setup parameters for call to function osal_mem_alloc
   \   0001B5   7A0A         MOV       R2,#0xa
   \   0001B7   7B00         MOV       R3,#0x0
   \   0001B9   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   0001BC   8A..         MOV       ?V4,R2
   \   0001BE   8B..         MOV       ?V5,R3
   1481                if( newItemData == NULL )
   \   0001C0   EA           MOV       A,R2
   \   0001C1   4B           ORL       A,R3
   \   0001C2   7003         JNZ       $+5
   \   0001C4   02....       LJMP      ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_6 & 0xFFFF
   1482                {
   1483                  returnStatus = BDBREPORTING_OUTOFMEMORYERROR;
   1484                  break;
   1485                }
   1486                bdb_InitReportAttrLiveValues( newItemData );
   \   0001C7                ; Setup parameters for call to function bdb_InitReportAttrLiveValues
   \   0001C7   12....       LCALL     `??bdb_InitReportAttrLiveValues::?relay`; Banked call to: bdb_InitReportAttrLiveValues
   1487                newItemData->attrID = bdb_reportingAttrCfgRecordsArray[i].attrID;
   \   0001CA   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   0001CD   E0           MOVX      A,@DPTR
   \   0001CE   25..         ADD       A,?V2
   \   0001D0   F8           MOV       R0,A
   \   0001D1   A3           INC       DPTR
   \   0001D2   E0           MOVX      A,@DPTR
   \   0001D3   35..         ADDC      A,?V3
   \   0001D5   8882         MOV       DPL,R0
   \   0001D7   F583         MOV       DPH,A
   \   0001D9   A3           INC       DPTR
   \   0001DA   A3           INC       DPTR
   \   0001DB   A3           INC       DPTR
   \   0001DC   E0           MOVX      A,@DPTR
   \   0001DD   F8           MOV       R0,A
   \   0001DE   A3           INC       DPTR
   \   0001DF   E0           MOVX      A,@DPTR
   \   0001E0   F9           MOV       R1,A
   \   0001E1   85..82       MOV       DPL,?V4
   \   0001E4   85..83       MOV       DPH,?V5
   \   0001E7   E8           MOV       A,R0
   \   0001E8   F0           MOVX      @DPTR,A
   \   0001E9   A3           INC       DPTR
   \   0001EA   E9           MOV       A,R1
   \   0001EB   F0           MOVX      @DPTR,A
   1488                osal_memcpy( newItemData->reportableChange, bdb_reportingAttrCfgRecordsArray[i].reportableChange, BDBREPORTING_MAX_ANALOG_ATTR_SIZE );
   \   0001EC                ; Setup parameters for call to function osal_memcpy
   \   0001EC   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   0001EF   E0           MOVX      A,@DPTR
   \   0001F0   25..         ADD       A,?V2
   \   0001F2   F8           MOV       R0,A
   \   0001F3   A3           INC       DPTR
   \   0001F4   E0           MOVX      A,@DPTR
   \   0001F5   35..         ADDC      A,?V3
   \   0001F7   F9           MOV       R1,A
   \   0001F8   E8           MOV       A,R0
   \   0001F9   240D         ADD       A,#0xd
   \   0001FB   F5..         MOV       ?V8,A
   \   0001FD   E4           CLR       A
   \   0001FE   39           ADDC      A,R1
   \   0001FF   F5..         MOV       ?V9,A
   \   000201   75..00       MOV       ?V10,#0x0
   \   000204   78..         MOV       R0,#?V8
   \   000206   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   000209   7C04         MOV       R4,#0x4
   \   00020B   7D00         MOV       R5,#0x0
   \   00020D   E5..         MOV       A,?V4
   \   00020F   2406         ADD       A,#0x6
   \   000211   FA           MOV       R2,A
   \   000212   E4           CLR       A
   \   000213   35..         ADDC      A,?V5
   \   000215   FB           MOV       R3,A
   \   000216   12....       LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
   \   000219   7403         MOV       A,#0x3
   \   00021B   12....       LCALL     ?DEALLOC_XSTACK8
   1489          
   1490                //Read the attribute to keep the table updated
   1491                if(BDBREPORTING_TRUE == bdb_RepFindAttrEntry(curEndpoint,curCluster,newItemData->attrID,&zclAttribute))
   \   00021E                ; Setup parameters for call to function bdb_RepFindAttrEntry
   \   00021E   7404         MOV       A,#0x4
   \   000220   12....       LCALL     ?XSTACK_DISP100_8
   \   000223   88..         MOV       ?V2,R0
   \   000225   89..         MOV       ?V3,R1
   \   000227   78..         MOV       R0,#?V2
   \   000229   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00022C   85..82       MOV       DPL,?V4
   \   00022F   85..83       MOV       DPH,?V5
   \   000232   E0           MOVX      A,@DPTR
   \   000233   FC           MOV       R4,A
   \   000234   A3           INC       DPTR
   \   000235   E0           MOVX      A,@DPTR
   \   000236   FD           MOV       R5,A
   \   000237   EE           MOV       A,R6
   \   000238   FA           MOV       R2,A
   \   000239   EF           MOV       A,R7
   \   00023A   FB           MOV       R3,A
   \   00023B   A9..         MOV       R1,?V0
   \   00023D   12....       LCALL     `??bdb_RepFindAttrEntry::?relay`; Banked call to: bdb_RepFindAttrEntry
   \   000240   7402         MOV       A,#0x2
   \   000242   12....       LCALL     ?DEALLOC_XSTACK8
   \   000245   E9           MOV       A,R1
   \   000246   6401         XRL       A,#0x1
   \   000248   7029         JNZ       ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_9
   1492                {
   1493                  osal_memcpy(newItemData->lastValueReported, zclAttribute.dataPtr,BDBREPORTING_MAX_ANALOG_ATTR_SIZE);
   \   00024A                ; Setup parameters for call to function osal_memcpy
   \   00024A   7408         MOV       A,#0x8
   \   00024C   12....       LCALL     ?XSTACK_DISP0_8
   \   00024F   E0           MOVX      A,@DPTR
   \   000250   F5..         MOV       ?V0,A
   \   000252   A3           INC       DPTR
   \   000253   E0           MOVX      A,@DPTR
   \   000254   F5..         MOV       ?V1,A
   \   000256   75..00       MOV       ?V2,#0x0
   \   000259   78..         MOV       R0,#?V0
   \   00025B   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   00025E   7C04         MOV       R4,#0x4
   \   000260   7D00         MOV       R5,#0x0
   \   000262   E5..         MOV       A,?V4
   \   000264   2402         ADD       A,#0x2
   \   000266   FA           MOV       R2,A
   \   000267   E4           CLR       A
   \   000268   35..         ADDC      A,?V5
   \   00026A   FB           MOV       R3,A
   \   00026B   12....       LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
   \   00026E   7403         MOV       A,#0x3
   \   000270   12....       LCALL     ?DEALLOC_XSTACK8
   1494                }
   1495                
   1496                status = bdb_linkedListAttrAdd( &(bdb_reportingClusterEndpointArray[searchedIndex].attrLinkedList), newItemData );
   1497                if( status == BDBREPORTING_ERROR )
   \                     ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_9:
   \   000273                ; Setup parameters for call to function bdb_linkedListAttrAdd
   \   000273   AC..         MOV       R4,?V4
   \   000275   AD..         MOV       R5,?V5
   \   000277   E5..         MOV       A,?V6
   \   000279   75F00D       MOV       B,#0xd
   \   00027C   A4           MUL       AB
   \   00027D   F8           MOV       R0,A
   \   00027E   A9F0         MOV       R1,B
   \   000280   74..         MOV       A,#(bdb_reportingClusterEndpointArray + 10) & 0xff
   \   000282   28           ADD       A,R0
   \   000283   FA           MOV       R2,A
   \   000284   74..         MOV       A,#((bdb_reportingClusterEndpointArray + 10) >> 8) & 0xff
   \   000286   39           ADDC      A,R1
   \   000287   FB           MOV       R3,A
   \   000288   12....       LCALL     `??bdb_linkedListAttrAdd::?relay`; Banked call to: bdb_linkedListAttrAdd
   \   00028B   E9           MOV       A,R1
   \   00028C   6401         XRL       A,#0x1
   \   00028E   6003         JZ        $+5
   \   000290   02....       LJMP      ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_5 & 0xFFFF
   1498                {
   1499                  returnStatus = BDBREPORTING_OUTOFMEMORYERROR;
   \                     ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_6:
   \   000293   75..02       MOV       ?V11,#0x2
   1500                  break;
   1501                }
   1502              
   1503              }
   1504            }
   1505            return returnStatus;
   \                     ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_8:
   \   000296   A9..         MOV       R1,?V11
   \                     ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo_2:
   \   000298   740A         MOV       A,#0xa
   \   00029A   12....       LCALL     ?DEALLOC_XSTACK8
   \   00029D   7F0C         MOV       R7,#0xc
   \   00029F   02....       LJMP      ?BANKED_LEAVE_XDATA
   1506          }
   1507          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1508          static void bdb_RepInitAttrCfgRecords( void )
   \                     bdb_RepInitAttrCfgRecords:
   1509          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   1510            bdb_RepConstructAttrCfgArray( ); //Here bdb_reportingAttrCfgRecordsArray is filled
   \   000005                ; Setup parameters for call to function bdb_RepConstructAttrCfgArray
   \   000005   12....       LCALL     `??bdb_RepConstructAttrCfgArray::?relay`; Banked call to: bdb_RepConstructAttrCfgArray
   1511            
   1512            uint8 status = osal_nv_item_init( ZCD_NV_BDBREPORTINGCONFIG, sizeof( bdbReportAttrCfgData_t )*bdb_reportingAttrCfgRecordsArrayCount, bdb_reportingAttrCfgRecordsArray );
   \   000008                ; Setup parameters for call to function osal_nv_item_init
   \   000008   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00000B   12....       LCALL     ?PUSH_XSTACK8_X_TWO
   \   00000E   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   000011   E0           MOVX      A,@DPTR
   \   000012   75F015       MOV       B,#0x15
   \   000015   A4           MUL       AB
   \   000016   FC           MOV       R4,A
   \   000017   ADF0         MOV       R5,B
   \   000019   7A56         MOV       R2,#0x56
   \   00001B   7B00         MOV       R3,#0x0
   \   00001D   12....       LCALL     `??osal_nv_item_init::?relay`; Banked call to: osal_nv_item_init
   \   000020   7402         MOV       A,#0x2
   \   000022   12....       LCALL     ?DEALLOC_XSTACK8
   \   000025   E9           MOV       A,R1
   \   000026   F8           MOV       R0,A
   1513            if( status == NV_OPER_FAILED )
   \   000027   740A         MOV       A,#0xa
   \   000029   68           XRL       A,R0
   \   00002A   6057         JZ        ??bdb_RepInitAttrCfgRecords_0
   1514            {
   1515              return;
   1516            }
   1517            else
   1518            {
   1519                if( status == NV_ITEM_UNINIT )
   \   00002C   7409         MOV       A,#0x9
   \   00002E   68           XRL       A,R0
   \   00002F   604B         JZ        ??bdb_RepInitAttrCfgRecords_1
   1520                {
   1521                  //Do nothing because the reporting cf array data was written in the osal_nv_item method
   1522                }
   1523                else
   1524                {
   1525                  //SUCCESS, There is NV data, read the data
   1526                  bdb_repAttrCfgRecordsArrayFreeAll(); //Clear previous cfg data
   \   000031                ; Setup parameters for call to function bdb_repAttrCfgRecordsArrayFreeAll
   \   000031   12....       LCALL     `??bdb_repAttrCfgRecordsArrayFreeAll::?relay`; Banked call to: bdb_repAttrCfgRecordsArrayFreeAll
   1527                  uint16 sizeNVRecord = osal_nv_item_len(ZCD_NV_BDBREPORTINGCONFIG);
   1528                  uint8 attrCfgRecordsArrayCount = sizeNVRecord / sizeof(bdbReportAttrCfgData_t);
   \   000034                ; Setup parameters for call to function osal_nv_item_len
   \   000034   7A56         MOV       R2,#0x56
   \   000036   7B00         MOV       R3,#0x0
   \   000038   12....       LCALL     `??osal_nv_item_len::?relay`; Banked call to: osal_nv_item_len
   \   00003B   EA           MOV       A,R2
   \   00003C   F8           MOV       R0,A
   \   00003D   EB           MOV       A,R3
   \   00003E   F9           MOV       R1,A
   \   00003F   7A15         MOV       R2,#0x15
   \   000041   7B00         MOV       R3,#0x0
   \   000043   12....       LCALL     ?US_DIV_MOD
   \   000046   E8           MOV       A,R0
   \   000047   FE           MOV       R6,A
   1529                  
   1530                  status =  bdb_repAttrCfgRecordsArrayCreate(attrCfgRecordsArrayCount);
   1531                  if( status == BDBREPORTING_ERROR )
   \   000048                ; Setup parameters for call to function bdb_repAttrCfgRecordsArrayCreate
   \   000048   F9           MOV       R1,A
   \   000049   12....       LCALL     `??bdb_repAttrCfgRecordsArrayCreate::?relay`; Banked call to: bdb_repAttrCfgRecordsArrayCreate
   \   00004C   E9           MOV       A,R1
   \   00004D   6401         XRL       A,#0x1
   \   00004F   6032         JZ        ??bdb_RepInitAttrCfgRecords_0
   1532                  {
   1533                    return; // No memory
   1534                  }
   1535                  osal_nv_read( ZCD_NV_BDBREPORTINGCONFIG,0, sizeof( bdbReportAttrCfgData_t )*attrCfgRecordsArrayCount ,bdb_reportingAttrCfgRecordsArray );
   \   000051                ; Setup parameters for call to function osal_nv_read
   \   000051   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   000054   12....       LCALL     ?PUSH_XSTACK8_X_TWO
   \   000057   EE           MOV       A,R6
   \   000058   75F015       MOV       B,#0x15
   \   00005B   A4           MUL       AB
   \   00005C   F5..         MOV       ?V0,A
   \   00005E   E5F0         MOV       A,B
   \   000060   F5..         MOV       ?V1,A
   \   000062   78..         MOV       R0,#?V0
   \   000064   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000067   7C00         MOV       R4,#0x0
   \   000069   7D00         MOV       R5,#0x0
   \   00006B   7A56         MOV       R2,#0x56
   \   00006D   7B00         MOV       R3,#0x0
   \   00006F   12....       LCALL     `??osal_nv_read::?relay`; Banked call to: osal_nv_read
   \   000072   7404         MOV       A,#0x4
   \   000074   12....       LCALL     ?DEALLOC_XSTACK8
   1536                  bdb_reportingAttrCfgRecordsArrayCount = attrCfgRecordsArrayCount;
   \   000077   EE           MOV       A,R6
   \   000078   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   00007B   F0           MOVX      @DPTR,A
   1537                }     
   1538            }  
   1539            
   1540            bdb_repAttrDefaultCfgRecordsLinkedListFreeAll( &attrDefaultCfgRecordLinkedList ); //Free the attr default cfg list
   \                     ??bdb_RepInitAttrCfgRecords_1:
   \   00007C                ; Setup parameters for call to function bdb_repAttrDefaultCfgRecordsLinkedListFreeAll
   \   00007C   7A..         MOV       R2,#attrDefaultCfgRecordLinkedList & 0xff
   \   00007E   7B..         MOV       R3,#(attrDefaultCfgRecordLinkedList >> 8) & 0xff
   \   000080   12....       LCALL     ??bdb_repAttrDefaultCfgRecordsLinkedListFreeAll; Banked call to: bdb_repAttrDefaultCfgRecordsLinkedListFreeAll
   1541          }
   \                     ??bdb_RepInitAttrCfgRecords_0:
   \   000083   7F02         MOV       R7,#0x2
   \   000085   02....       LJMP      ?BANKED_LEAVE_XDATA
   1542          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1543          static uint8 bdb_RepConstructAttrCfgArray( void )
   \                     bdb_RepConstructAttrCfgArray:
   1544          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000                REQUIRE ?V8
   \   000000                REQUIRE ?V9
   \   000000                REQUIRE ?V10
   \   000000                REQUIRE ?V11
   \   000000                REQUIRE ?V12
   \   000000                REQUIRE ?V13
   \   000000   74EA         MOV       A,#-0x16
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 22
   \   000005                ; Auto size: 17
   \   000005   74EF         MOV       A,#-0x11
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   1545             epList_t *epCur =  epList;
   1546             uint8 status;
   1547             uint8 i;
   1548             
   1549             if( bdb_reportingAttrCfgRecordsArray != NULL )
   \   00000A   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00000D   E0           MOVX      A,@DPTR
   \   00000E   F8           MOV       R0,A
   \   00000F   A3           INC       DPTR
   \   000010   E0           MOVX      A,@DPTR
   \   000011   F9           MOV       R1,A
   \   000012   E8           MOV       A,R0
   \   000013   49           ORL       A,R1
   \   000014   6003         JZ        ??bdb_RepConstructAttrCfgArray_0
   1550             {
   1551               bdb_repAttrCfgRecordsArrayFreeAll( );
   \   000016                ; Setup parameters for call to function bdb_repAttrCfgRecordsArrayFreeAll
   \   000016   12....       LCALL     `??bdb_repAttrCfgRecordsArrayFreeAll::?relay`; Banked call to: bdb_repAttrCfgRecordsArrayFreeAll
   1552             }
   1553             
   1554             uint8 numRepAttr = 0;
   \                     ??bdb_RepConstructAttrCfgArray_0:
   \   000019   7F00         MOV       R7,#0x0
   1555             //First count the number of reportable attributes accross all endpoints
   1556             for ( epCur = epList; epCur != NULL; epCur = epCur->nextDesc )
   \   00001B   90....       MOV       DPTR,#epList
   \   00001E   8043         SJMP      ??bdb_RepConstructAttrCfgArray_1
   1557             {
   1558               zclAttrRecsList* attrItem = zclFindAttrRecsList( epCur->epDesc->endPoint );
   1559               if( attrItem== NULL )
   1560               {
   1561                 continue;
   1562               }
   1563               if( attrItem->numAttributes > 0 )
   1564               {
   1565                   for ( i = 0; i < attrItem->numAttributes; i++ )
   1566                   {
   1567                     if( attrItem->attrs[i].attr.accessControl & ACCESS_REPORTABLE )
   \                     ??bdb_RepConstructAttrCfgArray_2:
   \   000020   EE           MOV       A,R6
   \   000021   F5..         MOV       ?V2,A
   \   000023   75..00       MOV       ?V3,#0x0
   \   000026   7403         MOV       A,#0x3
   \   000028   78..         MOV       R0,#?V2
   \   00002A   12....       LCALL     ?S_SHL
   \   00002D   8C82         MOV       DPL,R4
   \   00002F   8B83         MOV       DPH,R3
   \   000031   A3           INC       DPTR
   \   000032   A3           INC       DPTR
   \   000033   A3           INC       DPTR
   \   000034   A3           INC       DPTR
   \   000035   A3           INC       DPTR
   \   000036   A3           INC       DPTR
   \   000037   A3           INC       DPTR
   \   000038   A3           INC       DPTR
   \   000039   E0           MOVX      A,@DPTR
   \   00003A   25..         ADD       A,?V2
   \   00003C   F8           MOV       R0,A
   \   00003D   A3           INC       DPTR
   \   00003E   E0           MOVX      A,@DPTR
   \   00003F   35..         ADDC      A,?V3
   \   000041   8882         MOV       DPL,R0
   \   000043   F583         MOV       DPH,A
   \   000045   A3           INC       DPTR
   \   000046   A3           INC       DPTR
   \   000047   A3           INC       DPTR
   \   000048   A3           INC       DPTR
   \   000049   A3           INC       DPTR
   \   00004A   E4           CLR       A
   \   00004B   93           MOVC      A,@A+DPTR
   \   00004C   A2E2         MOV       C,0xE0 /* A   */.2
   \   00004E   5001         JNC       ??bdb_RepConstructAttrCfgArray_3
   1568                     {
   1569                       numRepAttr++;  
   \   000050   0F           INC       R7
   1570                     }
   1571                   }
   \                     ??bdb_RepConstructAttrCfgArray_3:
   \   000051   0E           INC       R6
   \                     ??bdb_RepConstructAttrCfgArray_4:
   \   000052   8A82         MOV       DPL,R2
   \   000054   8983         MOV       DPH,R1
   \   000056   E0           MOVX      A,@DPTR
   \   000057   F8           MOV       R0,A
   \   000058   EE           MOV       A,R6
   \   000059   C3           CLR       C
   \   00005A   98           SUBB      A,R0
   \   00005B   40C3         JC        ??bdb_RepConstructAttrCfgArray_2
   \                     ??bdb_RepConstructAttrCfgArray_5:
   \   00005D   85..82       MOV       DPL,?V0
   \   000060   85..83       MOV       DPH,?V1
   \                     ??bdb_RepConstructAttrCfgArray_1:
   \   000063   E0           MOVX      A,@DPTR
   \   000064   F5..         MOV       ?V0,A
   \   000066   A3           INC       DPTR
   \   000067   E0           MOVX      A,@DPTR
   \   000068   F5..         MOV       ?V1,A
   \   00006A   E5..         MOV       A,?V0
   \   00006C   45..         ORL       A,?V1
   \   00006E   6036         JZ        ??bdb_RepConstructAttrCfgArray_6
   \   000070                ; Setup parameters for call to function zclFindAttrRecsList
   \   000070   85..82       MOV       DPL,?V0
   \   000073   85..83       MOV       DPH,?V1
   \   000076   A3           INC       DPTR
   \   000077   A3           INC       DPTR
   \   000078   E0           MOVX      A,@DPTR
   \   000079   F8           MOV       R0,A
   \   00007A   A3           INC       DPTR
   \   00007B   E0           MOVX      A,@DPTR
   \   00007C   F583         MOV       DPH,A
   \   00007E   8882         MOV       DPL,R0
   \   000080   E0           MOVX      A,@DPTR
   \   000081   F9           MOV       R1,A
   \   000082   12....       LCALL     `??zclFindAttrRecsList::?relay`; Banked call to: zclFindAttrRecsList
   \   000085   8A..         MOV       ?V2,R2
   \   000087   8B..         MOV       ?V3,R3
   \   000089   AC..         MOV       R4,?V2
   \   00008B   AD..         MOV       R5,?V3
   \   00008D   EA           MOV       A,R2
   \   00008E   4D           ORL       A,R5
   \   00008F   60CC         JZ        ??bdb_RepConstructAttrCfgArray_5
   \   000091   EA           MOV       A,R2
   \   000092   2407         ADD       A,#0x7
   \   000094   F8           MOV       R0,A
   \   000095   E4           CLR       A
   \   000096   3D           ADDC      A,R5
   \   000097   F9           MOV       R1,A
   \   000098   E8           MOV       A,R0
   \   000099   FA           MOV       R2,A
   \   00009A   E9           MOV       A,R1
   \   00009B   8882         MOV       DPL,R0
   \   00009D   F583         MOV       DPH,A
   \   00009F   E0           MOVX      A,@DPTR
   \   0000A0   60BB         JZ        ??bdb_RepConstructAttrCfgArray_5
   \   0000A2   7E00         MOV       R6,#0x0
   \   0000A4   80AC         SJMP      ??bdb_RepConstructAttrCfgArray_4
   1572               }
   1573             }
   1574             status =  bdb_repAttrCfgRecordsArrayCreate( numRepAttr );
   \                     ??bdb_RepConstructAttrCfgArray_6:
   \   0000A6                ; Setup parameters for call to function bdb_repAttrCfgRecordsArrayCreate
   \   0000A6   EF           MOV       A,R7
   \   0000A7   F9           MOV       R1,A
   \   0000A8   12....       LCALL     `??bdb_repAttrCfgRecordsArrayCreate::?relay`; Banked call to: bdb_repAttrCfgRecordsArrayCreate
   \   0000AB   E9           MOV       A,R1
   \   0000AC   F9           MOV       R1,A
   1575             if( status != BDBREPORTING_SUCCESS )
   \   0000AD   6003         JZ        $+5
   \   0000AF   02....       LJMP      ??bdb_RepConstructAttrCfgArray_7 & 0xFFFF
   1576             {
   1577               return status;
   1578             }
   1579               
   1580             
   1581             for ( epCur = epList; epCur != NULL; epCur = epCur->nextDesc )
   \   0000B2   90....       MOV       DPTR,#epList
   \   0000B5   8006         SJMP      ??bdb_RepConstructAttrCfgArray_8
   \                     ??bdb_RepConstructAttrCfgArray_9:
   \   0000B7   85..82       MOV       DPL,?V0
   \   0000BA   85..83       MOV       DPH,?V1
   \                     ??bdb_RepConstructAttrCfgArray_8:
   \   0000BD   E0           MOVX      A,@DPTR
   \   0000BE   F5..         MOV       ?V0,A
   \   0000C0   A3           INC       DPTR
   \   0000C1   E0           MOVX      A,@DPTR
   \   0000C2   F5..         MOV       ?V1,A
   \   0000C4   E5..         MOV       A,?V0
   \   0000C6   45..         ORL       A,?V1
   \   0000C8   7003         JNZ       $+5
   \   0000CA   02....       LJMP      ??bdb_RepConstructAttrCfgArray_10 & 0xFFFF
   1582             {
   1583               zclAttrRecsList* attrItem = zclFindAttrRecsList( epCur->epDesc->endPoint );
   \   0000CD   E5..         MOV       A,?V0
   \   0000CF   2402         ADD       A,#0x2
   \   0000D1   F5..         MOV       ?V6,A
   \   0000D3   E4           CLR       A
   \   0000D4   35..         ADDC      A,?V1
   \   0000D6   F5..         MOV       ?V7,A
   \   0000D8                ; Setup parameters for call to function zclFindAttrRecsList
   \   0000D8   85..82       MOV       DPL,?V6
   \   0000DB   F583         MOV       DPH,A
   \   0000DD   E0           MOVX      A,@DPTR
   \   0000DE   F8           MOV       R0,A
   \   0000DF   A3           INC       DPTR
   \   0000E0   E0           MOVX      A,@DPTR
   \   0000E1   F583         MOV       DPH,A
   \   0000E3   8882         MOV       DPL,R0
   \   0000E5   E0           MOVX      A,@DPTR
   \   0000E6   F9           MOV       R1,A
   \   0000E7   12....       LCALL     `??zclFindAttrRecsList::?relay`; Banked call to: zclFindAttrRecsList
   \   0000EA   8A..         MOV       ?V8,R2
   \   0000EC   8B..         MOV       ?V9,R3
   1584               if( attrItem== NULL )
   \   0000EE   EA           MOV       A,R2
   \   0000EF   4B           ORL       A,R3
   \   0000F0   60C5         JZ        ??bdb_RepConstructAttrCfgArray_9
   1585               {
   1586                 continue;
   1587               }
   1588               if( attrItem->numAttributes > 0 )
   \   0000F2   EA           MOV       A,R2
   \   0000F3   2407         ADD       A,#0x7
   \   0000F5   F5..         MOV       ?V10,A
   \   0000F7   E4           CLR       A
   \   0000F8   35..         ADDC      A,?V9
   \   0000FA   F5..         MOV       ?V11,A
   \   0000FC   85..82       MOV       DPL,?V10
   \   0000FF   F583         MOV       DPH,A
   \   000101   E0           MOVX      A,@DPTR
   \   000102   60B3         JZ        ??bdb_RepConstructAttrCfgArray_9
   1589               {
   1590                 for ( i = 0; i < attrItem->numAttributes; i++ )
   \   000104   7E00         MOV       R6,#0x0
   \   000106   02....       LJMP      ??bdb_RepConstructAttrCfgArray_11 & 0xFFFF
   1591                 {
   1592                   if( attrItem->attrs[i].attr.accessControl & ACCESS_REPORTABLE )
   1593                   {
   1594                     bdbReportAttrDefaultCfgData_t toSearch;
   1595                     toSearch.endpoint = epCur->epDesc->endPoint;
   1596                     toSearch.cluster = attrItem->attrs[i].clusterID;
   1597                     toSearch.attrID = attrItem->attrs[i].attr.attrId;
   1598                     bdbRepAttrDefaultCfgRecordLinkedListItem_t* lLItemFound = bdb_repAttrDefaultCfgRecordsLinkedListSearch( &attrDefaultCfgRecordLinkedList, toSearch );
   1599                     if( lLItemFound == NULL )
   1600                     {
   1601                       //Add with default static values
   1602                       uint8 changeValue[] = BDBREPORTING_DEFAULTCHANGEVALUE; 
   1603                       status = bdb_repAttrCfgRecordsArrayAdd( epCur->epDesc->endPoint, attrItem->attrs[i].clusterID, 
   1604                                                              attrItem->attrs[i].attr.attrId, BDBREPORTING_DEFAULTMININTERVAL, BDBREPORTING_DEFAULTMAXINTERVAL, 
   1605                                                              changeValue, BDBREPORTING_DEFAULTMININTERVAL, BDBREPORTING_DEFAULTMAXINTERVAL, changeValue );
   1606                     }
   1607                     else
   1608                     {
   1609                       //Add with user defined default values
   1610                       status = bdb_repAttrCfgRecordsArrayAdd( epCur->epDesc->endPoint, attrItem->attrs[i].clusterID, 
   1611                                                              attrItem->attrs[i].attr.attrId, lLItemFound->data->minReportInt, lLItemFound->data->maxReportInt, 
   1612                                                              lLItemFound->data->reportableChange, lLItemFound->data->minReportInt, lLItemFound->data->maxReportInt, 
   1613                                                              lLItemFound->data->reportableChange );
   \                     ??bdb_RepConstructAttrCfgArray_12:
   \   000109   85..82       MOV       DPL,?V2
   \   00010C   85..83       MOV       DPH,?V3
   \   00010F   E0           MOVX      A,@DPTR
   \   000110   25..         ADD       A,?V4
   \   000112   F5..         MOV       ?V4,A
   \   000114   A3           INC       DPTR
   \   000115   E0           MOVX      A,@DPTR
   \   000116   35..         ADDC      A,?V5
   \   000118   F5..         MOV       ?V5,A
   \   00011A   8A82         MOV       DPL,R2
   \   00011C   8B83         MOV       DPH,R3
   \   00011E   E0           MOVX      A,@DPTR
   \   00011F   F8           MOV       R0,A
   \   000120   A3           INC       DPTR
   \   000121   E0           MOVX      A,@DPTR
   \   000122   F9           MOV       R1,A
   \   000123   8882         MOV       DPL,R0
   \   000125   F583         MOV       DPH,A
   \   000127   A3           INC       DPTR
   \   000128   A3           INC       DPTR
   \   000129   A3           INC       DPTR
   \   00012A   A3           INC       DPTR
   \   00012B   A3           INC       DPTR
   \   00012C   E0           MOVX      A,@DPTR
   \   00012D   FA           MOV       R2,A
   \   00012E   A3           INC       DPTR
   \   00012F   E0           MOVX      A,@DPTR
   \   000130   FB           MOV       R3,A
   \   000131   8882         MOV       DPL,R0
   \   000133   8983         MOV       DPH,R1
   \   000135   A3           INC       DPTR
   \   000136   A3           INC       DPTR
   \   000137   A3           INC       DPTR
   \   000138   A3           INC       DPTR
   \   000139   A3           INC       DPTR
   \   00013A   A3           INC       DPTR
   \   00013B   A3           INC       DPTR
   \   00013C   E0           MOVX      A,@DPTR
   \   00013D   FC           MOV       R4,A
   \   00013E   A3           INC       DPTR
   \   00013F   E0           MOVX      A,@DPTR
   \   000140   FD           MOV       R5,A
   \   000141   E8           MOV       A,R0
   \   000142   2409         ADD       A,#0x9
   \   000144   F5..         MOV       ?V12,A
   \   000146   E4           CLR       A
   \   000147   39           ADDC      A,R1
   \   000148   F5..         MOV       ?V13,A
   \   00014A                ; Setup parameters for call to function bdb_repAttrCfgRecordsArrayAdd
   \   00014A   85....       MOV       ?V2,?V12
   \   00014D   F5..         MOV       ?V3,A
   \   00014F   78..         MOV       R0,#?V2
   \   000151   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000154   8C..         MOV       ?V2,R4
   \   000156   8D..         MOV       ?V3,R5
   \   000158   78..         MOV       R0,#?V2
   \   00015A   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00015D   8A..         MOV       ?V2,R2
   \   00015F   8B..         MOV       ?V3,R3
   \   000161   78..         MOV       R0,#?V2
   \   000163   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000166   85....       MOV       ?V2,?V12
   \   000169   85....       MOV       ?V3,?V13
   \   00016C   78..         MOV       R0,#?V2
   \   00016E   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000171   8C..         MOV       ?V2,R4
   \   000173   8D..         MOV       ?V3,R5
   \   000175   78..         MOV       R0,#?V2
   \   000177   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00017A   8A..         MOV       ?V2,R2
   \   00017C   8B..         MOV       ?V3,R3
   \   00017E   78..         MOV       R0,#?V2
   \   000180   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000183   85..82       MOV       DPL,?V4
   \   000186   85..83       MOV       DPH,?V5
   \   000189   A3           INC       DPTR
   \   00018A   A3           INC       DPTR
   \   00018B   E4           CLR       A
   \   00018C   93           MOVC      A,@A+DPTR
   \   00018D   FC           MOV       R4,A
   \   00018E   7401         MOV       A,#0x1
   \   000190   93           MOVC      A,@A+DPTR
   \   000191   FD           MOV       R5,A
   \   000192   85..82       MOV       DPL,?V4
   \   000195   85..83       MOV       DPH,?V5
   \                     ??bdb_RepConstructAttrCfgArray_13:
   \   000198   E4           CLR       A
   \   000199   93           MOVC      A,@A+DPTR
   \   00019A   FA           MOV       R2,A
   \   00019B   7401         MOV       A,#0x1
   \   00019D   93           MOVC      A,@A+DPTR
   \   00019E   FB           MOV       R3,A
   \   00019F   85..82       MOV       DPL,?V6
   \   0001A2   85..83       MOV       DPH,?V7
   \   0001A5   E0           MOVX      A,@DPTR
   \   0001A6   F8           MOV       R0,A
   \   0001A7   A3           INC       DPTR
   \   0001A8   E0           MOVX      A,@DPTR
   \   0001A9   F583         MOV       DPH,A
   \   0001AB   8882         MOV       DPL,R0
   \   0001AD   E0           MOVX      A,@DPTR
   \   0001AE   F9           MOV       R1,A
   \   0001AF   12....       LCALL     `??bdb_repAttrCfgRecordsArrayAdd::?relay`; Banked call to: bdb_repAttrCfgRecordsArrayAdd
   \   0001B2   740C         MOV       A,#0xc
   \   0001B4   12....       LCALL     ?DEALLOC_XSTACK8
   1614                     }
   \                     ??bdb_RepConstructAttrCfgArray_14:
   \   0001B7   0E           INC       R6
   \                     ??bdb_RepConstructAttrCfgArray_11:
   \   0001B8   85..82       MOV       DPL,?V10
   \   0001BB   85..83       MOV       DPH,?V11
   \   0001BE   E0           MOVX      A,@DPTR
   \   0001BF   F8           MOV       R0,A
   \   0001C0   EE           MOV       A,R6
   \   0001C1   C3           CLR       C
   \   0001C2   98           SUBB      A,R0
   \   0001C3   4003         JC        $+5
   \   0001C5   02....       LJMP      ??bdb_RepConstructAttrCfgArray_9 & 0xFFFF
   \   0001C8   EE           MOV       A,R6
   \   0001C9   F5..         MOV       ?V2,A
   \   0001CB   75..00       MOV       ?V3,#0x0
   \   0001CE   7403         MOV       A,#0x3
   \   0001D0   78..         MOV       R0,#?V2
   \   0001D2   12....       LCALL     ?S_SHL
   \   0001D5   85....       MOV       ?V4,?V2
   \   0001D8   85....       MOV       ?V5,?V3
   \   0001DB   E5..         MOV       A,?V8
   \   0001DD   2408         ADD       A,#0x8
   \   0001DF   F5..         MOV       ?V2,A
   \   0001E1   E4           CLR       A
   \   0001E2   35..         ADDC      A,?V9
   \   0001E4   F5..         MOV       ?V3,A
   \   0001E6   85..82       MOV       DPL,?V2
   \   0001E9   F583         MOV       DPH,A
   \   0001EB   E0           MOVX      A,@DPTR
   \   0001EC   25..         ADD       A,?V4
   \   0001EE   F8           MOV       R0,A
   \   0001EF   A3           INC       DPTR
   \   0001F0   E0           MOVX      A,@DPTR
   \   0001F1   35..         ADDC      A,?V5
   \   0001F3   F9           MOV       R1,A
   \   0001F4   E8           MOV       A,R0
   \   0001F5   FA           MOV       R2,A
   \   0001F6   E9           MOV       A,R1
   \   0001F7   FB           MOV       R3,A
   \   0001F8   8882         MOV       DPL,R0
   \   0001FA   F583         MOV       DPH,A
   \   0001FC   A3           INC       DPTR
   \   0001FD   A3           INC       DPTR
   \   0001FE   A3           INC       DPTR
   \   0001FF   A3           INC       DPTR
   \   000200   A3           INC       DPTR
   \   000201   E4           CLR       A
   \   000202   93           MOVC      A,@A+DPTR
   \   000203   A2E2         MOV       C,0xE0 /* A   */.2
   \   000205   50B0         JNC       ??bdb_RepConstructAttrCfgArray_14
   \   000207   85..82       MOV       DPL,?V6
   \   00020A   85..83       MOV       DPH,?V7
   \   00020D   E0           MOVX      A,@DPTR
   \   00020E   F8           MOV       R0,A
   \   00020F   A3           INC       DPTR
   \   000210   E0           MOVX      A,@DPTR
   \   000211   F583         MOV       DPH,A
   \   000213   8882         MOV       DPL,R0
   \   000215   E0           MOVX      A,@DPTR
   \   000216   C0E0         PUSH      A
   \   000218   7404         MOV       A,#0x4
   \   00021A   12....       LCALL     ?XSTACK_DISP0_8
   \   00021D   D0E0         POP       A
   \   00021F   F0           MOVX      @DPTR,A
   \   000220   8A82         MOV       DPL,R2
   \   000222   8983         MOV       DPH,R1
   \   000224   E4           CLR       A
   \   000225   93           MOVC      A,@A+DPTR
   \   000226   F8           MOV       R0,A
   \   000227   7401         MOV       A,#0x1
   \   000229   93           MOVC      A,@A+DPTR
   \   00022A   F9           MOV       R1,A
   \   00022B   7405         MOV       A,#0x5
   \   00022D   12....       LCALL     ?XSTACK_DISP0_8
   \   000230   E8           MOV       A,R0
   \   000231   F0           MOVX      @DPTR,A
   \   000232   A3           INC       DPTR
   \   000233   E9           MOV       A,R1
   \   000234   F0           MOVX      @DPTR,A
   \   000235   8A82         MOV       DPL,R2
   \   000237   8B83         MOV       DPH,R3
   \   000239   A3           INC       DPTR
   \   00023A   A3           INC       DPTR
   \   00023B   E4           CLR       A
   \   00023C   93           MOVC      A,@A+DPTR
   \   00023D   F8           MOV       R0,A
   \   00023E   7401         MOV       A,#0x1
   \   000240   93           MOVC      A,@A+DPTR
   \   000241   F9           MOV       R1,A
   \   000242   7407         MOV       A,#0x7
   \   000244   12....       LCALL     ?XSTACK_DISP0_8
   \   000247   E8           MOV       A,R0
   \   000248   F0           MOVX      @DPTR,A
   \   000249   A3           INC       DPTR
   \   00024A   E9           MOV       A,R1
   \   00024B   F0           MOVX      @DPTR,A
   \   00024C                ; Setup parameters for call to function bdb_repAttrDefaultCfgRecordsLinkedListSearch
   \   00024C   7404         MOV       A,#0x4
   \   00024E   12....       LCALL     ?XSTACK_DISP0_8
   \   000251   740D         MOV       A,#0xd
   \   000253   12....       LCALL     ?PUSH_XSTACK8_X
   \   000256   7A..         MOV       R2,#attrDefaultCfgRecordLinkedList & 0xff
   \   000258   7B..         MOV       R3,#(attrDefaultCfgRecordLinkedList >> 8) & 0xff
   \   00025A   12....       LCALL     `??bdb_repAttrDefaultCfgRecordsLinkedListSearch:`; Banked call to: bdb_repAttrDefaultCfgRecordsLinkedListSearch
   \   00025D   740D         MOV       A,#0xd
   \   00025F   12....       LCALL     ?DEALLOC_XSTACK8
   \   000262   8B..         MOV       ?V13,R3
   \   000264   A9..         MOV       R1,?V13
   \   000266   EA           MOV       A,R2
   \   000267   49           ORL       A,R1
   \   000268   6003         JZ        $+5
   \   00026A   02....       LJMP      ??bdb_RepConstructAttrCfgArray_12 & 0xFFFF
   \   00026D   90....       MOV       DPTR,#`?<Constant {0, 0, 0, 0}>`
   \   000270   AC..         MOV       R4,?XSP + 0
   \   000272   AD..         MOV       R5,?XSP + 1
   \   000274   7404         MOV       A,#0x4
   \   000276   12....       LCALL     ?MOVE_LONG8_XDATA_XDATA
   \   000279   85..82       MOV       DPL,?V2
   \   00027C   85..83       MOV       DPH,?V3
   \   00027F   E0           MOVX      A,@DPTR
   \   000280   25..         ADD       A,?V4
   \   000282   F8           MOV       R0,A
   \   000283   A3           INC       DPTR
   \   000284   E0           MOVX      A,@DPTR
   \   000285   35..         ADDC      A,?V5
   \   000287   F9           MOV       R1,A
   \   000288   E8           MOV       A,R0
   \   000289   FA           MOV       R2,A
   \   00028A   E9           MOV       A,R1
   \   00028B   FB           MOV       R3,A
   \   00028C                ; Setup parameters for call to function bdb_repAttrCfgRecordsArrayAdd
   \   00028C   A8..         MOV       R0,?XSP + 0
   \   00028E   A9..         MOV       R1,?XSP + 1
   \   000290   88..         MOV       ?V2,R0
   \   000292   89..         MOV       ?V3,R1
   \   000294   78..         MOV       R0,#?V2
   \   000296   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000299   75..FF       MOV       ?V2,#-0x1
   \   00029C   75..FF       MOV       ?V3,#-0x1
   \   00029F   78..         MOV       R0,#?V2
   \   0002A1   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0002A4   75..0A       MOV       ?V2,#0xa
   \   0002A7   75..00       MOV       ?V3,#0x0
   \   0002AA   78..         MOV       R0,#?V2
   \   0002AC   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0002AF   7406         MOV       A,#0x6
   \   0002B1   12....       LCALL     ?XSTACK_DISP100_8
   \   0002B4   88..         MOV       ?V2,R0
   \   0002B6   89..         MOV       ?V3,R1
   \   0002B8   78..         MOV       R0,#?V2
   \   0002BA   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0002BD   75..FF       MOV       ?V2,#-0x1
   \   0002C0   75..FF       MOV       ?V3,#-0x1
   \   0002C3   78..         MOV       R0,#?V2
   \   0002C5   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0002C8   75..0A       MOV       ?V2,#0xa
   \   0002CB   75..00       MOV       ?V3,#0x0
   \   0002CE   78..         MOV       R0,#?V2
   \   0002D0   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   0002D3   8A82         MOV       DPL,R2
   \   0002D5   8B83         MOV       DPH,R3
   \   0002D7   A3           INC       DPTR
   \   0002D8   A3           INC       DPTR
   \   0002D9   E4           CLR       A
   \   0002DA   93           MOVC      A,@A+DPTR
   \   0002DB   FC           MOV       R4,A
   \   0002DC   7401         MOV       A,#0x1
   \   0002DE   93           MOVC      A,@A+DPTR
   \   0002DF   FD           MOV       R5,A
   \   0002E0   8A82         MOV       DPL,R2
   \   0002E2   8B83         MOV       DPH,R3
   \   0002E4   02....       LJMP      ??bdb_RepConstructAttrCfgArray_13 & 0xFFFF
   1615                   }
   1616                 }
   1617               }
   1618               
   1619             }
   1620             return BDBREPORTING_SUCCESS;
   \                     ??bdb_RepConstructAttrCfgArray_10:
   \   0002E7   7900         MOV       R1,#0x0
   \                     ??bdb_RepConstructAttrCfgArray_7:
   \   0002E9   7411         MOV       A,#0x11
   \   0002EB   12....       LCALL     ?DEALLOC_XSTACK8
   \   0002EE   7F0E         MOV       R7,#0xe
   \   0002F0   02....       LJMP      ?BANKED_LEAVE_XDATA
   1621             
   1622          }
   1623          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1624          static uint8 bdb_RepLoadCfgRecords( void )
   \                     bdb_RepLoadCfgRecords:
   1625          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV       A,#-0xa
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   1626            uint8 status; 
   1627            if( bdb_reportingAttrCfgRecordsArrayCount>0 && bdb_reportingAttrCfgRecordsArray == NULL )
   \   000005   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   000008   E0           MOVX      A,@DPTR
   \   000009   600F         JZ        ??bdb_RepLoadCfgRecords_0
   \   00000B   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00000E   E0           MOVX      A,@DPTR
   \   00000F   F8           MOV       R0,A
   \   000010   A3           INC       DPTR
   \   000011   E0           MOVX      A,@DPTR
   \   000012   F9           MOV       R1,A
   \   000013   E8           MOV       A,R0
   \   000014   49           ORL       A,R1
   \   000015   7003         JNZ       ??bdb_RepLoadCfgRecords_0
   1628            {
   1629              bdb_repAttrCfgRecordsArrayFreeAll( );
   \   000017                ; Setup parameters for call to function bdb_repAttrCfgRecordsArrayFreeAll
   \   000017   12....       LCALL     `??bdb_repAttrCfgRecordsArrayFreeAll::?relay`; Banked call to: bdb_repAttrCfgRecordsArrayFreeAll
   1630            }
   1631            
   1632            status = osal_nv_item_init( ZCD_NV_BDBREPORTINGCONFIG, sizeof( bdbReportAttrCfgData_t )*bdb_reportingAttrCfgRecordsArrayCount, bdb_reportingAttrCfgRecordsArray );
   \                     ??bdb_RepLoadCfgRecords_0:
   \   00001A                ; Setup parameters for call to function osal_nv_item_init
   \   00001A   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00001D   12....       LCALL     ?PUSH_XSTACK8_X_TWO
   \   000020   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   000023   E0           MOVX      A,@DPTR
   \   000024   75F015       MOV       B,#0x15
   \   000027   A4           MUL       AB
   \   000028   FC           MOV       R4,A
   \   000029   ADF0         MOV       R5,B
   \   00002B   7A56         MOV       R2,#0x56
   \   00002D   7B00         MOV       R3,#0x0
   \   00002F   12....       LCALL     `??osal_nv_item_init::?relay`; Banked call to: osal_nv_item_init
   \   000032   7402         MOV       A,#0x2
   \   000034   12....       LCALL     ?DEALLOC_XSTACK8
   \   000037   E9           MOV       A,R1
   \   000038   F8           MOV       R0,A
   1633            if( status == NV_OPER_FAILED )
   \   000039   740A         MOV       A,#0xa
   \   00003B   68           XRL       A,R0
   \   00003C   6005         JZ        ??bdb_RepLoadCfgRecords_1
   1634            {
   1635              return BDBREPORTING_ERROR;
   1636            }
   1637            else
   1638            {
   1639                if( status == NV_ITEM_UNINIT )
   \   00003E   7409         MOV       A,#0x9
   \   000040   68           XRL       A,R0
   \   000041   7004         JNZ       ??bdb_RepLoadCfgRecords_2
   1640                {
   1641                  //was written, this is an error
   1642                  return BDBREPORTING_ERROR;
   \                     ??bdb_RepLoadCfgRecords_1:
   \   000043   7901         MOV       R1,#0x1
   \   000045   804E         SJMP      ??bdb_RepLoadCfgRecords_3
   1643                }
   1644                else
   1645                {
   1646                  //SUCCESS, There is NV data, read the data
   1647                  uint16 sizeNVRecord = osal_nv_item_len( ZCD_NV_BDBREPORTINGCONFIG );
   1648                  uint8 attrCfgRecordsArrayCount = sizeNVRecord / sizeof( bdbReportAttrCfgData_t );
   \                     ??bdb_RepLoadCfgRecords_2:
   \   000047                ; Setup parameters for call to function osal_nv_item_len
   \   000047   7A56         MOV       R2,#0x56
   \   000049   7B00         MOV       R3,#0x0
   \   00004B   12....       LCALL     `??osal_nv_item_len::?relay`; Banked call to: osal_nv_item_len
   \   00004E   EA           MOV       A,R2
   \   00004F   F8           MOV       R0,A
   \   000050   EB           MOV       A,R3
   \   000051   F9           MOV       R1,A
   \   000052   7A15         MOV       R2,#0x15
   \   000054   7B00         MOV       R3,#0x0
   \   000056   12....       LCALL     ?US_DIV_MOD
   \   000059   E8           MOV       A,R0
   \   00005A   FE           MOV       R6,A
   1649                  
   1650                  status =  bdb_repAttrCfgRecordsArrayCreate( attrCfgRecordsArrayCount );
   1651                  if( status == BDBREPORTING_ERROR )
   \   00005B                ; Setup parameters for call to function bdb_repAttrCfgRecordsArrayCreate
   \   00005B   F9           MOV       R1,A
   \   00005C   12....       LCALL     `??bdb_repAttrCfgRecordsArrayCreate::?relay`; Banked call to: bdb_repAttrCfgRecordsArrayCreate
   \   00005F   E9           MOV       A,R1
   \   000060   6401         XRL       A,#0x1
   \   000062   7004         JNZ       ??bdb_RepLoadCfgRecords_4
   1652                  {
   1653                    return BDBREPORTING_OUTOFMEMORYERROR;
   \   000064   7902         MOV       R1,#0x2
   \   000066   802D         SJMP      ??bdb_RepLoadCfgRecords_3
   1654                  }
   1655                  osal_nv_read( ZCD_NV_BDBREPORTINGCONFIG,0,sizeof( bdbReportAttrCfgData_t )*attrCfgRecordsArrayCount ,bdb_reportingAttrCfgRecordsArray );
   \                     ??bdb_RepLoadCfgRecords_4:
   \   000068                ; Setup parameters for call to function osal_nv_read
   \   000068   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArray
   \   00006B   12....       LCALL     ?PUSH_XSTACK8_X_TWO
   \   00006E   EE           MOV       A,R6
   \   00006F   75F015       MOV       B,#0x15
   \   000072   A4           MUL       AB
   \   000073   F5..         MOV       ?V0,A
   \   000075   E5F0         MOV       A,B
   \   000077   F5..         MOV       ?V1,A
   \   000079   78..         MOV       R0,#?V0
   \   00007B   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00007E   7C00         MOV       R4,#0x0
   \   000080   7D00         MOV       R5,#0x0
   \   000082   7A56         MOV       R2,#0x56
   \   000084   7B00         MOV       R3,#0x0
   \   000086   12....       LCALL     `??osal_nv_read::?relay`; Banked call to: osal_nv_read
   \   000089   7404         MOV       A,#0x4
   \   00008B   12....       LCALL     ?DEALLOC_XSTACK8
   1656                  bdb_reportingAttrCfgRecordsArrayCount = attrCfgRecordsArrayCount;
   \   00008E   EE           MOV       A,R6
   \   00008F   90....       MOV       DPTR,#bdb_reportingAttrCfgRecordsArrayCount
   \   000092   F0           MOVX      @DPTR,A
   1657                  return BDBREPORTING_SUCCESS;
   \   000093   7900         MOV       R1,#0x0
   \                     ??bdb_RepLoadCfgRecords_3:
   \   000095   7F02         MOV       R7,#0x2
   \   000097   02....       LJMP      ?BANKED_LEAVE_XDATA
   1658                }     
   1659            }  
   1660          }
   1661          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1662          static void bdb_RepReport( uint8 specificCLusterEndpointIndex )
   \                     bdb_RepReport:
   1663          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000                REQUIRE ?V8
   \   000000                REQUIRE ?V9
   \   000000                REQUIRE ?V10
   \   000000                REQUIRE ?V11
   \   000000                REQUIRE ?V12
   \   000000                REQUIRE ?V13
   \   000000                REQUIRE ?V14
   \   000000                REQUIRE ?V15
   \   000000   74E8         MOV       A,#-0x18
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 24
   \   000005                ; Auto size: 18
   \   000005   74EE         MOV       A,#-0x12
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   1664            afAddrType_t dstAddr;
   1665            zclReportCmd_t *pReportCmd;
   1666            uint8 i;
   1667            
   1668            bdbReportAttrClusterEndpoint_t* clusterEndpointItem = NULL;
   \   00000A   7E00         MOV       R6,#0x0
   \   00000C   7F00         MOV       R7,#0x0
   1669            if( specificCLusterEndpointIndex == BDBREPORTING_INVALIDINDEX )
   \   00000E   74FF         MOV       A,#-0x1
   \   000010   69           XRL       A,R1
   \   000011   7010         JNZ       ??bdb_RepReport_0
   1670            {
   1671              if( bdb_reportingNextClusterEndpointIndex < bdb_reportingClusterEndpointArrayCount )
   \   000013   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   000016   E0           MOVX      A,@DPTR
   \   000017   F8           MOV       R0,A
   \   000018   90....       MOV       DPTR,#bdb_reportingNextClusterEndpointIndex
   \   00001B   E0           MOVX      A,@DPTR
   \   00001C   C3           CLR       C
   \   00001D   98           SUBB      A,R0
   \   00001E   5013         JNC       ??bdb_RepReport_1
   1672              {
   1673                clusterEndpointItem = &(bdb_reportingClusterEndpointArray[bdb_reportingNextClusterEndpointIndex]);
   \   000020   E0           MOVX      A,@DPTR
   \   000021   8001         SJMP      ??bdb_RepReport_2
   1674              }
   1675            }
   1676            else
   1677            {
   1678              clusterEndpointItem = &(bdb_reportingClusterEndpointArray[specificCLusterEndpointIndex]);
   \                     ??bdb_RepReport_0:
   \   000023   E9           MOV       A,R1
   \                     ??bdb_RepReport_2:
   \   000024   75F00D       MOV       B,#0xd
   \   000027   A4           MUL       AB
   \   000028   F8           MOV       R0,A
   \   000029   A9F0         MOV       R1,B
   \   00002B   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   00002D   28           ADD       A,R0
   \   00002E   FE           MOV       R6,A
   \   00002F   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   000031   39           ADDC      A,R1
   \   000032   FF           MOV       R7,A
   1679            }
   1680          
   1681            // actually send the report
   1682            if( clusterEndpointItem->consolidatedMaxReportInt != ZCL_REPORTING_OFF && clusterEndpointItem->attrLinkedList.numItems )
   \                     ??bdb_RepReport_1:
   \   000033   8E82         MOV       DPL,R6
   \   000035   8F83         MOV       DPH,R7
   \   000037   A3           INC       DPTR
   \   000038   A3           INC       DPTR
   \   000039   A3           INC       DPTR
   \   00003A   A3           INC       DPTR
   \   00003B   A3           INC       DPTR
   \   00003C   A3           INC       DPTR
   \   00003D   E0           MOVX      A,@DPTR
   \   00003E   F4           CPL       A
   \   00003F   7003         JNZ       ??bdb_RepReport_3
   \   000041   A3           INC       DPTR
   \   000042   E0           MOVX      A,@DPTR
   \   000043   F4           CPL       A
   \                     ??bdb_RepReport_3:
   \   000044   7003         JNZ       $+5
   \   000046   02....       LJMP      ??bdb_RepReport_4 & 0xFFFF
   \   000049   EE           MOV       A,R6
   \   00004A   240A         ADD       A,#0xa
   \   00004C   F5..         MOV       ?V8,A
   \   00004E   E4           CLR       A
   \   00004F   3F           ADDC      A,R7
   \   000050   F5..         MOV       ?V9,A
   \   000052   85..82       MOV       DPL,?V8
   \   000055   F583         MOV       DPH,A
   \   000057   E0           MOVX      A,@DPTR
   \   000058   7003         JNZ       $+5
   \   00005A   02....       LJMP      ??bdb_RepReport_4 & 0xFFFF
   1683            {
   1684              dstAddr.addrMode = (afAddrMode_t)AddrNotPresent;
   \   00005D   740E         MOV       A,#0xe
   \   00005F   12....       LCALL     ?XSTACK_DISP0_8
   \   000062   E4           CLR       A
   \   000063   F0           MOVX      @DPTR,A
   1685              dstAddr.addr.shortAddr = 0;
   \   000064   7406         MOV       A,#0x6
   \   000066   12....       LCALL     ?XSTACK_DISP0_8
   \   000069   E4           CLR       A
   \   00006A   F0           MOVX      @DPTR,A
   \   00006B   A3           INC       DPTR
   \   00006C   F0           MOVX      @DPTR,A
   \   00006D   8E82         MOV       DPL,R6
   \   00006F   8F83         MOV       DPH,R7
   \   000071   A3           INC       DPTR
   \   000072   E0           MOVX      A,@DPTR
   \   000073   C0E0         PUSH      A
   \   000075   740F         MOV       A,#0xf
   \   000077   12....       LCALL     ?XSTACK_DISP0_8
   \   00007A   D0E0         POP       A
   \   00007C   F0           MOVX      @DPTR,A
   1686              dstAddr.endPoint = clusterEndpointItem->endpoint;
   1687              dstAddr.panId = _NIB.nwkPanId;
   \   00007D   90....       MOV       DPTR,#_NIB + 33
   \   000080   E0           MOVX      A,@DPTR
   \   000081   F8           MOV       R0,A
   \   000082   A3           INC       DPTR
   \   000083   E0           MOVX      A,@DPTR
   \   000084   F9           MOV       R1,A
   \   000085   7410         MOV       A,#0x10
   \   000087   12....       LCALL     ?XSTACK_DISP0_8
   \   00008A   E8           MOV       A,R0
   \   00008B   F0           MOVX      @DPTR,A
   \   00008C   A3           INC       DPTR
   \   00008D   E9           MOV       A,R1
   \   00008E   F0           MOVX      @DPTR,A
   1688              
   1689              pReportCmd = osal_mem_alloc( sizeof( zclReportCmd_t ) + (clusterEndpointItem->attrLinkedList.numItems * sizeof( zclReport_t )) );
   \   00008F                ; Setup parameters for call to function osal_mem_alloc
   \   00008F   85..82       MOV       DPL,?V8
   \   000092   85..83       MOV       DPH,?V9
   \   000095   E0           MOVX      A,@DPTR
   \   000096   75F005       MOV       B,#0x5
   \   000099   A4           MUL       AB
   \   00009A   A9F0         MOV       R1,B
   \   00009C   2401         ADD       A,#0x1
   \   00009E   FA           MOV       R2,A
   \   00009F   E4           CLR       A
   \   0000A0   39           ADDC      A,R1
   \   0000A1   FB           MOV       R3,A
   \   0000A2   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   0000A5   8A..         MOV       ?V10,R2
   \   0000A7   8B..         MOV       ?V11,R3
   1690              if ( pReportCmd != NULL )
   \   0000A9   EA           MOV       A,R2
   \   0000AA   4B           ORL       A,R3
   \   0000AB   7003         JNZ       $+5
   \   0000AD   02....       LJMP      ??bdb_RepReport_4 & 0xFFFF
   1691              {
   1692                pReportCmd->numAttr = clusterEndpointItem->attrLinkedList.numItems;
   \   0000B0   85..82       MOV       DPL,?V8
   \   0000B3   85..83       MOV       DPH,?V9
   \   0000B6   E0           MOVX      A,@DPTR
   \   0000B7   8A82         MOV       DPL,R2
   \   0000B9   8B83         MOV       DPH,R3
   \   0000BB   F0           MOVX      @DPTR,A
   1693                for ( i = 0; i < clusterEndpointItem->attrLinkedList.numItems; ++ i )
   \   0000BC   75..00       MOV       ?V0,#0x0
   \   0000BF   02....       LJMP      ??bdb_RepReport_5 & 0xFFFF
   1694                {
   1695                  pReportCmd->attrList[i].attrID   = 0xFFFF;
   \                     ??bdb_RepReport_6:
   \   0000C2   E5..         MOV       A,?V0
   \   0000C4   75F005       MOV       B,#0x5
   \   0000C7   A4           MUL       AB
   \   0000C8   F8           MOV       R0,A
   \   0000C9   A9F0         MOV       R1,B
   \   0000CB   E5..         MOV       A,?V10
   \   0000CD   28           ADD       A,R0
   \   0000CE   F8           MOV       R0,A
   \   0000CF   E5..         MOV       A,?V11
   \   0000D1   39           ADDC      A,R1
   \   0000D2   F9           MOV       R1,A
   \   0000D3   8882         MOV       DPL,R0
   \   0000D5   F583         MOV       DPH,A
   \   0000D7   A3           INC       DPTR
   \   0000D8   8582..       MOV       ?V4,DPL
   \   0000DB   8583..       MOV       ?V5,DPH
   \   0000DE   74FF         MOV       A,#-0x1
   \   0000E0   F0           MOVX      @DPTR,A
   \   0000E1   A3           INC       DPTR
   \   0000E2   F0           MOVX      @DPTR,A
   1696                  pReportCmd->attrList[i].dataType = 0xFF;
   \   0000E3   E8           MOV       A,R0
   \   0000E4   2403         ADD       A,#0x3
   \   0000E6   F5..         MOV       ?V14,A
   \   0000E8   E4           CLR       A
   \   0000E9   39           ADDC      A,R1
   \   0000EA   F5..         MOV       ?V15,A
   \   0000EC   85..82       MOV       DPL,?V14
   \   0000EF   F583         MOV       DPH,A
   \   0000F1   74FF         MOV       A,#-0x1
   \   0000F3   F0           MOVX      @DPTR,A
   1697                  pReportCmd->attrList[i].attrData = NULL;
   \   0000F4   E8           MOV       A,R0
   \   0000F5   2404         ADD       A,#0x4
   \   0000F7   F5..         MOV       ?V12,A
   \   0000F9   E4           CLR       A
   \   0000FA   39           ADDC      A,R1
   \   0000FB   F5..         MOV       ?V13,A
   \   0000FD   85..82       MOV       DPL,?V12
   \   000100   F583         MOV       DPH,A
   \   000102   E4           CLR       A
   \   000103   F0           MOVX      @DPTR,A
   \   000104   A3           INC       DPTR
   \   000105   F0           MOVX      @DPTR,A
   1698                  
   1699                  bdbLinkedListAttrItem_t* attrListItem = bdb_linkedListAttrGetAtIndex( &clusterEndpointItem->attrLinkedList, i );      
   \   000106                ; Setup parameters for call to function bdb_linkedListAttrGetAtIndex
   \   000106   A9..         MOV       R1,?V0
   \   000108   AA..         MOV       R2,?V8
   \   00010A   AB..         MOV       R3,?V9
   \   00010C   12....       LCALL     `??bdb_linkedListAttrGetAtIndex::?relay`; Banked call to: bdb_linkedListAttrGetAtIndex
   \   00010F   8A..         MOV       ?V2,R2
   \   000111   8B..         MOV       ?V3,R3
   1700                  if(attrListItem!=NULL)
   \   000113   EA           MOV       A,R2
   \   000114   4B           ORL       A,R3
   \   000115   7003         JNZ       $+5
   \   000117   02....       LJMP      ??bdb_RepReport_7 & 0xFFFF
   1701                  {
   1702                    pReportCmd->attrList[i].attrID = attrListItem->data->attrID;   
   \   00011A   8A82         MOV       DPL,R2
   \   00011C   8B83         MOV       DPH,R3
   \   00011E   E0           MOVX      A,@DPTR
   \   00011F   F8           MOV       R0,A
   \   000120   A3           INC       DPTR
   \   000121   E0           MOVX      A,@DPTR
   \   000122   F583         MOV       DPH,A
   \   000124   8882         MOV       DPL,R0
   \   000126   E0           MOVX      A,@DPTR
   \   000127   F8           MOV       R0,A
   \   000128   A3           INC       DPTR
   \   000129   E0           MOVX      A,@DPTR
   \   00012A   F9           MOV       R1,A
   \   00012B   85..82       MOV       DPL,?V4
   \   00012E   85..83       MOV       DPH,?V5
   \   000131   E8           MOV       A,R0
   \   000132   F0           MOVX      @DPTR,A
   \   000133   A3           INC       DPTR
   \   000134   E9           MOV       A,R1
   \   000135   F0           MOVX      @DPTR,A
   1703                    zclAttribute_t attrRec;
   1704                    uint8 attrRes = bdb_RepFindAttrEntry( clusterEndpointItem->endpoint, clusterEndpointItem->cluster, attrListItem->data->attrID, &attrRec );
   1705                    if( attrRes == BDBREPORTING_TRUE )
   \   000136                ; Setup parameters for call to function bdb_RepFindAttrEntry
   \   000136   A8..         MOV       R0,?XSP + 0
   \   000138   A9..         MOV       R1,?XSP + 1
   \   00013A   88..         MOV       ?V4,R0
   \   00013C   89..         MOV       ?V5,R1
   \   00013E   78..         MOV       R0,#?V4
   \   000140   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000143   8A82         MOV       DPL,R2
   \   000145   8B83         MOV       DPH,R3
   \   000147   E0           MOVX      A,@DPTR
   \   000148   F8           MOV       R0,A
   \   000149   A3           INC       DPTR
   \   00014A   E0           MOVX      A,@DPTR
   \   00014B   F583         MOV       DPH,A
   \   00014D   8882         MOV       DPL,R0
   \   00014F   E0           MOVX      A,@DPTR
   \   000150   FC           MOV       R4,A
   \   000151   A3           INC       DPTR
   \   000152   E0           MOVX      A,@DPTR
   \   000153   FD           MOV       R5,A
   \   000154   8E82         MOV       DPL,R6
   \   000156   8F83         MOV       DPH,R7
   \   000158   A3           INC       DPTR
   \   000159   A3           INC       DPTR
   \   00015A   E0           MOVX      A,@DPTR
   \   00015B   FA           MOV       R2,A
   \   00015C   A3           INC       DPTR
   \   00015D   E0           MOVX      A,@DPTR
   \   00015E   FB           MOV       R3,A
   \   00015F   8E82         MOV       DPL,R6
   \   000161   8F83         MOV       DPH,R7
   \   000163   A3           INC       DPTR
   \   000164   E0           MOVX      A,@DPTR
   \   000165   F9           MOV       R1,A
   \   000166   12....       LCALL     `??bdb_RepFindAttrEntry::?relay`; Banked call to: bdb_RepFindAttrEntry
   \   000169   7402         MOV       A,#0x2
   \   00016B   12....       LCALL     ?DEALLOC_XSTACK8
   \   00016E   E9           MOV       A,R1
   \   00016F   6401         XRL       A,#0x1
   \   000171   6003         JZ        $+5
   \   000173   02....       LJMP      ??bdb_RepReport_7 & 0xFFFF
   1706                    {
   1707                      pReportCmd->attrList[i].dataType = attrRec.dataType;          
   \   000176   7402         MOV       A,#0x2
   \   000178   12....       LCALL     ?XSTACK_DISP0_8
   \   00017B   E0           MOVX      A,@DPTR
   \   00017C   85..82       MOV       DPL,?V14
   \   00017F   85..83       MOV       DPH,?V15
   \   000182   F0           MOVX      @DPTR,A
   1708                      pReportCmd->attrList[i].attrData = attrRec.dataPtr;          
   \   000183   7404         MOV       A,#0x4
   \   000185   12....       LCALL     ?XSTACK_DISP0_8
   \   000188   E0           MOVX      A,@DPTR
   \   000189   F8           MOV       R0,A
   \   00018A   A3           INC       DPTR
   \   00018B   E0           MOVX      A,@DPTR
   \   00018C   F9           MOV       R1,A
   \   00018D   85..82       MOV       DPL,?V12
   \   000190   85..83       MOV       DPH,?V13
   \   000193   E8           MOV       A,R0
   \   000194   F0           MOVX      @DPTR,A
   \   000195   A3           INC       DPTR
   \   000196   E9           MOV       A,R1
   \   000197   F0           MOVX      @DPTR,A
   1709                      //Update last value reported
   1710                      if( zclAnalogDataType( attrRec.dataType ) )
   \   000198                ; Setup parameters for call to function zclAnalogDataType
   \   000198   7402         MOV       A,#0x2
   \   00019A   12....       LCALL     ?XSTACK_DISP0_8
   \   00019D   E0           MOVX      A,@DPTR
   \   00019E   F9           MOV       R1,A
   \   00019F   12....       LCALL     `??zclAnalogDataType::?relay`; Banked call to: zclAnalogDataType
   \   0001A2   E9           MOV       A,R1
   \   0001A3   6053         JZ        ??bdb_RepReport_7
   1711                      { 
   1712                        //Only if the datatype is analog
   1713                        osal_memset( attrListItem->data->lastValueReported,0x00, BDBREPORTING_MAX_ANALOG_ATTR_SIZE );
   \   0001A5                ; Setup parameters for call to function osal_memset
   \   0001A5   7C04         MOV       R4,#0x4
   \   0001A7   7D00         MOV       R5,#0x0
   \   0001A9   7900         MOV       R1,#0x0
   \   0001AB   85..82       MOV       DPL,?V2
   \   0001AE   85..83       MOV       DPH,?V3
   \   0001B1   E0           MOVX      A,@DPTR
   \   0001B2   2402         ADD       A,#0x2
   \   0001B4   FA           MOV       R2,A
   \   0001B5   A3           INC       DPTR
   \   0001B6   E0           MOVX      A,@DPTR
   \   0001B7   3400         ADDC      A,#0x0
   \   0001B9   FB           MOV       R3,A
   \   0001BA   12....       LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
   1714                        osal_memcpy( attrListItem->data->lastValueReported, attrRec.dataPtr, zclGetDataTypeLength( attrRec.dataType ) );
   \   0001BD                ; Setup parameters for call to function zclGetDataTypeLength
   \   0001BD   7402         MOV       A,#0x2
   \   0001BF   12....       LCALL     ?XSTACK_DISP0_8
   \   0001C2   E0           MOVX      A,@DPTR
   \   0001C3   F9           MOV       R1,A
   \   0001C4   12....       LCALL     `??zclGetDataTypeLength::?relay`; Banked call to: zclGetDataTypeLength
   \   0001C7   E9           MOV       A,R1
   \   0001C8   F9           MOV       R1,A
   \   0001C9                ; Setup parameters for call to function osal_memcpy
   \   0001C9   7404         MOV       A,#0x4
   \   0001CB   12....       LCALL     ?XSTACK_DISP0_8
   \   0001CE   E0           MOVX      A,@DPTR
   \   0001CF   F5..         MOV       ?V4,A
   \   0001D1   A3           INC       DPTR
   \   0001D2   E0           MOVX      A,@DPTR
   \   0001D3   F5..         MOV       ?V5,A
   \   0001D5   75..00       MOV       ?V6,#0x0
   \   0001D8   78..         MOV       R0,#?V4
   \   0001DA   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   0001DD   E9           MOV       A,R1
   \   0001DE   FC           MOV       R4,A
   \   0001DF   7D00         MOV       R5,#0x0
   \   0001E1   85..82       MOV       DPL,?V2
   \   0001E4   85..83       MOV       DPH,?V3
   \   0001E7   E0           MOVX      A,@DPTR
   \   0001E8   2402         ADD       A,#0x2
   \   0001EA   FA           MOV       R2,A
   \   0001EB   A3           INC       DPTR
   \   0001EC   E0           MOVX      A,@DPTR
   \   0001ED   3400         ADDC      A,#0x0
   \   0001EF   FB           MOV       R3,A
   \   0001F0   12....       LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
   \   0001F3   7403         MOV       A,#0x3
   \   0001F5   12....       LCALL     ?DEALLOC_XSTACK8
   1715                      }
   1716                    }
   1717                  }
   1718                }
   \                     ??bdb_RepReport_7:
   \   0001F8   05..         INC       ?V0
   \                     ??bdb_RepReport_5:
   \   0001FA   85..82       MOV       DPL,?V8
   \   0001FD   85..83       MOV       DPH,?V9
   \   000200   E0           MOVX      A,@DPTR
   \   000201   F8           MOV       R0,A
   \   000202   E5..         MOV       A,?V0
   \   000204   C3           CLR       C
   \   000205   98           SUBB      A,R0
   \   000206   5003         JNC       $+5
   \   000208   02....       LJMP      ??bdb_RepReport_6 & 0xFFFF
   1719          
   1720                zcl_SendReportCmd( clusterEndpointItem->endpoint, &dstAddr,
   1721                                   clusterEndpointItem->cluster, pReportCmd,
   1722                                   ZCL_FRAME_SERVER_CLIENT_DIR, BDB_REPORTING_DISABLE_DEFAULT_RSP, bdb_getZCLFrameCounter( ) );
   \   00020B                ; Setup parameters for call to function bdb_getZCLFrameCounter
   \   00020B   12....       LCALL     `??bdb_getZCLFrameCounter::?relay`; Banked call to: bdb_getZCLFrameCounter
   \   00020E   E9           MOV       A,R1
   \   00020F                ; Setup parameters for call to function zcl_SendReportCmd
   \   00020F   F5..         MOV       ?V0,A
   \   000211   78..         MOV       R0,#?V0
   \   000213   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   000216   75..00       MOV       ?V0,#0x0
   \   000219   78..         MOV       R0,#?V0
   \   00021B   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   00021E   75..01       MOV       ?V0,#0x1
   \   000221   78..         MOV       R0,#?V0
   \   000223   12....       LCALL     ?PUSH_XSTACK_I_ONE
   \   000226   78..         MOV       R0,#?V10
   \   000228   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   00022B   8E82         MOV       DPL,R6
   \   00022D   8F83         MOV       DPH,R7
   \   00022F   A3           INC       DPTR
   \   000230   A3           INC       DPTR
   \   000231   E0           MOVX      A,@DPTR
   \   000232   FC           MOV       R4,A
   \   000233   A3           INC       DPTR
   \   000234   E0           MOVX      A,@DPTR
   \   000235   FD           MOV       R5,A
   \   000236   740B         MOV       A,#0xb
   \   000238   12....       LCALL     ?XSTACK_DISP101_8
   \   00023B   8E82         MOV       DPL,R6
   \   00023D   8F83         MOV       DPH,R7
   \   00023F   A3           INC       DPTR
   \   000240   E0           MOVX      A,@DPTR
   \   000241   F9           MOV       R1,A
   \   000242   12....       LCALL     `??zcl_SendReportCmd::?relay`; Banked call to: zcl_SendReportCmd
   \   000245   7405         MOV       A,#0x5
   \   000247   12....       LCALL     ?DEALLOC_XSTACK8
   1723          
   1724                osal_mem_free( pReportCmd );
   \   00024A                ; Setup parameters for call to function osal_mem_free
   \   00024A   AA..         MOV       R2,?V10
   \   00024C   AB..         MOV       R3,?V11
   \   00024E   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
   1725              }
   1726            }
   1727          }
   \                     ??bdb_RepReport_4:
   \   000251   7412         MOV       A,#0x12
   \   000253   12....       LCALL     ?DEALLOC_XSTACK8
   \   000256   7F10         MOV       R7,#0x10
   \   000258   02....       LJMP      ?BANKED_LEAVE_XDATA
   1728          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1729          static uint8 bdb_isAttrValueChangedSurpassDelta( uint8 datatype, uint8* delta, uint8* curValue, uint8* lastValue )
   \                     bdb_isAttrValueChangedSurpassDelta:
   1730          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000                REQUIRE ?V8
   \   000000                REQUIRE ?V9
   \   000000                REQUIRE ?V10
   \   000000                REQUIRE ?V11
   \   000000   74EC         MOV       A,#-0x14
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 0
   1731            uint8 res = BDBREPORTING_FALSE;
   \   000005   7E00         MOV       R6,#0x0
   \   000007   7414         MOV       A,#0x14
   \   000009   12....       LCALL     ?XSTACK_DISP0_8
   \   00000C   E0           MOVX      A,@DPTR
   \   00000D   F8           MOV       R0,A
   \   00000E   A3           INC       DPTR
   \   00000F   E0           MOVX      A,@DPTR
   \   000010   8882         MOV       DPL,R0
   \   000012   F583         MOV       DPH,A
   1732            switch ( datatype )
   \   000014   E9           MOV       A,R1
   \   000015   24E0         ADD       A,#-0x20
   \   000017   6038         JZ        ??bdb_isAttrValueChangedSurpassDelta_0
   \   000019   14           DEC       A
   \   00001A   6066         JZ        ??bdb_isAttrValueChangedSurpassDelta_1
   \   00001C   14           DEC       A
   \   00001D   7003         JNZ       $+5
   \   00001F   02....       LJMP      ??bdb_isAttrValueChangedSurpassDelta_2 & 0xFFFF
   \   000022   14           DEC       A
   \   000023   7003         JNZ       $+5
   \   000025   02....       LJMP      ??bdb_isAttrValueChangedSurpassDelta_3 & 0xFFFF
   \   000028   24FB         ADD       A,#-0x5
   \   00002A   7003         JNZ       $+5
   \   00002C   02....       LJMP      ??bdb_isAttrValueChangedSurpassDelta_4 & 0xFFFF
   \   00002F   14           DEC       A
   \   000030   7003         JNZ       $+5
   \   000032   02....       LJMP      ??bdb_isAttrValueChangedSurpassDelta_5 & 0xFFFF
   \   000035   14           DEC       A
   \   000036   7003         JNZ       $+5
   \   000038   02....       LJMP      ??bdb_isAttrValueChangedSurpassDelta_6 & 0xFFFF
   \   00003B   14           DEC       A
   \   00003C   7003         JNZ       $+5
   \   00003E   02....       LJMP      ??bdb_isAttrValueChangedSurpassDelta_6 & 0xFFFF
   \   000041   24F2         ADD       A,#-0xe
   \   000043   7003         JNZ       $+5
   \   000045   02....       LJMP      ??bdb_isAttrValueChangedSurpassDelta_7 & 0xFFFF
   \   000048   14           DEC       A
   \   000049   7003         JNZ       $+5
   \   00004B   02....       LJMP      ??bdb_isAttrValueChangedSurpassDelta_8 & 0xFFFF
   \   00004E   02....       LJMP      ??bdb_isAttrValueChangedSurpassDelta_9 & 0xFFFF
   1733            {
   1734              case ZCL_DATATYPE_UINT8:
   1735              {
   1736                uint8 L = *((uint8*)lastValue);
   \                     ??bdb_isAttrValueChangedSurpassDelta_0:
   \   000051   E0           MOVX      A,@DPTR
   \   000052   F5..         MOV       ?V0,A
   1737                uint8 D = *((uint8*)delta);
   \   000054   8A82         MOV       DPL,R2
   \   000056   8B83         MOV       DPH,R3
   \   000058   E0           MOVX      A,@DPTR
   \   000059   F8           MOV       R0,A
   1738                uint8 C = *((uint8*)curValue);
   \   00005A   8C82         MOV       DPL,R4
   \   00005C   8D83         MOV       DPH,R5
   \   00005E   E0           MOVX      A,@DPTR
   \   00005F   F5..         MOV       ?V1,A
   1739                if( L >= C )
   \   000061   E8           MOV       A,R0
   \   000062   FC           MOV       R4,A
   \   000063   AA..         MOV       R2,?V1
   \   000065   A8..         MOV       R0,?V0
   \   000067   E8           MOV       A,R0
   \   000068   C3           CLR       C
   \   000069   95..         SUBB      A,?V1
   \   00006B   4005         JC        ??bdb_isAttrValueChangedSurpassDelta_10
   1740                {
   1741                  res = ( L-C >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \   00006D   E8           MOV       A,R0
   \   00006E   C3           CLR       C
   \   00006F   9A           SUBB      A,R2
   \   000070   8003         SJMP      ??bdb_isAttrValueChangedSurpassDelta_11
   1742                }
   1743                else
   1744                {
   1745                  res = ( C-L >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \                     ??bdb_isAttrValueChangedSurpassDelta_10:
   \   000072   EA           MOV       A,R2
   \   000073   C3           CLR       C
   \   000074   98           SUBB      A,R0
   \                     ??bdb_isAttrValueChangedSurpassDelta_11:
   \   000075   F8           MOV       R0,A
   \   000076   95E0         SUBB      A,0xE0 /* A   */
   \   000078   F9           MOV       R1,A
   \   000079   C3           CLR       C
   \   00007A   E8           MOV       A,R0
   \   00007B   9C           SUBB      A,R4
   \   00007C   E9           MOV       A,R1
   \   00007D   9400         SUBB      A,#0x0
   \   00007F   02....       LJMP      ??bdb_isAttrValueChangedSurpassDelta_12 & 0xFFFF
   1746                }
   1747                break;
   1748              }
   1749              case ZCL_DATATYPE_UINT16:
   1750              {
   1751                uint16 L = *((uint16*)lastValue);
   \                     ??bdb_isAttrValueChangedSurpassDelta_1:
   \   000082   E0           MOVX      A,@DPTR
   \   000083   F8           MOV       R0,A
   \   000084   A3           INC       DPTR
   \   000085   E0           MOVX      A,@DPTR
   \   000086   F9           MOV       R1,A
   1752                uint16 D = *((uint16*)delta);
   \   000087   8A82         MOV       DPL,R2
   \   000089   8B83         MOV       DPH,R3
   \   00008B   E0           MOVX      A,@DPTR
   \   00008C   F5..         MOV       ?V0,A
   \   00008E   A3           INC       DPTR
   \   00008F   E0           MOVX      A,@DPTR
   \   000090   F5..         MOV       ?V1,A
   1753                uint16 C = *((uint16*)curValue);
   \   000092   8C82         MOV       DPL,R4
   \   000094   8D83         MOV       DPH,R5
   \   000096   E0           MOVX      A,@DPTR
   \   000097   FA           MOV       R2,A
   \   000098   A3           INC       DPTR
   \   000099   E0           MOVX      A,@DPTR
   \   00009A   FB           MOV       R3,A
   1754                if(L>=C)
   \   00009B   C3           CLR       C
   \   00009C   E8           MOV       A,R0
   \   00009D   9A           SUBB      A,R2
   \   00009E   E9           MOV       A,R1
   \   00009F   9B           SUBB      A,R3
   \   0000A0   4008         JC        ??bdb_isAttrValueChangedSurpassDelta_13
   1755                {
   1756                  res = ( L-C >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \   0000A2   E8           MOV       A,R0
   \   0000A3   C3           CLR       C
   \   0000A4   9A           SUBB      A,R2
   \   0000A5   F8           MOV       R0,A
   \   0000A6   E9           MOV       A,R1
   \   0000A7   9B           SUBB      A,R3
   \   0000A8   8006         SJMP      ??bdb_isAttrValueChangedSurpassDelta_14
   1757                }
   1758                else
   1759                {
   1760                  res = ( C-L >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \                     ??bdb_isAttrValueChangedSurpassDelta_13:
   \   0000AA   EA           MOV       A,R2
   \   0000AB   C3           CLR       C
   \   0000AC   98           SUBB      A,R0
   \   0000AD   F8           MOV       R0,A
   \   0000AE   EB           MOV       A,R3
   \   0000AF   99           SUBB      A,R1
   \                     ??bdb_isAttrValueChangedSurpassDelta_14:
   \   0000B0   F9           MOV       R1,A
   \   0000B1   C3           CLR       C
   \   0000B2   E8           MOV       A,R0
   \   0000B3   95..         SUBB      A,?V0
   \   0000B5   E9           MOV       A,R1
   \   0000B6   95..         SUBB      A,?V1
   \   0000B8   02....       LJMP      ??bdb_isAttrValueChangedSurpassDelta_15 & 0xFFFF
   1761                }
   1762                break;
   1763              }
   1764              case ZCL_DATATYPE_UINT24:
   1765              {
   1766                uint24 L = *((uint24*)lastValue);
   \                     ??bdb_isAttrValueChangedSurpassDelta_2:
   \   0000BB   78..         MOV       R0,#?V0
   \   0000BD   12....       LCALL     ?L_MOV_X
   1767                uint24 D = *((uint24*)delta);
   \   0000C0   8A82         MOV       DPL,R2
   \   0000C2   8B83         MOV       DPH,R3
   \   0000C4   78..         MOV       R0,#?V4
   \   0000C6   12....       LCALL     ?L_MOV_X
   1768                uint24 C = *((uint24*)curValue);
   \   0000C9   8C82         MOV       DPL,R4
   \   0000CB   8D83         MOV       DPH,R5
   \   0000CD   78..         MOV       R0,#?V8
   \   0000CF   12....       LCALL     ?L_MOV_X
   1769                if(L>=C)
   \   0000D2   78..         MOV       R0,#?V8
   \   0000D4   79..         MOV       R1,#?V0
   \   0000D6   12....       LCALL     ?UL_GT
   \   0000D9   4033         JC        ??bdb_isAttrValueChangedSurpassDelta_16
   1770                {
   1771                  res = ( L-C >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \   0000DB   8020         SJMP      ??bdb_isAttrValueChangedSurpassDelta_17
   1772                }
   1773                else
   1774                {
   1775                  res = ( C-L >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   1776                }
   1777                break;
   1778              }
   1779              case ZCL_DATATYPE_UINT32:
   1780              {
   1781                uint32 L = *((uint32*)lastValue);
   \                     ??bdb_isAttrValueChangedSurpassDelta_3:
   \   0000DD   78..         MOV       R0,#?V0
   \   0000DF   12....       LCALL     ?L_MOV_X
   1782                uint32 D = *((uint32*)delta);
   \   0000E2   8A82         MOV       DPL,R2
   \   0000E4   8B83         MOV       DPH,R3
   \   0000E6   78..         MOV       R0,#?V4
   \   0000E8   12....       LCALL     ?L_MOV_X
   1783                uint32 C = *((uint32*)curValue);
   \   0000EB   8C82         MOV       DPL,R4
   \   0000ED   8D83         MOV       DPH,R5
   \   0000EF   78..         MOV       R0,#?V8
   \   0000F1   12....       LCALL     ?L_MOV_X
   1784                if(L>=C)
   \   0000F4   78..         MOV       R0,#?V8
   \   0000F6   79..         MOV       R1,#?V0
   \   0000F8   12....       LCALL     ?UL_GT
   \   0000FB   4011         JC        ??bdb_isAttrValueChangedSurpassDelta_16
   1785                {
   1786                  res = ( L-C >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \                     ??bdb_isAttrValueChangedSurpassDelta_17:
   \   0000FD   78..         MOV       R0,#?V0
   \   0000FF   79..         MOV       R1,#?V8
   \   000101   12....       LCALL     ?L_SUB
   \   000104   78..         MOV       R0,#?V4
   \   000106   79..         MOV       R1,#?V0
   \   000108   12....       LCALL     ?UL_GT
   \   00010B   02....       LJMP      ??bdb_isAttrValueChangedSurpassDelta_15 & 0xFFFF
   1787                }
   1788                else
   1789                {
   1790                  res = ( C-L >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \                     ??bdb_isAttrValueChangedSurpassDelta_16:
   \   00010E   78..         MOV       R0,#?V8
   \   000110   79..         MOV       R1,#?V0
   \   000112   12....       LCALL     ?L_SUB
   \   000115   78..         MOV       R0,#?V4
   \   000117   79..         MOV       R1,#?V8
   \   000119   12....       LCALL     ?UL_GT
   \   00011C   02....       LJMP      ??bdb_isAttrValueChangedSurpassDelta_15 & 0xFFFF
   1791                }
   1792                break;
   1793              }
   1794              case ZCL_DATATYPE_INT8:
   1795              {
   1796                int8 L = *((int8*)lastValue);
   \                     ??bdb_isAttrValueChangedSurpassDelta_4:
   \   00011F   E0           MOVX      A,@DPTR
   \   000120   F5..         MOV       ?V0,A
   1797                int8 D = *((int8*)delta);
   \   000122   8A82         MOV       DPL,R2
   \   000124   8B83         MOV       DPH,R3
   \   000126   E0           MOVX      A,@DPTR
   \   000127   F8           MOV       R0,A
   1798                int8 C = *((int8*)curValue);
   \   000128   8C82         MOV       DPL,R4
   \   00012A   8D83         MOV       DPH,R5
   \   00012C   E0           MOVX      A,@DPTR
   \   00012D   F5..         MOV       ?V1,A
   1799                if(L>=C)
   \   00012F   E8           MOV       A,R0
   \   000130   FC           MOV       R4,A
   \   000131   33           RLC       A
   \   000132   95E0         SUBB      A,0xE0 /* A   */
   \   000134   FD           MOV       R5,A
   \   000135   E5..         MOV       A,?V1
   \   000137   FA           MOV       R2,A
   \   000138   33           RLC       A
   \   000139   95E0         SUBB      A,0xE0 /* A   */
   \   00013B   FB           MOV       R3,A
   \   00013C   E5..         MOV       A,?V0
   \   00013E   F8           MOV       R0,A
   \   00013F   33           RLC       A
   \   000140   95E0         SUBB      A,0xE0 /* A   */
   \   000142   F9           MOV       R1,A
   \   000143   E8           MOV       A,R0
   \   000144   C3           CLR       C
   \   000145   95..         SUBB      A,?V1
   \   000147   A2D2         MOV       C,0xD0 /* PSW */.2
   \   000149   65D0         XRL       A,PSW
   \   00014B   33           RLC       A
   \   00014C   4008         JC        ??bdb_isAttrValueChangedSurpassDelta_18
   1800                {
   1801                  res = ( L-C >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \   00014E   E8           MOV       A,R0
   \   00014F   C3           CLR       C
   \   000150   9A           SUBB      A,R2
   \   000151   F8           MOV       R0,A
   \   000152   E9           MOV       A,R1
   \   000153   9B           SUBB      A,R3
   \   000154   8006         SJMP      ??bdb_isAttrValueChangedSurpassDelta_19
   1802                }
   1803                else
   1804                {
   1805                  res = ( C-L >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \                     ??bdb_isAttrValueChangedSurpassDelta_18:
   \   000156   EA           MOV       A,R2
   \   000157   C3           CLR       C
   \   000158   98           SUBB      A,R0
   \   000159   F8           MOV       R0,A
   \   00015A   EB           MOV       A,R3
   \   00015B   99           SUBB      A,R1
   \                     ??bdb_isAttrValueChangedSurpassDelta_19:
   \   00015C   F9           MOV       R1,A
   \   00015D   C3           CLR       C
   \   00015E   E8           MOV       A,R0
   \   00015F   9C           SUBB      A,R4
   \   000160   E9           MOV       A,R1
   \   000161   9D           SUBB      A,R5
   \   000162   803B         SJMP      ??bdb_isAttrValueChangedSurpassDelta_12
   1806                }
   1807                break;
   1808              }
   1809              case ZCL_DATATYPE_INT16:
   1810              {
   1811                int16 L = *((int16*)lastValue);
   \                     ??bdb_isAttrValueChangedSurpassDelta_5:
   \   000164   E0           MOVX      A,@DPTR
   \   000165   F8           MOV       R0,A
   \   000166   A3           INC       DPTR
   \   000167   E0           MOVX      A,@DPTR
   \   000168   F9           MOV       R1,A
   1812                int16 D = *((int16*)delta);
   \   000169   8A82         MOV       DPL,R2
   \   00016B   8B83         MOV       DPH,R3
   \   00016D   E0           MOVX      A,@DPTR
   \   00016E   F5..         MOV       ?V0,A
   \   000170   A3           INC       DPTR
   \   000171   E0           MOVX      A,@DPTR
   \   000172   F5..         MOV       ?V1,A
   1813                int16 C = *((int16*)curValue);
   \   000174   8C82         MOV       DPL,R4
   \   000176   8D83         MOV       DPH,R5
   \   000178   E0           MOVX      A,@DPTR
   \   000179   FA           MOV       R2,A
   \   00017A   A3           INC       DPTR
   \   00017B   E0           MOVX      A,@DPTR
   \   00017C   FB           MOV       R3,A
   1814                if(L>=C)
   \   00017D   C3           CLR       C
   \   00017E   E8           MOV       A,R0
   \   00017F   9A           SUBB      A,R2
   \   000180   E9           MOV       A,R1
   \   000181   9B           SUBB      A,R3
   \   000182   A2D2         MOV       C,0xD0 /* PSW */.2
   \   000184   65D0         XRL       A,PSW
   \   000186   33           RLC       A
   \   000187   4008         JC        ??bdb_isAttrValueChangedSurpassDelta_20
   1815                {
   1816                  res = ( L-C >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \   000189   E8           MOV       A,R0
   \   00018A   C3           CLR       C
   \   00018B   9A           SUBB      A,R2
   \   00018C   F8           MOV       R0,A
   \   00018D   E9           MOV       A,R1
   \   00018E   9B           SUBB      A,R3
   \   00018F   8006         SJMP      ??bdb_isAttrValueChangedSurpassDelta_21
   1817                }
   1818                else
   1819                {
   1820                  res = ( C-L >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \                     ??bdb_isAttrValueChangedSurpassDelta_20:
   \   000191   EA           MOV       A,R2
   \   000192   C3           CLR       C
   \   000193   98           SUBB      A,R0
   \   000194   F8           MOV       R0,A
   \   000195   EB           MOV       A,R3
   \   000196   99           SUBB      A,R1
   \                     ??bdb_isAttrValueChangedSurpassDelta_21:
   \   000197   F9           MOV       R1,A
   \   000198   C3           CLR       C
   \   000199   E8           MOV       A,R0
   \   00019A   95..         SUBB      A,?V0
   \   00019C   E9           MOV       A,R1
   \   00019D   95..         SUBB      A,?V1
   \                     ??bdb_isAttrValueChangedSurpassDelta_12:
   \   00019F   A2D2         MOV       C,0xD0 /* PSW */.2
   \   0001A1   65D0         XRL       A,PSW
   \   0001A3   33           RLC       A
   \   0001A4   803E         SJMP      ??bdb_isAttrValueChangedSurpassDelta_15
   1821                }
   1822                break;
   1823              }
   1824              case ZCL_DATATYPE_INT24:
   1825              {
   1826                int24 L = *((int24*)lastValue);
   1827                int24 D = *((int24*)delta);
   1828                int24 C = *((int24*)curValue);
   1829                if(L>=C)
   1830                {
   1831                  res = ( L-C >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   1832                }
   1833                else
   1834                {
   1835                  res = ( C-L >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   1836                }
   1837                break;
   1838              }
   1839              case ZCL_DATATYPE_INT32:
   1840              {
   1841                int32 L = *((int32*)lastValue);
   \                     ??bdb_isAttrValueChangedSurpassDelta_6:
   \   0001A6   78..         MOV       R0,#?V0
   \   0001A8   12....       LCALL     ?L_MOV_X
   1842                int32 D = *((int32*)delta);
   \   0001AB   8A82         MOV       DPL,R2
   \   0001AD   8B83         MOV       DPH,R3
   \   0001AF   78..         MOV       R0,#?V4
   \   0001B1   12....       LCALL     ?L_MOV_X
   1843                int32 C = *((int32*)curValue);
   \   0001B4   8C82         MOV       DPL,R4
   \   0001B6   8D83         MOV       DPH,R5
   \   0001B8   78..         MOV       R0,#?V8
   \   0001BA   12....       LCALL     ?L_MOV_X
   1844                if(L>=C)
   \   0001BD   78..         MOV       R0,#?V8
   \   0001BF   79..         MOV       R1,#?V0
   \   0001C1   12....       LCALL     ?SL_GT
   \   0001C4   4010         JC        ??bdb_isAttrValueChangedSurpassDelta_22
   1845                {
   1846                  res = ( L-C >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \   0001C6   78..         MOV       R0,#?V0
   \   0001C8   79..         MOV       R1,#?V8
   \   0001CA   12....       LCALL     ?L_SUB
   \   0001CD   78..         MOV       R0,#?V4
   \   0001CF   79..         MOV       R1,#?V0
   \   0001D1   12....       LCALL     ?SL_GT
   \   0001D4   800E         SJMP      ??bdb_isAttrValueChangedSurpassDelta_15
   1847                }
   1848                else
   1849                {
   1850                  res = ( C-L >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \                     ??bdb_isAttrValueChangedSurpassDelta_22:
   \   0001D6   78..         MOV       R0,#?V8
   \   0001D8   79..         MOV       R1,#?V0
   \   0001DA   12....       LCALL     ?L_SUB
   \   0001DD   78..         MOV       R0,#?V4
   \   0001DF   79..         MOV       R1,#?V8
   \   0001E1   12....       LCALL     ?SL_GT
   \                     ??bdb_isAttrValueChangedSurpassDelta_15:
   \   0001E4   4076         JC        ??bdb_isAttrValueChangedSurpassDelta_9
   \   0001E6   8072         SJMP      ??bdb_isAttrValueChangedSurpassDelta_23
   1851                }
   1852                break;
   1853              }
   1854              case ZCL_DATATYPE_SINGLE_PREC:
   1855              {
   1856                float L = *((float*)lastValue);
   \                     ??bdb_isAttrValueChangedSurpassDelta_7:
   \   0001E8   78..         MOV       R0,#?V0
   \   0001EA   12....       LCALL     ?L_MOV_X
   1857                float D = *((float*)delta);
   \   0001ED   8A82         MOV       DPL,R2
   \   0001EF   8B83         MOV       DPH,R3
   \   0001F1   78..         MOV       R0,#?V4
   \   0001F3   12....       LCALL     ?L_MOV_X
   1858                float C = *((float*)curValue);
   \   0001F6   8C82         MOV       DPL,R4
   \   0001F8   8D83         MOV       DPH,R5
   \   0001FA   78..         MOV       R0,#?V8
   \   0001FC   12....       LCALL     ?L_MOV_X
   1859                if(L>=C)
   \   0001FF   78..         MOV       R0,#?V0
   \   000201   79..         MOV       R1,#?V8
   \   000203   12....       LCALL     ?FLT_GE
   \   000206   4030         JC        ??bdb_isAttrValueChangedSurpassDelta_24
   1860                {
   1861                  res = ( L-C >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   1862                }
   1863                else
   1864                {
   1865                  res = ( C-L >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \   000208   78..         MOV       R0,#?V8
   \   00020A   79..         MOV       R1,#?V0
   \   00020C   12....       LCALL     ?FLT_SUB
   \   00020F   78..         MOV       R0,#?V8
   \   000211   79..         MOV       R1,#?V4
   \   000213   12....       LCALL     ?FLT_GE
   \   000216   802E         SJMP      ??bdb_isAttrValueChangedSurpassDelta_25
   1866                }
   1867                break;
   1868              }
   1869              case ZCL_DATATYPE_DOUBLE_PREC:
   1870              {
   1871                double L = *((double*)lastValue);
   \                     ??bdb_isAttrValueChangedSurpassDelta_8:
   \   000218   78..         MOV       R0,#?V0
   \   00021A   12....       LCALL     ?L_MOV_X
   1872                double D = *((double*)delta);
   \   00021D   8A82         MOV       DPL,R2
   \   00021F   8B83         MOV       DPH,R3
   \   000221   78..         MOV       R0,#?V4
   \   000223   12....       LCALL     ?L_MOV_X
   1873                double C = *((double*)curValue);
   \   000226   8C82         MOV       DPL,R4
   \   000228   8D83         MOV       DPH,R5
   \   00022A   78..         MOV       R0,#?V8
   \   00022C   12....       LCALL     ?L_MOV_X
   1874                if(L>=C)
   \   00022F   78..         MOV       R0,#?V0
   \   000231   79..         MOV       R1,#?V8
   \   000233   12....       LCALL     ?FLT_GE
   \   000236   5012         JNC       ??bdb_isAttrValueChangedSurpassDelta_26
   1875                {
   1876                  res = ( L-C >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \                     ??bdb_isAttrValueChangedSurpassDelta_24:
   \   000238   78..         MOV       R0,#?V0
   \   00023A   79..         MOV       R1,#?V8
   \   00023C   12....       LCALL     ?FLT_SUB
   \   00023F   78..         MOV       R0,#?V0
   \   000241   79..         MOV       R1,#?V4
   \   000243   12....       LCALL     ?FLT_GE
   \                     ??bdb_isAttrValueChangedSurpassDelta_25:
   \   000246   5014         JNC       ??bdb_isAttrValueChangedSurpassDelta_9
   \   000248   8010         SJMP      ??bdb_isAttrValueChangedSurpassDelta_23
   1877                }
   1878                else
   1879                {
   1880                  res = ( C-L >= D) ? BDBREPORTING_TRUE:BDBREPORTING_FALSE;
   \                     ??bdb_isAttrValueChangedSurpassDelta_26:
   \   00024A   78..         MOV       R0,#?V8
   \   00024C   79..         MOV       R1,#?V0
   \   00024E   12....       LCALL     ?FLT_SUB
   \   000251   78..         MOV       R0,#?V8
   \   000253   79..         MOV       R1,#?V4
   \   000255   12....       LCALL     ?FLT_GE
   \   000258   5002         JNC       ??bdb_isAttrValueChangedSurpassDelta_9
   \                     ??bdb_isAttrValueChangedSurpassDelta_23:
   \   00025A   7E01         MOV       R6,#0x1
   1881                }
   1882                break;
   1883              }
   1884              case ZCL_DATATYPE_INT40:
   1885              case ZCL_DATATYPE_INT48:
   1886              case ZCL_DATATYPE_INT56:
   1887              case ZCL_DATATYPE_UINT64:
   1888              case ZCL_DATATYPE_INT64:
   1889              case ZCL_DATATYPE_SEMI_PREC:
   1890              case ZCL_DATATYPE_UINT40:
   1891              case ZCL_DATATYPE_UINT48:
   1892              case ZCL_DATATYPE_UINT56:
   1893              case ZCL_DATATYPE_TOD:
   1894              case ZCL_DATATYPE_DATE:
   1895              case ZCL_DATATYPE_UTC:
   1896              {
   1897                // Not implemented
   1898                res = BDBREPORTING_FALSE;
   1899                break;
   1900              }
   1901              default:
   1902              {
   1903                res = BDBREPORTING_FALSE;
   1904                break;
   1905              }
   1906            }
   1907            return res;
   \                     ??bdb_isAttrValueChangedSurpassDelta_9:
   \   00025C   EE           MOV       A,R6
   \   00025D   F9           MOV       R1,A
   \   00025E   7F0C         MOV       R7,#0xc
   \   000260   02....       LJMP      ?BANKED_LEAVE_XDATA
   1908          }
   1909          
   1910          /*
   1911          * End: Helper methods
   1912          */
   1913          
   1914          
   1915          /*
   1916          * Begin: Reporting timer related methods
   1917          */
   1918          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1919          static void bdb_RepRestartNextEventTimer( void )
   \                     bdb_RepRestartNextEventTimer:
   1920          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000   74F0         MOV       A,#-0x10
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   1921            uint32 timeMs;
   1922            // convert from seconds to milliseconds
   1923            timeMs = 1000L * (bdb_reportingNextEventTimeout); 
   1924            osal_start_timerEx( bdb_TaskID, BDB_REPORT_TIMEOUT, timeMs );
   \   000005                ; Setup parameters for call to function osal_start_timerEx
   \   000005   90....       MOV       DPTR,#bdb_reportingNextEventTimeout
   \   000008   E0           MOVX      A,@DPTR
   \   000009   F5..         MOV       ?V0,A
   \   00000B   A3           INC       DPTR
   \   00000C   E0           MOVX      A,@DPTR
   \   00000D   F5..         MOV       ?V1,A
   \   00000F   E4           CLR       A
   \   000010   F5..         MOV       ?V2,A
   \   000012   F5..         MOV       ?V3,A
   \   000014   90....       MOV       DPTR,#__Constant_3e8
   \   000017   78..         MOV       R0,#?V4
   \   000019   12....       LCALL     ?L_MOV_X
   \   00001C   78..         MOV       R0,#?V0
   \   00001E   79..         MOV       R1,#?V4
   \   000020   12....       LCALL     ?L_MUL
   \   000023   78..         MOV       R0,#?V0
   \   000025   12....       LCALL     ?PUSH_XSTACK_I_FOUR
   \   000028   7A80         MOV       R2,#-0x80
   \   00002A   7B00         MOV       R3,#0x0
   \   00002C   90....       MOV       DPTR,#bdb_TaskID
   \   00002F   E0           MOVX      A,@DPTR
   \   000030   F9           MOV       R1,A
   \   000031   12....       LCALL     `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
   \   000034   7404         MOV       A,#0x4
   \   000036   12....       LCALL     ?DEALLOC_XSTACK8
   1925          }
   \   000039   7F08         MOV       R7,#0x8
   \   00003B   02....       LJMP      ?BANKED_LEAVE_XDATA
   1926          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1927          static void bdb_RepSetupReporting( void )
   \                     bdb_RepSetupReporting:
   1928          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000   74F4         MOV       A,#-0xc
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   1929            uint8 numArrayFlags, i;
   1930            //Stop if reporting timer is active
   1931            osal_stop_timerEx( bdb_TaskID, BDB_REPORT_TIMEOUT );
   \   000005                ; Setup parameters for call to function osal_stop_timerEx
   \   000005   7A80         MOV       R2,#-0x80
   \   000007   7B00         MOV       R3,#0x0
   \   000009   90....       MOV       DPTR,#bdb_TaskID
   \   00000C   E0           MOVX      A,@DPTR
   \   00000D   F9           MOV       R1,A
   \   00000E   12....       LCALL     `??osal_stop_timerEx::?relay`; Banked call to: osal_stop_timerEx
   1932            
   1933            numArrayFlags = bdb_reportingClusterEndpointArrayCount;
   \   000011   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   000014   E0           MOVX      A,@DPTR
   \   000015   F5..         MOV       ?V3,A
   1934            bdbReportFlagsHolder_t* arrayFlags = (bdbReportFlagsHolder_t *)osal_mem_alloc( sizeof( bdbReportFlagsHolder_t )*numArrayFlags );
   \   000017                ; Setup parameters for call to function osal_mem_alloc
   \   000017   F5..         MOV       ?V0,A
   \   000019   75..00       MOV       ?V1,#0x0
   \   00001C   7402         MOV       A,#0x2
   \   00001E   78..         MOV       R0,#?V0
   \   000020   12....       LCALL     ?S_SHL
   \   000023   AA..         MOV       R2,?V0
   \   000025   AB..         MOV       R3,?V1
   \   000027   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   00002A   8A..         MOV       ?V0,R2
   \   00002C   8B..         MOV       ?V1,R3
   \   00002E   AE..         MOV       R6,?V0
   \   000030   AF..         MOV       R7,?V1
   1935            if( arrayFlags==NULL )
   \   000032   EA           MOV       A,R2
   \   000033   4F           ORL       A,R7
   \   000034   7003         JNZ       $+5
   \   000036   02....       LJMP      ??bdb_RepSetupReporting_0 & 0xFFFF
   1936            {
   1937              return;
   1938            }
   1939            for( i=0; i<numArrayFlags; i++ )
   \   000039   75..00       MOV       ?V2,#0x0
   \   00003C   8054         SJMP      ??bdb_RepSetupReporting_1
   1940            {
   1941              arrayFlags[i].endpoint =  bdb_reportingClusterEndpointArray[i].endpoint;
   \                     ??bdb_RepSetupReporting_2:
   \   00003E   AA..         MOV       R2,?V2
   \   000040   8A..         MOV       ?V0,R2
   \   000042   75..00       MOV       ?V1,#0x0
   \   000045   7402         MOV       A,#0x2
   \   000047   78..         MOV       R0,#?V0
   \   000049   12....       LCALL     ?S_SHL
   \   00004C   EE           MOV       A,R6
   \   00004D   25..         ADD       A,?V0
   \   00004F   F8           MOV       R0,A
   \   000050   EF           MOV       A,R7
   \   000051   35..         ADDC      A,?V1
   \   000053   F9           MOV       R1,A
   \   000054   EA           MOV       A,R2
   \   000055   75F00D       MOV       B,#0xd
   \   000058   A4           MUL       AB
   \   000059   FA           MOV       R2,A
   \   00005A   ABF0         MOV       R3,B
   \   00005C   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   00005E   2A           ADD       A,R2
   \   00005F   FA           MOV       R2,A
   \   000060   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   000062   3B           ADDC      A,R3
   \   000063   FB           MOV       R3,A
   \   000064   8A82         MOV       DPL,R2
   \   000066   F583         MOV       DPH,A
   \   000068   A3           INC       DPTR
   \   000069   E0           MOVX      A,@DPTR
   \   00006A   8882         MOV       DPL,R0
   \   00006C   8983         MOV       DPH,R1
   \   00006E   A3           INC       DPTR
   \   00006F   F0           MOVX      @DPTR,A
   1942              arrayFlags[i].cluster =  bdb_reportingClusterEndpointArray[i].cluster;
   \   000070   8A82         MOV       DPL,R2
   \   000072   8B83         MOV       DPH,R3
   \   000074   A3           INC       DPTR
   \   000075   A3           INC       DPTR
   \   000076   E0           MOVX      A,@DPTR
   \   000077   FC           MOV       R4,A
   \   000078   A3           INC       DPTR
   \   000079   E0           MOVX      A,@DPTR
   \   00007A   FD           MOV       R5,A
   \   00007B   8882         MOV       DPL,R0
   \   00007D   8983         MOV       DPH,R1
   \   00007F   A3           INC       DPTR
   \   000080   A3           INC       DPTR
   \   000081   EC           MOV       A,R4
   \   000082   F0           MOVX      @DPTR,A
   \   000083   A3           INC       DPTR
   \   000084   ED           MOV       A,R5
   \   000085   F0           MOVX      @DPTR,A
   1943              arrayFlags[i].flags =  bdb_reportingClusterEndpointArray[i].flags;
   \   000086   8A82         MOV       DPL,R2
   \   000088   8B83         MOV       DPH,R3
   \   00008A   E0           MOVX      A,@DPTR
   \   00008B   8882         MOV       DPL,R0
   \   00008D   8983         MOV       DPH,R1
   \   00008F   F0           MOVX      @DPTR,A
   1944            }
   \   000090   05..         INC       ?V2
   \                     ??bdb_RepSetupReporting_1:
   \   000092   E5..         MOV       A,?V2
   \   000094   C3           CLR       C
   \   000095   95..         SUBB      A,?V3
   \   000097   40A5         JC        ??bdb_RepSetupReporting_2
   1945            
   1946            if( bdb_reportingClusterEndpointArrayCount > 0 )
   \   000099   90....       MOV       DPTR,#bdb_reportingClusterEndpointArrayCount
   \   00009C   E0           MOVX      A,@DPTR
   \   00009D   6003         JZ        ??bdb_RepSetupReporting_3
   1947            {
   1948              bdb_clusterEndpointArrayFreeAll( );
   \   00009F                ; Setup parameters for call to function bdb_clusterEndpointArrayFreeAll
   \   00009F   12....       LCALL     `??bdb_clusterEndpointArrayFreeAll::?relay`; Banked call to: bdb_clusterEndpointArrayFreeAll
   1949            }
   1950            
   1951            //Built or rebuilt the clusterEndpoint array
   1952            bdb_repAttrBuildClusterEndPointArrayBasedOnConfRecordsArray( );
   \                     ??bdb_RepSetupReporting_3:
   \   0000A2                ; Setup parameters for call to function bdb_repAttrBuildClusterEndPointArrayBasedOnConfRecordsArray
   \   0000A2   12....       LCALL     ??bdb_repAttrBuildClusterEndPointArrayBasedOnCo; Banked call to: bdb_repAttrBuildClusterEndPointArrayBasedOnConfRecordsArray
   1953            
   1954            for( i=0; i<numArrayFlags;i++ )
   \   0000A5   75..00       MOV       ?V2,#0x0
   \   0000A8   8056         SJMP      ??bdb_RepSetupReporting_4
   1955            {
   1956               uint8 clusterEndpointIndex = bdb_clusterEndpointArraySearch( arrayFlags[i].endpoint, arrayFlags[i].cluster );
   \                     ??bdb_RepSetupReporting_5:
   \   0000AA   E5..         MOV       A,?V2
   \   0000AC   F5..         MOV       ?V0,A
   \   0000AE   75..00       MOV       ?V1,#0x0
   \   0000B1   7402         MOV       A,#0x2
   \   0000B3   78..         MOV       R0,#?V0
   \   0000B5   12....       LCALL     ?S_SHL
   \   0000B8   EE           MOV       A,R6
   \   0000B9   25..         ADD       A,?V0
   \   0000BB   F8           MOV       R0,A
   \   0000BC   EF           MOV       A,R7
   \   0000BD   35..         ADDC      A,?V1
   \   0000BF   88..         MOV       ?V0,R0
   \   0000C1   F5..         MOV       ?V1,A
   \   0000C3                ; Setup parameters for call to function bdb_clusterEndpointArraySearch
   \   0000C3   8882         MOV       DPL,R0
   \   0000C5   F583         MOV       DPH,A
   \   0000C7   A3           INC       DPTR
   \   0000C8   A3           INC       DPTR
   \   0000C9   E0           MOVX      A,@DPTR
   \   0000CA   FA           MOV       R2,A
   \   0000CB   A3           INC       DPTR
   \   0000CC   E0           MOVX      A,@DPTR
   \   0000CD   FB           MOV       R3,A
   \   0000CE   8882         MOV       DPL,R0
   \   0000D0   85..83       MOV       DPH,?V1
   \   0000D3   A3           INC       DPTR
   \   0000D4   E0           MOVX      A,@DPTR
   \   0000D5   F9           MOV       R1,A
   \   0000D6   12....       LCALL     `??bdb_clusterEndpointArraySearch::?relay`; Banked call to: bdb_clusterEndpointArraySearch
   \   0000D9   E9           MOV       A,R1
   \   0000DA   F8           MOV       R0,A
   1957               if( clusterEndpointIndex != BDBREPORTING_INVALIDINDEX )
   \   0000DB   74FF         MOV       A,#-0x1
   \   0000DD   68           XRL       A,R0
   \   0000DE   601E         JZ        ??bdb_RepSetupReporting_6
   1958               {
   1959                 bdb_reportingClusterEndpointArray[clusterEndpointIndex].flags = arrayFlags[i].flags;
   \   0000E0   85..82       MOV       DPL,?V0
   \   0000E3   85..83       MOV       DPH,?V1
   \   0000E6   E0           MOVX      A,@DPTR
   \   0000E7   C0E0         PUSH      A
   \   0000E9   E9           MOV       A,R1
   \   0000EA   75F00D       MOV       B,#0xd
   \   0000ED   A4           MUL       AB
   \   0000EE   F8           MOV       R0,A
   \   0000EF   A9F0         MOV       R1,B
   \   0000F1   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   0000F3   28           ADD       A,R0
   \   0000F4   F582         MOV       DPL,A
   \   0000F6   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   0000F8   39           ADDC      A,R1
   \   0000F9   F583         MOV       DPH,A
   \   0000FB   D0E0         POP       A
   \   0000FD   F0           MOVX      @DPTR,A
   1960               }
   1961            }
   \                     ??bdb_RepSetupReporting_6:
   \   0000FE   05..         INC       ?V2
   \                     ??bdb_RepSetupReporting_4:
   \   000100   E5..         MOV       A,?V2
   \   000102   C3           CLR       C
   \   000103   95..         SUBB      A,?V3
   \   000105   40A3         JC        ??bdb_RepSetupReporting_5
   1962            osal_mem_free( arrayFlags );
   \   000107                ; Setup parameters for call to function osal_mem_free
   \   000107   EE           MOV       A,R6
   \   000108   FA           MOV       R2,A
   \   000109   EF           MOV       A,R7
   \   00010A   FB           MOV       R3,A
   \   00010B   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
   1963          }
   \                     ??bdb_RepSetupReporting_0:
   \   00010E   7F04         MOV       R7,#0x4
   \   000110   02....       LJMP      ?BANKED_LEAVE_XDATA
   1964          
   1965                                         

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1966          static void bdb_RepStopEventTimer( void )
   \                     bdb_RepStopEventTimer:
   1967          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1968            osal_stop_timerEx( bdb_TaskID, BDB_REPORT_TIMEOUT );
   \   000004                ; Setup parameters for call to function osal_stop_timerEx
   \   000004   7A80         MOV       R2,#-0x80
   \   000006   7B00         MOV       R3,#0x0
   \   000008   90....       MOV       DPTR,#bdb_TaskID
   \   00000B   E0           MOVX      A,@DPTR
   \   00000C   F9           MOV       R1,A
   \   00000D   12....       LCALL     `??osal_stop_timerEx::?relay`; Banked call to: osal_stop_timerEx
   1969          }
   \   000010   D083         POP       DPH
   \   000012   D082         POP       DPL
   \   000014   02....       LJMP      ?BRET
   1970          
   1971          /*
   1972          * End: Reporting timer related methods
   1973          */
   1974          
   1975          /*
   1976          * Begin: Ztack zcl helper methods
   1977          */
   1978          
   1979          /*********************************************************************
   1980           * @fn      bdb_FindEpDesc
   1981           *
   1982           * @brief   Find the EndPoint descriptor pointer
   1983           *
   1984           * @param   endPoint - EndPoint Id
   1985           *
   1986           * @return  CurrEpDescriptor - Pointer to found Simple Descriptor, NULL otherwise
   1987           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1988          static endPointDesc_t* bdb_FindEpDesc( uint8 endPoint )
   \                     bdb_FindEpDesc:
   1989          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1990            endPointDesc_t *CurrEpDescriptor = NULL;
   1991            
   1992            epList_t *bdb_CurrEpDescriptorNextInList;
   1993            
   1994            bdb_CurrEpDescriptorNextInList = bdb_HeadEpDescriptorList;
   \   000004   90....       MOV       DPTR,#bdb_HeadEpDescriptorList
   \   000007   E0           MOVX      A,@DPTR
   \   000008   FC           MOV       R4,A
   \   000009   A3           INC       DPTR
   \   00000A   E0           MOVX      A,@DPTR
   \   00000B   8003         SJMP      ??bdb_FindEpDesc_0
   1995            CurrEpDescriptor = bdb_CurrEpDescriptorNextInList->epDesc;
   1996            
   1997            while ( CurrEpDescriptor->endPoint != endPoint )
   1998            {
   1999              if ( bdb_CurrEpDescriptorNextInList->nextDesc->nextDesc != NULL )
   2000              {
   2001                bdb_CurrEpDescriptorNextInList = bdb_CurrEpDescriptorNextInList->nextDesc;
   \                     ??bdb_FindEpDesc_1:
   \   00000D   EA           MOV       A,R2
   \   00000E   FC           MOV       R4,A
   \   00000F   EB           MOV       A,R3
   \                     ??bdb_FindEpDesc_0:
   \   000010   FD           MOV       R5,A
   2002                CurrEpDescriptor = bdb_CurrEpDescriptorNextInList->epDesc;
   \   000011   8C82         MOV       DPL,R4
   \   000013   F583         MOV       DPH,A
   \   000015   A3           INC       DPTR
   \   000016   A3           INC       DPTR
   \   000017   E0           MOVX      A,@DPTR
   \   000018   FA           MOV       R2,A
   \   000019   A3           INC       DPTR
   \   00001A   E0           MOVX      A,@DPTR
   \   00001B   8A82         MOV       DPL,R2
   \   00001D   F583         MOV       DPH,A
   2003              }
   \   00001F   E0           MOVX      A,@DPTR
   \   000020   69           XRL       A,R1
   \   000021   601C         JZ        ??bdb_FindEpDesc_2
   \   000023   8C82         MOV       DPL,R4
   \   000025   8D83         MOV       DPH,R5
   \   000027   E0           MOVX      A,@DPTR
   \   000028   FA           MOV       R2,A
   \   000029   A3           INC       DPTR
   \   00002A   E0           MOVX      A,@DPTR
   \   00002B   FB           MOV       R3,A
   \   00002C   8A82         MOV       DPL,R2
   \   00002E   F583         MOV       DPH,A
   \   000030   E0           MOVX      A,@DPTR
   \   000031   FC           MOV       R4,A
   \   000032   A3           INC       DPTR
   \   000033   E0           MOVX      A,@DPTR
   \   000034   FD           MOV       R5,A
   \   000035   EC           MOV       A,R4
   \   000036   4D           ORL       A,R5
   \   000037   70D4         JNZ       ??bdb_FindEpDesc_1
   2004              else
   2005              {
   2006                return ( NULL );
   \   000039   7A00         MOV       R2,#0x0
   \   00003B   7B00         MOV       R3,#0x0
   \   00003D   8004         SJMP      ??bdb_FindEpDesc_3
   2007              }
   2008            }
   2009            return CurrEpDescriptor;
   \                     ??bdb_FindEpDesc_2:
   \   00003F   AA82         MOV       R2,DPL
   \   000041   AB83         MOV       R3,DPH
   \                     ??bdb_FindEpDesc_3:
   \   000043   D083         POP       DPH
   \   000045   D082         POP       DPL
   \   000047   02....       LJMP      ?BRET
   2010          }
   2011          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   2012          static uint8 bdb_RepFindAttrEntry( uint8 endpoint, uint16 cluster, uint16 attrID, zclAttribute_t* attrRes )
   \                     bdb_RepFindAttrEntry:
   2013          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000                REQUIRE ?V8
   \   000000                REQUIRE ?V9
   \   000000   74EE         MOV       A,#-0x12
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 18
   \   000005                ; Auto size: 2
   \   000005   74FE         MOV       A,#-0x2
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   89..         MOV       ?V2,R1
   \   00000C   8A..         MOV       ?V0,R2
   \   00000E   8B..         MOV       ?V1,R3
   \   000010   EC           MOV       A,R4
   \   000011   FE           MOV       R6,A
   \   000012   ED           MOV       A,R5
   \   000013   FF           MOV       R7,A
   2014            epList_t *epCur = epList;
   2015            uint8 i;
   2016          
   2017            zcl_memset(gAttrDataValue, 0, BDBREPORTING_MAX_ANALOG_ATTR_SIZE);
   \   000014                ; Setup parameters for call to function osal_memset
   \   000014   7C04         MOV       R4,#0x4
   \   000016   7D00         MOV       R5,#0x0
   \   000018   7900         MOV       R1,#0x0
   \   00001A   7A..         MOV       R2,#gAttrDataValue & 0xff
   \   00001C   7B..         MOV       R3,#(gAttrDataValue >> 8) & 0xff
   \   00001E   12....       LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
   2018            for ( epCur = epList; epCur != NULL; epCur = epCur->nextDesc )
   \   000021   90....       MOV       DPTR,#epList
   \   000024   8006         SJMP      ??bdb_RepFindAttrEntry_0
   \                     ??bdb_RepFindAttrEntry_1:
   \   000026   85..82       MOV       DPL,?V4
   \   000029   85..83       MOV       DPH,?V5
   \                     ??bdb_RepFindAttrEntry_0:
   \   00002C   E0           MOVX      A,@DPTR
   \   00002D   F5..         MOV       ?V4,A
   \   00002F   A3           INC       DPTR
   \   000030   E0           MOVX      A,@DPTR
   \   000031   F5..         MOV       ?V5,A
   \   000033   E5..         MOV       A,?V4
   \   000035   45..         ORL       A,?V5
   \   000037   7003         JNZ       $+5
   \   000039   02....       LJMP      ??bdb_RepFindAttrEntry_2 & 0xFFFF
   2019            {
   2020              if( epCur->epDesc->endPoint == endpoint )
   \   00003C   85..82       MOV       DPL,?V4
   \   00003F   85..83       MOV       DPH,?V5
   \   000042   A3           INC       DPTR
   \   000043   A3           INC       DPTR
   \   000044   E0           MOVX      A,@DPTR
   \   000045   F8           MOV       R0,A
   \   000046   A3           INC       DPTR
   \   000047   E0           MOVX      A,@DPTR
   \   000048   F583         MOV       DPH,A
   \   00004A   8882         MOV       DPL,R0
   \   00004C   E0           MOVX      A,@DPTR
   \   00004D   F9           MOV       R1,A
   \   00004E   E5..         MOV       A,?V2
   \   000050   69           XRL       A,R1
   \   000051   70D3         JNZ       ??bdb_RepFindAttrEntry_1
   2021              {
   2022                zclAttrRecsList* attrItem = zclFindAttrRecsList( epCur->epDesc->endPoint );
   \   000053                ; Setup parameters for call to function zclFindAttrRecsList
   \   000053   12....       LCALL     `??zclFindAttrRecsList::?relay`; Banked call to: zclFindAttrRecsList
   2023                
   2024                if( (attrItem != NULL) && ( (attrItem->numAttributes > 0) && (attrItem->attrs != NULL) ) )
   \   000056   EA           MOV       A,R2
   \   000057   4B           ORL       A,R3
   \   000058   60CC         JZ        ??bdb_RepFindAttrEntry_1
   \   00005A   EA           MOV       A,R2
   \   00005B   2407         ADD       A,#0x7
   \   00005D   F8           MOV       R0,A
   \   00005E   E4           CLR       A
   \   00005F   3B           ADDC      A,R3
   \   000060   88..         MOV       ?V6,R0
   \   000062   F5..         MOV       ?V7,A
   \   000064   8882         MOV       DPL,R0
   \   000066   F583         MOV       DPH,A
   \   000068   E0           MOVX      A,@DPTR
   \   000069   60BB         JZ        ??bdb_RepFindAttrEntry_1
   \   00006B   EA           MOV       A,R2
   \   00006C   2408         ADD       A,#0x8
   \   00006E   08           INC       R0
   \   00006F   E4           CLR       A
   \   000070   3B           ADDC      A,R3
   \   000071   F9           MOV       R1,A
   \   000072   E8           MOV       A,R0
   \   000073   FA           MOV       R2,A
   \   000074   E9           MOV       A,R1
   \   000075   FB           MOV       R3,A
   \   000076   8882         MOV       DPL,R0
   \   000078   F583         MOV       DPH,A
   \   00007A   E0           MOVX      A,@DPTR
   \   00007B   F8           MOV       R0,A
   \   00007C   A3           INC       DPTR
   \   00007D   E0           MOVX      A,@DPTR
   \   00007E   F9           MOV       R1,A
   \   00007F   E8           MOV       A,R0
   \   000080   49           ORL       A,R1
   \   000081   60A3         JZ        ??bdb_RepFindAttrEntry_1
   2025                {
   2026                  for ( i = 0; i < attrItem->numAttributes; i++ )
   \   000083   75..00       MOV       ?V3,#0x0
   \   000086   8002         SJMP      ??bdb_RepFindAttrEntry_3
   \                     ??bdb_RepFindAttrEntry_4:
   \   000088   05..         INC       ?V3
   \                     ??bdb_RepFindAttrEntry_3:
   \   00008A   85..82       MOV       DPL,?V6
   \   00008D   85..83       MOV       DPH,?V7
   \   000090   E0           MOVX      A,@DPTR
   \   000091   F8           MOV       R0,A
   \   000092   E5..         MOV       A,?V3
   \   000094   C3           CLR       C
   \   000095   98           SUBB      A,R0
   \   000096   508E         JNC       ??bdb_RepFindAttrEntry_1
   2027                  {
   2028                    if ( ( attrItem->attrs[i].clusterID == cluster ) && ( attrItem->attrs[i].attr.attrId ==  attrID ) )
   \   000098   E5..         MOV       A,?V3
   \   00009A   F5..         MOV       ?V8,A
   \   00009C   75..00       MOV       ?V9,#0x0
   \   00009F   7403         MOV       A,#0x3
   \   0000A1   78..         MOV       R0,#?V8
   \   0000A3   12....       LCALL     ?S_SHL
   \   0000A6   AC..         MOV       R4,?V8
   \   0000A8   AD..         MOV       R5,?V9
   \   0000AA   8A82         MOV       DPL,R2
   \   0000AC   8B83         MOV       DPH,R3
   \   0000AE   E0           MOVX      A,@DPTR
   \   0000AF   2C           ADD       A,R4
   \   0000B0   F8           MOV       R0,A
   \   0000B1   A3           INC       DPTR
   \   0000B2   E0           MOVX      A,@DPTR
   \   0000B3   3D           ADDC      A,R5
   \   0000B4   8882         MOV       DPL,R0
   \   0000B6   F583         MOV       DPH,A
   \   0000B8   E4           CLR       A
   \   0000B9   93           MOVC      A,@A+DPTR
   \   0000BA   F8           MOV       R0,A
   \   0000BB   7401         MOV       A,#0x1
   \   0000BD   93           MOVC      A,@A+DPTR
   \   0000BE   F9           MOV       R1,A
   \   0000BF   E5..         MOV       A,?V0
   \   0000C1   68           XRL       A,R0
   \   0000C2   7003         JNZ       ??bdb_RepFindAttrEntry_5
   \   0000C4   E5..         MOV       A,?V1
   \   0000C6   69           XRL       A,R1
   \                     ??bdb_RepFindAttrEntry_5:
   \   0000C7   70BF         JNZ       ??bdb_RepFindAttrEntry_4
   \   0000C9   A3           INC       DPTR
   \   0000CA   A3           INC       DPTR
   \   0000CB   E4           CLR       A
   \   0000CC   93           MOVC      A,@A+DPTR
   \   0000CD   C0E0         PUSH      A
   \   0000CF   7401         MOV       A,#0x1
   \   0000D1   93           MOVC      A,@A+DPTR
   \   0000D2   F583         MOV       DPH,A
   \   0000D4   D082         POP       DPL
   \   0000D6   A882         MOV       R0,DPL
   \   0000D8   A983         MOV       R1,DPH
   \   0000DA   EE           MOV       A,R6
   \   0000DB   68           XRL       A,R0
   \   0000DC   7002         JNZ       ??bdb_RepFindAttrEntry_6
   \   0000DE   EF           MOV       A,R7
   \   0000DF   69           XRL       A,R1
   \                     ??bdb_RepFindAttrEntry_6:
   \   0000E0   70A6         JNZ       ??bdb_RepFindAttrEntry_4
   \   0000E2   7414         MOV       A,#0x14
   \   0000E4   12....       LCALL     ?XSTACK_DISP0_8
   \   0000E7   E0           MOVX      A,@DPTR
   \   0000E8   FE           MOV       R6,A
   \   0000E9   A3           INC       DPTR
   \   0000EA   E0           MOVX      A,@DPTR
   \   0000EB   FF           MOV       R7,A
   2029                    {
   2030                      uint16 dataLen;
   2031          
   2032                      attrRes->attrId = attrItem->attrs[i].attr.attrId;
   \   0000EC   8E82         MOV       DPL,R6
   \   0000EE   F583         MOV       DPH,A
   \   0000F0   E8           MOV       A,R0
   \   0000F1   F0           MOVX      @DPTR,A
   \   0000F2   A3           INC       DPTR
   \   0000F3   E9           MOV       A,R1
   \   0000F4   F0           MOVX      @DPTR,A
   2033                      attrRes->dataType = attrItem->attrs[i].attr.dataType;
   \   0000F5   EE           MOV       A,R6
   \   0000F6   2402         ADD       A,#0x2
   \   0000F8   F8           MOV       R0,A
   \   0000F9   E4           CLR       A
   \   0000FA   3F           ADDC      A,R7
   \   0000FB   F9           MOV       R1,A
   \   0000FC   8A82         MOV       DPL,R2
   \   0000FE   8B83         MOV       DPH,R3
   \   000100   E0           MOVX      A,@DPTR
   \   000101   2C           ADD       A,R4
   \   000102   F5..         MOV       ?V3,A
   \   000104   A3           INC       DPTR
   \   000105   E0           MOVX      A,@DPTR
   \   000106   3D           ADDC      A,R5
   \   000107   85..82       MOV       DPL,?V3
   \   00010A   F583         MOV       DPH,A
   \   00010C   A3           INC       DPTR
   \   00010D   A3           INC       DPTR
   \   00010E   A3           INC       DPTR
   \   00010F   A3           INC       DPTR
   \   000110   E4           CLR       A
   \   000111   93           MOVC      A,@A+DPTR
   \   000112   8882         MOV       DPL,R0
   \   000114   8983         MOV       DPH,R1
   \   000116   F0           MOVX      @DPTR,A
   2034                      attrRes->accessControl = attrItem->attrs[i].attr.accessControl;
   \   000117   8A82         MOV       DPL,R2
   \   000119   8B83         MOV       DPH,R3
   \   00011B   E0           MOVX      A,@DPTR
   \   00011C   2C           ADD       A,R4
   \   00011D   FA           MOV       R2,A
   \   00011E   A3           INC       DPTR
   \   00011F   E0           MOVX      A,@DPTR
   \   000120   3D           ADDC      A,R5
   \   000121   8A82         MOV       DPL,R2
   \   000123   F583         MOV       DPH,A
   \   000125   A3           INC       DPTR
   \   000126   A3           INC       DPTR
   \   000127   A3           INC       DPTR
   \   000128   A3           INC       DPTR
   \   000129   A3           INC       DPTR
   \   00012A   E4           CLR       A
   \   00012B   93           MOVC      A,@A+DPTR
   \   00012C   8E82         MOV       DPL,R6
   \   00012E   8F83         MOV       DPH,R7
   \   000130   A3           INC       DPTR
   \   000131   A3           INC       DPTR
   \   000132   A3           INC       DPTR
   \   000133   F0           MOVX      @DPTR,A
   2035          
   2036                      dataLen = zclGetDataTypeLength(attrRes->dataType);
   \   000134                ; Setup parameters for call to function zclGetDataTypeLength
   \   000134   8882         MOV       DPL,R0
   \   000136   8983         MOV       DPH,R1
   \   000138   E0           MOVX      A,@DPTR
   \   000139   F9           MOV       R1,A
   \   00013A   12....       LCALL     `??zclGetDataTypeLength::?relay`; Banked call to: zclGetDataTypeLength
   \   00013D   E9           MOV       A,R1
   \   00013E   85..82       MOV       DPL,?XSP + 0
   \   000141   85..83       MOV       DPH,?XSP + 1
   \   000144   F0           MOVX      @DPTR,A
   \   000145   A3           INC       DPTR
   \   000146   E4           CLR       A
   \   000147   F0           MOVX      @DPTR,A
   2037                      zcl_ReadAttrData( endpoint, cluster, attrRes->attrId, gAttrDataValue, &dataLen );
   \   000148                ; Setup parameters for call to function zcl_ReadAttrData
   \   000148   A8..         MOV       R0,?XSP + 0
   \   00014A   A9..         MOV       R1,?XSP + 1
   \   00014C   88..         MOV       ?V4,R0
   \   00014E   89..         MOV       ?V5,R1
   \   000150   78..         MOV       R0,#?V4
   \   000152   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000155   75....       MOV       ?V4,#gAttrDataValue & 0xff
   \   000158   75....       MOV       ?V5,#(gAttrDataValue >> 8) & 0xff
   \   00015B   78..         MOV       R0,#?V4
   \   00015D   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000160   8E82         MOV       DPL,R6
   \   000162   8F83         MOV       DPH,R7
   \   000164   E0           MOVX      A,@DPTR
   \   000165   FC           MOV       R4,A
   \   000166   A3           INC       DPTR
   \   000167   E0           MOVX      A,@DPTR
   \   000168   FD           MOV       R5,A
   \   000169   AA..         MOV       R2,?V0
   \   00016B   AB..         MOV       R3,?V1
   \   00016D   A9..         MOV       R1,?V2
   \   00016F   12....       LCALL     `??zcl_ReadAttrData::?relay`; Banked call to: zcl_ReadAttrData
   \   000172   7404         MOV       A,#0x4
   \   000174   12....       LCALL     ?DEALLOC_XSTACK8
   2038                      attrRes->dataPtr = gAttrDataValue;
   \   000177   8E82         MOV       DPL,R6
   \   000179   8F83         MOV       DPH,R7
   \   00017B   A3           INC       DPTR
   \   00017C   A3           INC       DPTR
   \   00017D   A3           INC       DPTR
   \   00017E   A3           INC       DPTR
   \   00017F   74..         MOV       A,#gAttrDataValue & 0xff
   \   000181   F0           MOVX      @DPTR,A
   \   000182   A3           INC       DPTR
   \   000183   74..         MOV       A,#(gAttrDataValue >> 8) & 0xff
   \   000185   F0           MOVX      @DPTR,A
   2039                      return BDBREPORTING_TRUE;
   \   000186   7901         MOV       R1,#0x1
   \   000188   8002         SJMP      ??bdb_RepFindAttrEntry_7
   2040                    }
   2041                  }
   2042                }
   2043              }
   2044            }
   2045            return BDBREPORTING_FALSE;
   \                     ??bdb_RepFindAttrEntry_2:
   \   00018A   7900         MOV       R1,#0x0
   \                     ??bdb_RepFindAttrEntry_7:
   \   00018C   7402         MOV       A,#0x2
   \   00018E   12....       LCALL     ?DEALLOC_XSTACK8
   \   000191   7F0A         MOV       R7,#0xa
   \   000193   02....       LJMP      ?BANKED_LEAVE_XDATA
   2046           }
   2047          
   2048          /*
   2049          * End: Ztack zcl helper methods
   2050          */                   
   2051          
   2052          
   2053          
   2054          
   2055          /*********************************************************************
   2056          *********************************************************************/
   2057          
   2058          /*
   2059          * Begin: Reporting attr app API methods 
   2060          */
   2061          
   2062          
   2063          
   2064           /*********************************************************************
   2065           * @fn          bdb_RepAddAttrCfgRecordDefaultToList
   2066           *
   2067           * @brief       Adds default configuration values for a Reportable Attribute Record
   2068           *
   2069           * @param       endpoint
   2070           * @param       cluster
   2071           * @param       attrID - Reporable attribute ID
   2072           * @param       minReportInt - Default value for minimum reportable interval
   2073           * @param       maxReportInt - Default value for maximum reportable interval
   2074           * @param       reportableChange - buffer containing attribute value that is the 
   2075           *              delta change to trigger a report
   2076           *
   2077           * @return      ZInvalidParameter - No endpoint, cluster, attribute ID found in simple desc
   2078           *              ZFailure - No memory to allocate entry
   2079           *              ZSuccess
   2080           *              
   2081           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   2082          ZStatus_t bdb_RepAddAttrCfgRecordDefaultToList( uint8 endpoint, uint16 cluster, uint16 attrID, uint16 minReportInt, uint16 maxReportInt, uint8* reportableChange )
   \                     bdb_RepAddAttrCfgRecordDefaultToList:
   2083          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000   74F0         MOV       A,#-0x10
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 0
   \   000005   89..         MOV       ?V4,R1
   \   000007   8A..         MOV       ?V0,R2
   \   000009   8B..         MOV       ?V1,R3
   \   00000B   8C..         MOV       ?V2,R4
   \   00000D   8D..         MOV       ?V3,R5
   2084            uint8 status;
   2085            epList_t *epCur;
   2086            uint8 i;
   2087            
   2088            if( bdb_reportingAcceptDefaultConfs == BDBREPORTING_FALSE )
   \   00000F   90....       MOV       DPTR,#bdb_reportingAcceptDefaultConfs
   \   000012   E0           MOVX      A,@DPTR
   \   000013   7003         JNZ       $+5
   \   000015   02....       LJMP      ??bdb_RepAddAttrCfgRecordDefaultToList_0 & 0xFFFF
   2089            {
   2090              //Don't accept anymore default attribute configurations
   2091              return ZFailure;
   2092            }
   2093            
   2094            //Find if endpoint and cluster values are valid
   2095            uint8 foundEndpCluster = BDBREPORTING_FALSE;
   \   000018   75..00       MOV       ?V5,#0x0
   2096            for ( epCur = epList; epCur != NULL; epCur = epCur->nextDesc )
   \   00001B   90....       MOV       DPTR,#epList
   \   00001E   E0           MOVX      A,@DPTR
   \   00001F   FE           MOV       R6,A
   \   000020   A3           INC       DPTR
   \   000021   E0           MOVX      A,@DPTR
   \   000022   800C         SJMP      ??bdb_RepAddAttrCfgRecordDefaultToList_1
   \                     ??bdb_RepAddAttrCfgRecordDefaultToList_2:
   \   000024   8E82         MOV       DPL,R6
   \   000026   8F83         MOV       DPH,R7
   \   000028   E0           MOVX      A,@DPTR
   \   000029   F8           MOV       R0,A
   \   00002A   A3           INC       DPTR
   \   00002B   E0           MOVX      A,@DPTR
   \   00002C   F9           MOV       R1,A
   \   00002D   E8           MOV       A,R0
   \   00002E   FE           MOV       R6,A
   \   00002F   E9           MOV       A,R1
   \                     ??bdb_RepAddAttrCfgRecordDefaultToList_1:
   \   000030   FF           MOV       R7,A
   \   000031   EE           MOV       A,R6
   \   000032   4F           ORL       A,R7
   \   000033   7003         JNZ       $+5
   \   000035   02....       LJMP      ??bdb_RepAddAttrCfgRecordDefaultToList_3 & 0xFFFF
   2097            {
   2098              if( epCur->epDesc->endPoint != endpoint )
   \   000038   8E82         MOV       DPL,R6
   \   00003A   8F83         MOV       DPH,R7
   \   00003C   A3           INC       DPTR
   \   00003D   A3           INC       DPTR
   \   00003E   E0           MOVX      A,@DPTR
   \   00003F   F8           MOV       R0,A
   \   000040   A3           INC       DPTR
   \   000041   E0           MOVX      A,@DPTR
   \   000042   F583         MOV       DPH,A
   \   000044   8882         MOV       DPL,R0
   \   000046   E0           MOVX      A,@DPTR
   \   000047   F9           MOV       R1,A
   \   000048   E5..         MOV       A,?V4
   \   00004A   69           XRL       A,R1
   \   00004B   70D7         JNZ       ??bdb_RepAddAttrCfgRecordDefaultToList_2
   2099              {
   2100                continue;
   2101              }
   2102              zclAttrRecsList* attrItem = zclFindAttrRecsList( epCur->epDesc->endPoint );
   \   00004D                ; Setup parameters for call to function zclFindAttrRecsList
   \   00004D   12....       LCALL     `??zclFindAttrRecsList::?relay`; Banked call to: zclFindAttrRecsList
   \   000050   8A..         MOV       ?V6,R2
   \   000052   8B..         MOV       ?V7,R3
   \   000054   AD..         MOV       R5,?V7
   2103              if( attrItem== NULL )
   \   000056   EA           MOV       A,R2
   \   000057   4D           ORL       A,R5
   \   000058   60CA         JZ        ??bdb_RepAddAttrCfgRecordDefaultToList_2
   2104              {
   2105                continue;
   2106              }
   2107              if( attrItem->numAttributes == 0 || attrItem->attrs == NULL )
   \   00005A   EA           MOV       A,R2
   \   00005B   2407         ADD       A,#0x7
   \   00005D   F8           MOV       R0,A
   \   00005E   E4           CLR       A
   \   00005F   3D           ADDC      A,R5
   \   000060   F9           MOV       R1,A
   \   000061   E8           MOV       A,R0
   \   000062   FA           MOV       R2,A
   \   000063   E9           MOV       A,R1
   \   000064   FB           MOV       R3,A
   \   000065   8882         MOV       DPL,R0
   \   000067   F583         MOV       DPH,A
   \   000069   E0           MOVX      A,@DPTR
   \   00006A   60B8         JZ        ??bdb_RepAddAttrCfgRecordDefaultToList_2
   \   00006C   E5..         MOV       A,?V6
   \   00006E   2408         ADD       A,#0x8
   \   000070   08           INC       R0
   \   000071   E4           CLR       A
   \   000072   3D           ADDC      A,R5
   \   000073   F9           MOV       R1,A
   \   000074   E8           MOV       A,R0
   \   000075   FC           MOV       R4,A
   \   000076   E9           MOV       A,R1
   \   000077   FD           MOV       R5,A
   \   000078   8882         MOV       DPL,R0
   \   00007A   F583         MOV       DPH,A
   \   00007C   E0           MOVX      A,@DPTR
   \   00007D   F8           MOV       R0,A
   \   00007E   A3           INC       DPTR
   \   00007F   E0           MOVX      A,@DPTR
   \   000080   F9           MOV       R1,A
   \   000081   E8           MOV       A,R0
   \   000082   49           ORL       A,R1
   \   000083   609F         JZ        ??bdb_RepAddAttrCfgRecordDefaultToList_2
   2108              {
   2109                continue;
   2110              }
   2111              for ( i = 0; i < attrItem->numAttributes; i++ )
   \   000085   7E00         MOV       R6,#0x0
   \   000087   8001         SJMP      ??bdb_RepAddAttrCfgRecordDefaultToList_4
   2112              {
   2113                if( attrItem->attrs[i].clusterID != cluster )
   2114                {
   2115                  continue;
   \                     ??bdb_RepAddAttrCfgRecordDefaultToList_5:
   \   000089   0E           INC       R6
   \                     ??bdb_RepAddAttrCfgRecordDefaultToList_4:
   \   00008A   8A82         MOV       DPL,R2
   \   00008C   8B83         MOV       DPH,R3
   \   00008E   E0           MOVX      A,@DPTR
   \   00008F   F8           MOV       R0,A
   \   000090   EE           MOV       A,R6
   \   000091   C3           CLR       C
   \   000092   98           SUBB      A,R0
   \   000093   5031         JNC       ??bdb_RepAddAttrCfgRecordDefaultToList_3
   \   000095   EE           MOV       A,R6
   \   000096   F5..         MOV       ?V6,A
   \   000098   75..00       MOV       ?V7,#0x0
   \   00009B   7403         MOV       A,#0x3
   \   00009D   78..         MOV       R0,#?V6
   \   00009F   12....       LCALL     ?S_SHL
   \   0000A2   8C82         MOV       DPL,R4
   \   0000A4   8D83         MOV       DPH,R5
   \   0000A6   E0           MOVX      A,@DPTR
   \   0000A7   25..         ADD       A,?V6
   \   0000A9   F8           MOV       R0,A
   \   0000AA   A3           INC       DPTR
   \   0000AB   E0           MOVX      A,@DPTR
   \   0000AC   35..         ADDC      A,?V7
   \   0000AE   8882         MOV       DPL,R0
   \   0000B0   F583         MOV       DPH,A
   \   0000B2   E4           CLR       A
   \   0000B3   93           MOVC      A,@A+DPTR
   \   0000B4   F8           MOV       R0,A
   \   0000B5   7401         MOV       A,#0x1
   \   0000B7   93           MOVC      A,@A+DPTR
   \   0000B8   F9           MOV       R1,A
   \   0000B9   E5..         MOV       A,?V0
   \   0000BB   68           XRL       A,R0
   \   0000BC   7003         JNZ       ??bdb_RepAddAttrCfgRecordDefaultToList_6
   \   0000BE   E5..         MOV       A,?V1
   \   0000C0   69           XRL       A,R1
   \                     ??bdb_RepAddAttrCfgRecordDefaultToList_6:
   \   0000C1   70C6         JNZ       ??bdb_RepAddAttrCfgRecordDefaultToList_5
   2116                }
   2117                foundEndpCluster = BDBREPORTING_TRUE;
   \   0000C3   75..01       MOV       ?V5,#0x1
   2118                break;
   2119              }
   2120              break;
   2121            }
   2122            if( foundEndpCluster==BDBREPORTING_FALSE )
   \                     ??bdb_RepAddAttrCfgRecordDefaultToList_3:
   \   0000C6   E5..         MOV       A,?V5
   \   0000C8   7005         JNZ       ??bdb_RepAddAttrCfgRecordDefaultToList_7
   2123            {
   2124              return ZInvalidParameter;
   \   0000CA   7902         MOV       R1,#0x2
   \   0000CC   02....       LJMP      ??bdb_RepAddAttrCfgRecordDefaultToList_8 & 0xFFFF
   2125            }
   2126            
   2127            //Add default cfg values to list
   2128            bdbReportAttrDefaultCfgData_t* record = (bdbReportAttrDefaultCfgData_t *)osal_mem_alloc( sizeof( bdbReportAttrDefaultCfgData_t ) );
   \                     ??bdb_RepAddAttrCfgRecordDefaultToList_7:
   \   0000CF                ; Setup parameters for call to function osal_mem_alloc
   \   0000CF   7A0D         MOV       R2,#0xd
   \   0000D1   7B00         MOV       R3,#0x0
   \   0000D3   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   0000D6   8A..         MOV       ?V6,R2
   \   0000D8   8B..         MOV       ?V7,R3
   \   0000DA   AE..         MOV       R6,?V6
   \   0000DC   AF..         MOV       R7,?V7
   2129            if( record == NULL)
   \   0000DE   EA           MOV       A,R2
   \   0000DF   4F           ORL       A,R7
   \   0000E0   7003         JNZ       $+5
   \   0000E2   02....       LJMP      ??bdb_RepAddAttrCfgRecordDefaultToList_0 & 0xFFFF
   2130            {
   2131              return ZFailure; //Out of memory
   2132            }
   2133            bdb_repAttrDefaultCfgRecordInitValues( record );
   \   0000E5                ; Setup parameters for call to function bdb_repAttrDefaultCfgRecordInitValues
   \   0000E5   12....       LCALL     `??bdb_repAttrDefaultCfgRecordInitValues::?relay`; Banked call to: bdb_repAttrDefaultCfgRecordInitValues
   2134            
   2135            record->endpoint = endpoint;
   \   0000E8   8E82         MOV       DPL,R6
   \   0000EA   8F83         MOV       DPH,R7
   \   0000EC   E5..         MOV       A,?V4
   \   0000EE   F0           MOVX      @DPTR,A
   2136            record->cluster = cluster;
   \   0000EF   A3           INC       DPTR
   \   0000F0   E5..         MOV       A,?V0
   \   0000F2   F0           MOVX      @DPTR,A
   \   0000F3   A3           INC       DPTR
   \   0000F4   E5..         MOV       A,?V1
   \   0000F6   F0           MOVX      @DPTR,A
   2137            record->attrID = attrID;
   \   0000F7   8E82         MOV       DPL,R6
   \   0000F9   8F83         MOV       DPH,R7
   \   0000FB   A3           INC       DPTR
   \   0000FC   A3           INC       DPTR
   \   0000FD   A3           INC       DPTR
   \   0000FE   E5..         MOV       A,?V2
   \   000100   F0           MOVX      @DPTR,A
   \   000101   A3           INC       DPTR
   \   000102   E5..         MOV       A,?V3
   \   000104   F0           MOVX      @DPTR,A
   2138            record->minReportInt = minReportInt;
   \   000105   7410         MOV       A,#0x10
   \   000107   12....       LCALL     ?XSTACK_DISP0_8
   \   00010A   E0           MOVX      A,@DPTR
   \   00010B   F8           MOV       R0,A
   \   00010C   A3           INC       DPTR
   \   00010D   E0           MOVX      A,@DPTR
   \   00010E   F9           MOV       R1,A
   \   00010F   8E82         MOV       DPL,R6
   \   000111   8F83         MOV       DPH,R7
   \   000113   A3           INC       DPTR
   \   000114   A3           INC       DPTR
   \   000115   A3           INC       DPTR
   \   000116   A3           INC       DPTR
   \   000117   A3           INC       DPTR
   \   000118   E8           MOV       A,R0
   \   000119   F0           MOVX      @DPTR,A
   \   00011A   A3           INC       DPTR
   \   00011B   E9           MOV       A,R1
   \   00011C   F0           MOVX      @DPTR,A
   2139            record->maxReportInt = maxReportInt;
   \   00011D   7412         MOV       A,#0x12
   \   00011F   12....       LCALL     ?XSTACK_DISP0_8
   \   000122   E0           MOVX      A,@DPTR
   \   000123   F8           MOV       R0,A
   \   000124   A3           INC       DPTR
   \   000125   E0           MOVX      A,@DPTR
   \   000126   F9           MOV       R1,A
   \   000127   8E82         MOV       DPL,R6
   \   000129   8F83         MOV       DPH,R7
   \   00012B   A3           INC       DPTR
   \   00012C   A3           INC       DPTR
   \   00012D   A3           INC       DPTR
   \   00012E   A3           INC       DPTR
   \   00012F   A3           INC       DPTR
   \   000130   A3           INC       DPTR
   \   000131   A3           INC       DPTR
   \   000132   E8           MOV       A,R0
   \   000133   F0           MOVX      @DPTR,A
   \   000134   A3           INC       DPTR
   \   000135   E9           MOV       A,R1
   \   000136   F0           MOVX      @DPTR,A
   2140            osal_memcpy( record->reportableChange, reportableChange, BDBREPORTING_MAX_ANALOG_ATTR_SIZE );
   \   000137                ; Setup parameters for call to function osal_memcpy
   \   000137   7414         MOV       A,#0x14
   \   000139   12....       LCALL     ?XSTACK_DISP0_8
   \   00013C   E0           MOVX      A,@DPTR
   \   00013D   F5..         MOV       ?V0,A
   \   00013F   A3           INC       DPTR
   \   000140   E0           MOVX      A,@DPTR
   \   000141   F5..         MOV       ?V1,A
   \   000143   75..00       MOV       ?V2,#0x0
   \   000146   78..         MOV       R0,#?V0
   \   000148   12....       LCALL     ?PUSH_XSTACK_I_THREE
   \   00014B   7C04         MOV       R4,#0x4
   \   00014D   7D00         MOV       R5,#0x0
   \   00014F   EE           MOV       A,R6
   \   000150   2409         ADD       A,#0x9
   \   000152   FA           MOV       R2,A
   \   000153   E4           CLR       A
   \   000154   3F           ADDC      A,R7
   \   000155   FB           MOV       R3,A
   \   000156   12....       LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
   \   000159   7403         MOV       A,#0x3
   \   00015B   12....       LCALL     ?DEALLOC_XSTACK8
   2141            
   2142            status = bdb_repAttrDefaultCfgRecordsLinkedListAdd( &attrDefaultCfgRecordLinkedList, record );
   2143            if( status != BDBREPORTING_SUCCESS )
   \   00015E                ; Setup parameters for call to function bdb_repAttrDefaultCfgRecordsLinkedListAdd
   \   00015E   EE           MOV       A,R6
   \   00015F   FC           MOV       R4,A
   \   000160   EF           MOV       A,R7
   \   000161   FD           MOV       R5,A
   \   000162   7A..         MOV       R2,#attrDefaultCfgRecordLinkedList & 0xff
   \   000164   7B..         MOV       R3,#(attrDefaultCfgRecordLinkedList >> 8) & 0xff
   \   000166   12....       LCALL     `??bdb_repAttrDefaultCfgRecordsLinkedListAdd::?r`; Banked call to: bdb_repAttrDefaultCfgRecordsLinkedListAdd
   \   000169   E9           MOV       A,R1
   \   00016A   600B         JZ        ??bdb_RepAddAttrCfgRecordDefaultToList_9
   2144            {
   2145              osal_mem_free( record );
   \   00016C                ; Setup parameters for call to function osal_mem_free
   \   00016C   EE           MOV       A,R6
   \   00016D   FA           MOV       R2,A
   \   00016E   EF           MOV       A,R7
   \   00016F   FB           MOV       R3,A
   \   000170   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
   2146              return ZFailure; //Out of memory
   \                     ??bdb_RepAddAttrCfgRecordDefaultToList_0:
   \   000173   7901         MOV       R1,#0x1
   \   000175   8002         SJMP      ??bdb_RepAddAttrCfgRecordDefaultToList_8
   2147            }
   2148            
   2149            return ZSuccess;
   \                     ??bdb_RepAddAttrCfgRecordDefaultToList_9:
   \   000177   7900         MOV       R1,#0x0
   \                     ??bdb_RepAddAttrCfgRecordDefaultToList_8:
   \   000179   7F08         MOV       R7,#0x8
   \   00017B   02....       LJMP      ?BANKED_LEAVE_XDATA
   2150          }
   2151          
   2152          
   2153          
   2154           /*********************************************************************
   2155           * @fn          bdb_RepChangedAttrValue
   2156           *
   2157           * @brief       Notify BDB reporting attribute module about the change of an 
   2158           *              attribute value to validate the triggering of a reporting attribute message.
   2159           *
   2160           * @param       endpoint
   2161           * @param       cluster
   2162           * @param       attrID - Reporable attribute ID
   2163           *
   2164           * @return      ZInvalidParameter - No endpoint, cluster, attribute ID found in simple desc
   2165           *              ZSuccess
   2166           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   2167          ZStatus_t bdb_RepChangedAttrValue( uint8 endpoint, uint16 cluster, uint16 attrID )
   \                     bdb_RepChangedAttrValue:
   2168          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000                REQUIRE ?V6
   \   000000                REQUIRE ?V7
   \   000000                REQUIRE ?V8
   \   000000                REQUIRE ?V9
   \   000000                REQUIRE ?V10
   \   000000                REQUIRE ?V12
   \   000000                REQUIRE ?V13
   \   000000   74EA         MOV       A,#-0x16
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 22
   \   000005                ; Auto size: 16
   \   000005   74F0         MOV       A,#-0x10
   \   000007   12....       LCALL     ?ALLOC_XSTACK8
   \   00000A   89..         MOV       ?V10,R1
   \   00000C   EA           MOV       A,R2
   \   00000D   FE           MOV       R6,A
   \   00000E   EB           MOV       A,R3
   \   00000F   FF           MOV       R7,A
   \   000010   8C..         MOV       ?V2,R4
   \   000012   8D..         MOV       ?V3,R5
   2169            uint8 indexClusterEndpoint = bdb_clusterEndpointArraySearch( endpoint, cluster );
   \   000014                ; Setup parameters for call to function bdb_clusterEndpointArraySearch
   \   000014   12....       LCALL     `??bdb_clusterEndpointArraySearch::?relay`; Banked call to: bdb_clusterEndpointArraySearch
   \   000017   E9           MOV       A,R1
   \   000018   F5..         MOV       ?V0,A
   2170            if( indexClusterEndpoint == BDBREPORTING_INVALIDINDEX ) 
   \   00001A   74FF         MOV       A,#-0x1
   \   00001C   69           XRL       A,R1
   \   00001D   7003         JNZ       $+5
   \   00001F   02....       LJMP      ??bdb_RepChangedAttrValue_0 & 0xFFFF
   2171            {
   2172              //cluter-endpoint not found
   2173              return ZInvalidParameter;
   2174            }
   2175            if( FLAGS_CHECKFLAG( bdb_reportingClusterEndpointArray[indexClusterEndpoint].flags, BDBREPORTING_HASBINDING_FLAG_MASK ) == BDBREPORTING_FALSE ) 
   \   000022   E9           MOV       A,R1
   \   000023   75F00D       MOV       B,#0xd
   \   000026   A4           MUL       AB
   \   000027   F8           MOV       R0,A
   \   000028   A9F0         MOV       R1,B
   \   00002A   74..         MOV       A,#bdb_reportingClusterEndpointArray & 0xff
   \   00002C   28           ADD       A,R0
   \   00002D   F5..         MOV       ?V8,A
   \   00002F   74..         MOV       A,#(bdb_reportingClusterEndpointArray >> 8) & 0xff
   \   000031   39           ADDC      A,R1
   \   000032   F5..         MOV       ?V9,A
   \   000034   85..82       MOV       DPL,?V8
   \   000037   F583         MOV       DPH,A
   \   000039   E0           MOVX      A,@DPTR
   \   00003A   A2E0         MOV       C,0xE0 /* A   */.0
   \   00003C   4003         JC        $+5
   \   00003E   02....       LJMP      ??bdb_RepChangedAttrValue_1 & 0xFFFF
   2176            {
   2177              //record has no binding
   2178              return ZSuccess;
   2179            }
   2180            if( bdb_reportingClusterEndpointArray[indexClusterEndpoint].consolidatedMaxReportInt == BDBREPORTING_REPORTOFF ) 
   \   000041   A3           INC       DPTR
   \   000042   A3           INC       DPTR
   \   000043   A3           INC       DPTR
   \   000044   A3           INC       DPTR
   \   000045   A3           INC       DPTR
   \   000046   A3           INC       DPTR
   \   000047   E0           MOVX      A,@DPTR
   \   000048   F4           CPL       A
   \   000049   7003         JNZ       ??bdb_RepChangedAttrValue_2
   \   00004B   A3           INC       DPTR
   \   00004C   E0           MOVX      A,@DPTR
   \   00004D   F4           CPL       A
   \                     ??bdb_RepChangedAttrValue_2:
   \   00004E   7003         JNZ       $+5
   \   000050   02....       LJMP      ??bdb_RepChangedAttrValue_1 & 0xFFFF
   2181            {
   2182              //reporting if off for this cluster
   2183              return ZSuccess;
   2184            }
   2185            
   2186            bdbReportAttrLive_t searchdata;
   2187            searchdata.attrID = attrID;
   \   000053   7406         MOV       A,#0x6
   \   000055   12....       LCALL     ?XSTACK_DISP0_8
   \   000058   E5..         MOV       A,?V2
   \   00005A   F0           MOVX      @DPTR,A
   \   00005B   A3           INC       DPTR
   \   00005C   E5..         MOV       A,?V3
   \   00005E   F0           MOVX      @DPTR,A
   2188            bdbLinkedListAttrItem_t* attrNodeFound = bdb_linkedListAttrSearch( &(bdb_reportingClusterEndpointArray[indexClusterEndpoint].attrLinkedList), &searchdata );
   \   00005F                ; Setup parameters for call to function bdb_linkedListAttrSearch
   \   00005F   7406         MOV       A,#0x6
   \   000061   12....       LCALL     ?XSTACK_DISP102_8
   \   000064   E5..         MOV       A,?V8
   \   000066   240A         ADD       A,#0xa
   \   000068   FA           MOV       R2,A
   \   000069   E4           CLR       A
   \   00006A   35..         ADDC      A,?V9
   \   00006C   FB           MOV       R3,A
   \   00006D   12....       LCALL     `??bdb_linkedListAttrSearch::?relay`; Banked call to: bdb_linkedListAttrSearch
   \   000070   8A..         MOV       ?V12,R2
   \   000072   8B..         MOV       ?V13,R3
   2189            if( attrNodeFound == NULL || attrNodeFound->data == NULL )
   \   000074   EA           MOV       A,R2
   \   000075   4B           ORL       A,R3
   \   000076   6031         JZ        ??bdb_RepChangedAttrValue_0
   \   000078   8A82         MOV       DPL,R2
   \   00007A   8B83         MOV       DPH,R3
   \   00007C   E0           MOVX      A,@DPTR
   \   00007D   F8           MOV       R0,A
   \   00007E   A3           INC       DPTR
   \   00007F   E0           MOVX      A,@DPTR
   \   000080   F9           MOV       R1,A
   \   000081   E8           MOV       A,R0
   \   000082   49           ORL       A,R1
   \   000083   6024         JZ        ??bdb_RepChangedAttrValue_0
   2190            {
   2191              return ZInvalidParameter; //Attr not found in cluster-endpoint array
   2192            }
   2193            
   2194            zclAttribute_t attrRec;
   2195            uint8 attrRes = bdb_RepFindAttrEntry( endpoint, cluster, attrID, &attrRec );
   2196            if( attrRes != BDBREPORTING_TRUE )
   \   000085                ; Setup parameters for call to function bdb_RepFindAttrEntry
   \   000085   A8..         MOV       R0,?XSP + 0
   \   000087   A9..         MOV       R1,?XSP + 1
   \   000089   88..         MOV       ?V4,R0
   \   00008B   89..         MOV       ?V5,R1
   \   00008D   78..         MOV       R0,#?V4
   \   00008F   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000092   AC..         MOV       R4,?V2
   \   000094   AD..         MOV       R5,?V3
   \   000096   EE           MOV       A,R6
   \   000097   FA           MOV       R2,A
   \   000098   EF           MOV       A,R7
   \   000099   FB           MOV       R3,A
   \   00009A   A9..         MOV       R1,?V10
   \   00009C   12....       LCALL     `??bdb_RepFindAttrEntry::?relay`; Banked call to: bdb_RepFindAttrEntry
   \   00009F   7402         MOV       A,#0x2
   \   0000A1   12....       LCALL     ?DEALLOC_XSTACK8
   \   0000A4   E9           MOV       A,R1
   \   0000A5   6401         XRL       A,#0x1
   \   0000A7   6005         JZ        ??bdb_RepChangedAttrValue_3
   2197            {
   2198              return ZInvalidParameter; //Attr not found in attributes app data
   \                     ??bdb_RepChangedAttrValue_0:
   \   0000A9   7902         MOV       R1,#0x2
   \   0000AB   02....       LJMP      ??bdb_RepChangedAttrValue_4 & 0xFFFF
   2199            }
   2200            
   2201            //Get time of timer if active
   2202            uint32 remainingTimeOfEvent = osal_get_timeoutEx( bdb_TaskID, BDB_REPORT_TIMEOUT );
   \                     ??bdb_RepChangedAttrValue_3:
   \   0000AE                ; Setup parameters for call to function osal_get_timeoutEx
   \   0000AE   7A80         MOV       R2,#-0x80
   \   0000B0   7B00         MOV       R3,#0x0
   \   0000B2   90....       MOV       DPTR,#bdb_TaskID
   \   0000B5   E0           MOVX      A,@DPTR
   \   0000B6   F9           MOV       R1,A
   \   0000B7   12....       LCALL     `??osal_get_timeoutEx::?relay`; Banked call to: osal_get_timeoutEx
   2203            uint16 elapsedTime = 0;
   \   0000BA   7E00         MOV       R6,#0x0
   \   0000BC   7F00         MOV       R7,#0x0
   2204            uint8 isTimeRemaining = BDBREPORTING_FALSE;
   \   0000BE   75..00       MOV       ?V1,#0x0
   2205            if( remainingTimeOfEvent > 0 )
   \   0000C1   EA           MOV       A,R2
   \   0000C2   4B           ORL       A,R3
   \   0000C3   4C           ORL       A,R4
   \   0000C4   4D           ORL       A,R5
   \   0000C5   6019         JZ        ??bdb_RepChangedAttrValue_5
   2206            {
   2207              elapsedTime = bdb_RepCalculateEventElapsedTime( remainingTimeOfEvent, bdb_reportingNextEventTimeout );
   \   0000C7                ; Setup parameters for call to function bdb_RepCalculateEventElapsedTime
   \   0000C7   90....       MOV       DPTR,#bdb_reportingNextEventTimeout
   \   0000CA   12....       LCALL     ?PUSH_XSTACK8_X_TWO
   \   0000CD   12....       LCALL     `??bdb_RepCalculateEventElapsedTime::?relay`; Banked call to: bdb_RepCalculateEventElapsedTime
   \   0000D0   7402         MOV       A,#0x2
   \   0000D2   12....       LCALL     ?DEALLOC_XSTACK8
   \   0000D5   8A..         MOV       ?V2,R2
   \   0000D7   8B..         MOV       ?V3,R3
   \   0000D9   AE..         MOV       R6,?V2
   \   0000DB   AF..         MOV       R7,?V3
   2208              isTimeRemaining =  BDBREPORTING_TRUE;
   \   0000DD   75..01       MOV       ?V1,#0x1
   \                     ??bdb_RepChangedAttrValue_5:
   \   0000E0   85..82       MOV       DPL,?V8
   \   0000E3   85..83       MOV       DPH,?V9
   \   0000E6   A3           INC       DPTR
   \   0000E7   A3           INC       DPTR
   \   0000E8   A3           INC       DPTR
   \   0000E9   A3           INC       DPTR
   \   0000EA   E0           MOVX      A,@DPTR
   \   0000EB   F8           MOV       R0,A
   \   0000EC   A3           INC       DPTR
   \   0000ED   E0           MOVX      A,@DPTR
   \   0000EE   F9           MOV       R1,A
   \   0000EF   E8           MOV       A,R0
   \   0000F0   49           ORL       A,R1
   \   0000F1   601C         JZ        ??bdb_RepChangedAttrValue_6
   \   0000F3   85..82       MOV       DPL,?V8
   \   0000F6   85..83       MOV       DPH,?V9
   \   0000F9   A3           INC       DPTR
   \   0000FA   A3           INC       DPTR
   \   0000FB   A3           INC       DPTR
   \   0000FC   A3           INC       DPTR
   \   0000FD   A3           INC       DPTR
   \   0000FE   A3           INC       DPTR
   \   0000FF   A3           INC       DPTR
   \   000100   A3           INC       DPTR
   \   000101   E0           MOVX      A,@DPTR
   \   000102   2E           ADD       A,R6
   \   000103   FA           MOV       R2,A
   \   000104   A3           INC       DPTR
   \   000105   E0           MOVX      A,@DPTR
   \   000106   3F           ADDC      A,R7
   \   000107   FB           MOV       R3,A
   \   000108   C3           CLR       C
   \   000109   E8           MOV       A,R0
   \   00010A   9A           SUBB      A,R2
   \   00010B   E9           MOV       A,R1
   \   00010C   9B           SUBB      A,R3
   \   00010D   5070         JNC       ??bdb_RepChangedAttrValue_1
   2209            }
   2210            
   2211            if( bdb_reportingClusterEndpointArray[indexClusterEndpoint].consolidatedMinReportInt != BDBREPORTING_NOLIMIT &&
   2212               (bdb_reportingClusterEndpointArray[indexClusterEndpoint].timeSinceLastReport + elapsedTime) <= bdb_reportingClusterEndpointArray[indexClusterEndpoint].consolidatedMinReportInt)
   2213            {
   2214                //Attr value has changed before minInterval, ommit reporting
   2215                return ZSuccess;
   2216            }
   2217           
   2218            
   2219            if( zclAnalogDataType(attrRec.dataType) )
   \                     ??bdb_RepChangedAttrValue_6:
   \   00010F                ; Setup parameters for call to function zclAnalogDataType
   \   00010F   7402         MOV       A,#0x2
   \   000111   12....       LCALL     ?XSTACK_DISP0_8
   \   000114   E0           MOVX      A,@DPTR
   \   000115   F9           MOV       R1,A
   \   000116   12....       LCALL     `??zclAnalogDataType::?relay`; Banked call to: zclAnalogDataType
   \   000119   E9           MOV       A,R1
   \   00011A   603C         JZ        ??bdb_RepChangedAttrValue_7
   2220            {
   2221              //Checking if   | lastvaluereported - currentvalue | >=  | changevalue |
   2222              if( bdb_isAttrValueChangedSurpassDelta(attrRec.dataType, attrNodeFound->data->reportableChange, attrRec.dataPtr, attrNodeFound->data->lastValueReported ) == BDBREPORTING_FALSE )
   \   00011C   85..82       MOV       DPL,?V12
   \   00011F   85..83       MOV       DPH,?V13
   \   000122   E0           MOVX      A,@DPTR
   \   000123   FA           MOV       R2,A
   \   000124   A3           INC       DPTR
   \   000125   E0           MOVX      A,@DPTR
   \   000126   FB           MOV       R3,A
   \   000127                ; Setup parameters for call to function bdb_isAttrValueChangedSurpassDelta
   \   000127   EA           MOV       A,R2
   \   000128   2402         ADD       A,#0x2
   \   00012A   F5..         MOV       ?V2,A
   \   00012C   E4           CLR       A
   \   00012D   3B           ADDC      A,R3
   \   00012E   F5..         MOV       ?V3,A
   \   000130   78..         MOV       R0,#?V2
   \   000132   12....       LCALL     ?PUSH_XSTACK_I_TWO
   \   000135   7406         MOV       A,#0x6
   \   000137   12....       LCALL     ?XSTACK_DISP0_8
   \   00013A   E0           MOVX      A,@DPTR
   \   00013B   FC           MOV       R4,A
   \   00013C   A3           INC       DPTR
   \   00013D   E0           MOVX      A,@DPTR
   \   00013E   FD           MOV       R5,A
   \   00013F   EA           MOV       A,R2
   \   000140   2406         ADD       A,#0x6
   \   000142   FA           MOV       R2,A
   \   000143   5001         JNC       ??bdb_RepChangedAttrValue_8
   \   000145   0B           INC       R3
   \                     ??bdb_RepChangedAttrValue_8:
   \   000146   7404         MOV       A,#0x4
   \   000148   12....       LCALL     ?XSTACK_DISP0_8
   \   00014B   E0           MOVX      A,@DPTR
   \   00014C   F9           MOV       R1,A
   \   00014D   12....       LCALL     `??bdb_isAttrValueChangedSurpassDelta::?relay`; Banked call to: bdb_isAttrValueChangedSurpassDelta
   \   000150   7402         MOV       A,#0x2
   \   000152   12....       LCALL     ?DEALLOC_XSTACK8
   \   000155   E9           MOV       A,R1
   \   000156   6027         JZ        ??bdb_RepChangedAttrValue_1
   2223              {
   2224                //current value does not excced the delta, dont report
   2225                return ZSuccess;
   2226              }
   2227            }
   2228            else
   2229            {
   2230              //Attr is discrete, just report without checking the changeValue
   2231            }
   2232            
   2233            //Stop reporting  
   2234            bdb_RepStopEventTimer( );
   \                     ??bdb_RepChangedAttrValue_7:
   \   000158                ; Setup parameters for call to function bdb_RepStopEventTimer
   \   000158   12....       LCALL     `??bdb_RepStopEventTimer::?relay`; Banked call to: bdb_RepStopEventTimer
   2235            bdb_RepReport( indexClusterEndpoint );
   \   00015B                ; Setup parameters for call to function bdb_RepReport
   \   00015B   A9..         MOV       R1,?V0
   \   00015D   12....       LCALL     `??bdb_RepReport::?relay`; Banked call to: bdb_RepReport
   2236            if( isTimeRemaining == BDBREPORTING_TRUE )
   \   000160   7401         MOV       A,#0x1
   \   000162   65..         XRL       A,?V1
   \   000164   7009         JNZ       ??bdb_RepChangedAttrValue_9
   2237            {
   2238              bdb_clusterEndpointArrayIncrementAll( elapsedTime, BDBREPORTING_FALSE );
   \   000166                ; Setup parameters for call to function bdb_clusterEndpointArrayIncrementAll
   \   000166   7900         MOV       R1,#0x0
   \   000168   EE           MOV       A,R6
   \   000169   FA           MOV       R2,A
   \   00016A   EF           MOV       A,R7
   \   00016B   FB           MOV       R3,A
   \   00016C   12....       LCALL     `??bdb_clusterEndpointArrayIncrementAll::?relay`; Banked call to: bdb_clusterEndpointArrayIncrementAll
   2239            }
   2240            bdb_clusterEndpointArrayUpdateAt( indexClusterEndpoint, 0, BDBREPORTING_IGNORE, BDBREPORTING_IGNORE ); //return time since last report to zero
   \                     ??bdb_RepChangedAttrValue_9:
   \   00016F                ; Setup parameters for call to function bdb_clusterEndpointArrayUpdateAt
   \   00016F   7DFF         MOV       R5,#-0x1
   \   000171   7CFF         MOV       R4,#-0x1
   \   000173   7A00         MOV       R2,#0x0
   \   000175   7B00         MOV       R3,#0x0
   \   000177   A9..         MOV       R1,?V0
   \   000179   12....       LCALL     `??bdb_clusterEndpointArrayUpdateAt::?relay`; Banked call to: bdb_clusterEndpointArrayUpdateAt
   2241            //Restart reporting
   2242            bdb_RepStartReporting( );
   \   00017C                ; Setup parameters for call to function bdb_RepStartReporting
   \   00017C   12....       LCALL     `??bdb_RepStartReporting::?relay`; Banked call to: bdb_RepStartReporting
   2243            
   2244            return ZSuccess;
   \                     ??bdb_RepChangedAttrValue_1:
   \   00017F   7900         MOV       R1,#0x0
   \                     ??bdb_RepChangedAttrValue_4:
   \   000181   7410         MOV       A,#0x10
   \   000183   12....       LCALL     ?DEALLOC_XSTACK8
   \   000186   7F0E         MOV       R7,#0xe
   \   000188   02....       LJMP      ?BANKED_LEAVE_XDATA
   2245          }

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0, 0, 0, 0}>`:
   \   000000   00           DB 0
   \   000001   00           DB 0
   \   000002   00           DB 0
   \   000003   00           DB 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3e8:
   \   000000   E8030000     DD 1000
   2246          
   2247          #endif //BDB_REPORTING
   2248          
   2249          /*
   2250          * End: Reporting attr app API methods 
   2251          */

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      2     34   bdb_FindEpDesc
      2     30   bdb_InitReportAttrLiveValues
      1     39   bdb_ProcessInConfigReportCmd
        0     34   -> bdb_FindEpDesc
        0     34   -> bdb_RepLoadCfgRecords
        0     34   -> bdb_RepSetupReporting
        0     34   -> bdb_RepStartReporting
        0     34   -> bdb_RepStopEventTimer
        0     34   -> bdb_repAttrCfgRecordsArrayFreeAll
        0     34   -> bdb_repAttrCfgRecordsArraySearch
        0     34   -> osal_mem_alloc
        0     34   -> osal_mem_free
        0     37   -> osal_memcpy
        0     34   -> osal_memset
        0     36   -> osal_nv_item_init
        0     38   -> osal_nv_write
        0     34   -> zclAnalogDataType
        0     36   -> zclFindAttrRec
        0     34   -> zclGetDataTypeLength
        0     39   -> zcl_SendConfigReportRspCmd
      1     39   bdb_ProcessInReadReportCfgCmd
        0     34   -> bdb_FindEpDesc
        0     34   -> bdb_RepLoadCfgRecords
        0     34   -> bdb_repAttrCfgRecordsArrayFreeAll
        0     34   -> bdb_repAttrCfgRecordsArraySearch
        0     34   -> osal_mem_alloc
        0     34   -> osal_mem_free
        0     34   -> zclAnalogDataType
        0     36   -> zclFindAttrRec
        0     34   -> zclGetDataTypeLength
        0     39   -> zcl_SendReadReportCfgRspCmd
      1     25   bdb_RepAddAttrCfgRecordDefaultToList
        0     16   -> bdb_repAttrDefaultCfgRecordInitValues
        0     16   -> bdb_repAttrDefaultCfgRecordsLinkedListAdd
        0     16   -> osal_mem_alloc
        0     16   -> osal_mem_free
        0     19   -> osal_memcpy
        0     16   -> zclFindAttrRecsList
      0     60   bdb_RepCalculateEventElapsedTime
      0     40   bdb_RepChangedAttrValue
        0     40   -> bdb_RepCalculateEventElapsedTime
        0     40   -> bdb_RepFindAttrEntry
        0     38   -> bdb_RepReport
        0     38   -> bdb_RepStartReporting
        0     38   -> bdb_RepStopEventTimer
        0     38   -> bdb_clusterEndpointArrayIncrementAll
        0     38   -> bdb_clusterEndpointArraySearch
        0     38   -> bdb_clusterEndpointArrayUpdateAt
        0     40   -> bdb_isAttrValueChangedSurpassDelta
        0     38   -> bdb_linkedListAttrSearch
        0     38   -> osal_get_timeoutEx
        0     38   -> zclAnalogDataType
      1     62   bdb_RepConstructAttrCfgArray
        0     51   -> bdb_repAttrCfgRecordsArrayAdd
        0     39   -> bdb_repAttrCfgRecordsArrayCreate
        0     39   -> bdb_repAttrCfgRecordsArrayFreeAll
        0     52   -> bdb_repAttrDefaultCfgRecordsLinkedListSearch
        0     39   -> zclFindAttrRecsList
      2      0   bdb_RepConstructReportingData
        2      0   -> bdb_RepInitAttrCfgRecords
        2      0   -> bdb_repAttrBuildClusterEndPointArrayBasedOnConfRecordsArray
        2      0   -> bdb_repAttrCfgRecordsArrayFreeAll
      1     68   bdb_RepFindAttrEntry
        0     20   -> osal_memset
        0     20   -> zclFindAttrRecsList
        0     20   -> zclGetDataTypeLength
        0     24   -> zcl_ReadAttrData
      2      0   bdb_RepInit
        2      0   -> bdb_clusterEndpointArrayInit
        2      0   -> bdb_repAttrCfgRecordsArrayInit
        2      0   -> bdb_repAttrDefaultCfgRecordsLinkedListInit
      0     14   bdb_RepInitAttrCfgRecords
        0     10   -> bdb_RepConstructAttrCfgArray
        0     10   -> bdb_repAttrCfgRecordsArrayCreate
        0     10   -> bdb_repAttrCfgRecordsArrayFreeAll
        0     10   -> bdb_repAttrDefaultCfgRecordsLinkedListFreeAll
        0     12   -> osal_nv_item_init
        0     10   -> osal_nv_item_len
        0     14   -> osal_nv_read
      0     48   bdb_RepLoadCfgRecords
        0     10   -> bdb_repAttrCfgRecordsArrayCreate
        0     10   -> bdb_repAttrCfgRecordsArrayFreeAll
        0     12   -> osal_nv_item_init
        0     10   -> osal_nv_item_len
        0     14   -> osal_nv_read
      0     25   bdb_RepMarkHasBindingInEndpointClusterArray
        0      9   -> bdb_clusterEndpointArraySearch
        0      9   -> bdb_clusterEndpointArrayUpdateAt
      2      9   bdb_RepProcessEvent
        0      9   -> bdb_RepReport
        0      9   -> bdb_RepRestartNextEventTimer
        0      9   -> bdb_clusterEndpointArrayGetMin
        0      9   -> bdb_clusterEndpointArrayIncrementAll
        0      9   -> bdb_clusterEndpointArrayUpdateAt
      1     85   bdb_RepReport
        0     44   -> bdb_RepFindAttrEntry
        0     42   -> bdb_getZCLFrameCounter
        0     42   -> bdb_linkedListAttrGetAtIndex
        0     42   -> osal_mem_alloc
        0     42   -> osal_mem_free
        0     45   -> osal_memcpy
        0     42   -> osal_memset
        0     42   -> zclAnalogDataType
        0     42   -> zclGetDataTypeLength
        0     47   -> zcl_SendReportCmd
      0     29   bdb_RepRestartNextEventTimer
        0     20   -> osal_start_timerEx
      1     46   bdb_RepSetupReporting
        0     12   -> bdb_clusterEndpointArrayFreeAll
        0     12   -> bdb_clusterEndpointArraySearch
        0     12   -> bdb_repAttrBuildClusterEndPointArrayBasedOnConfRecordsArray
        0     12   -> osal_mem_alloc
        0     12   -> osal_mem_free
        0     12   -> osal_stop_timerEx
      0     14   bdb_RepStartOrContinueReporting
        0     14   -> bdb_RepCalculateEventElapsedTime
        0     12   -> bdb_RepStartReporting
        0     12   -> bdb_RepStopEventTimer
        0     12   -> bdb_clusterEndpointArrayIncrementAll
        0     12   -> osal_get_timeoutEx
      2     38   bdb_RepStartReporting
        2      0   -> bdb_RepRestartNextEventTimer
        2      0   -> osal_get_timeoutEx
        2      0   -> osal_stop_timerEx
      2     38   bdb_RepStopEventTimer
        2      0   -> osal_stop_timerEx
      0     16   bdb_RepUpdateMarkBindings
        0     16   -> bdb_RepMarkHasBindingInEndpointClusterArray
        0     16   -> bdb_RepStartReporting
        0     16   -> bindFind
        0     16   -> osal_get_timeoutEx
        0     16   -> osal_stop_timerEx
      1     43   bdb_clusterEndpointArrayAdd
        0      9   -> bdb_linkedListAttrInit
      0     21   bdb_clusterEndpointArrayFreeAll
        0      9   -> bdb_clusterEndpointArrayRemoveAt
      0     18   bdb_clusterEndpointArrayGetMin
      0     52   bdb_clusterEndpointArrayIncrementAll
      2      0   bdb_clusterEndpointArrayInit
      1     19   bdb_clusterEndpointArrayMoveTo
        0     10   -> bdb_linkedListAttrClearList
      0     18   bdb_clusterEndpointArrayRemoveAt
        0      9   -> bdb_clusterEndpointArrayMoveTo
        0      9   -> bdb_linkedListAttrFreeAll
      0     47   bdb_clusterEndpointArraySearch
      0     47   bdb_clusterEndpointArrayUpdateAt
      0     60   bdb_isAttrValueChangedSurpassDelta
      0     42   bdb_linkedListAttrAdd
        0     12   -> osal_mem_alloc
      2     10   bdb_linkedListAttrClearList
      0     18   bdb_linkedListAttrFreeAll
        0      9   -> bdb_linkedListAttrRemove
        0      9   -> osal_mem_free
      0     51   bdb_linkedListAttrGetAtIndex
      2      9   bdb_linkedListAttrInit
      0     19   bdb_linkedListAttrRemove
        0     10   -> osal_mem_free
      0     47   bdb_linkedListAttrSearch
      0     46   bdb_repAttrBuildClusterEndPointArrayBasedOnConfRecordsArray
        0     30   -> bdb_InitReportAttrLiveValues
        0     32   -> bdb_RepFindAttrEntry
        0     34   -> bdb_clusterEndpointArrayAdd
        0     30   -> bdb_clusterEndpointArraySearch
        0     30   -> bdb_linkedListAttrAdd
        0     32   -> bdb_repAttrCfgRecordsArrayConsolidateValues
        0     30   -> osal_mem_alloc
        0     33   -> osal_memcpy
      1     65   bdb_repAttrCfgRecordsArrayAdd
        0     14   -> osal_memcpy
      0     48   bdb_repAttrCfgRecordsArrayConsolidateValues
      0     48   bdb_repAttrCfgRecordsArrayCreate
        0      9   -> osal_mem_alloc
      2     39   bdb_repAttrCfgRecordsArrayFreeAll
        2      0   -> osal_mem_free
      2      0   bdb_repAttrCfgRecordsArrayInit
      0     43   bdb_repAttrCfgRecordsArraySearch
      2     16   bdb_repAttrDefaultCfgRecordInitValues
      0     28   bdb_repAttrDefaultCfgRecordsLinkedListAdd
        0     12   -> osal_mem_alloc
      0     19   bdb_repAttrDefaultCfgRecordsLinkedListFreeAll
        0      9   -> bdb_repAttrDefaultCfgRecordsLinkedListRemove
        0      9   -> osal_mem_free
      2      0   bdb_repAttrDefaultCfgRecordsLinkedListInit
      0     19   bdb_repAttrDefaultCfgRecordsLinkedListRemove
        0     10   -> osal_mem_free
      2     52   bdb_repAttrDefaultCfgRecordsLinkedListSearch


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Constant {0, 0, 0, 0}>
       4  __Constant_3e8
       3  attrDefaultCfgRecordLinkedList
      74  bdb_FindEpDesc
      57  bdb_InitReportAttrLiveValues
    1080  bdb_ProcessInConfigReportCmd
     773  bdb_ProcessInReadReportCfgCmd
     382  bdb_RepAddAttrCfgRecordDefaultToList
     155  bdb_RepCalculateEventElapsedTime
     395  bdb_RepChangedAttrValue
     755  bdb_RepConstructAttrCfgArray
      25  bdb_RepConstructReportingData
     406  bdb_RepFindAttrEntry
      36  bdb_RepInit
     136  bdb_RepInitAttrCfgRecords
     154  bdb_RepLoadCfgRecords
      53  bdb_RepMarkHasBindingInEndpointClusterArray
     137  bdb_RepProcessEvent
     603  bdb_RepReport
      62  bdb_RepRestartNextEventTimer
     275  bdb_RepSetupReporting
      61  bdb_RepStartOrContinueReporting
      57  bdb_RepStartReporting
      23  bdb_RepStopEventTimer
     207  bdb_RepUpdateMarkBindings
     166  bdb_clusterEndpointArrayAdd
      30  bdb_clusterEndpointArrayFreeAll
     124  bdb_clusterEndpointArrayGetMin
     183  bdb_clusterEndpointArrayIncrementAll
      16  bdb_clusterEndpointArrayInit
     217  bdb_clusterEndpointArrayMoveTo
      64  bdb_clusterEndpointArrayRemoveAt
      71  bdb_clusterEndpointArraySearch
     105  bdb_clusterEndpointArrayUpdateAt
     611  bdb_isAttrValueChangedSurpassDelta
      97  bdb_linkedListAttrAdd
      25  bdb_linkedListAttrClearList
      42  bdb_linkedListAttrFreeAll
      77  bdb_linkedListAttrGetAtIndex
      25  bdb_linkedListAttrInit
      87  bdb_linkedListAttrRemove
      67  bdb_linkedListAttrSearch
     674  bdb_repAttrBuildClusterEndPointArrayBasedOnConfRecordsArray
     454  bdb_repAttrCfgRecordsArrayAdd
     249  bdb_repAttrCfgRecordsArrayConsolidateValues
      59  bdb_repAttrCfgRecordsArrayCreate
      45  bdb_repAttrCfgRecordsArrayFreeAll
      22  bdb_repAttrCfgRecordsArrayInit
      98  bdb_repAttrCfgRecordsArraySearch
      92  bdb_repAttrDefaultCfgRecordInitValues
      97  bdb_repAttrDefaultCfgRecordsLinkedListAdd
      42  bdb_repAttrDefaultCfgRecordsLinkedListFreeAll
      25  bdb_repAttrDefaultCfgRecordsLinkedListInit
      87  bdb_repAttrDefaultCfgRecordsLinkedListRemove
     113  bdb_repAttrDefaultCfgRecordsLinkedListSearch
       1  bdb_reportingAcceptDefaultConfs
       2  bdb_reportingAttrCfgRecordsArray
       1  bdb_reportingAttrCfgRecordsArrayCount
       1  bdb_reportingAttrCfgRecordsArrayMaxSize
      65  bdb_reportingClusterEndpointArray
       1  bdb_reportingClusterEndpointArrayCount
       1  bdb_reportingNextClusterEndpointIndex
       2  bdb_reportingNextEventTimeout
       4  gAttrDataValue
     312  -- Other

 
 9 970 bytes in segment BANKED_CODE
   312 bytes in segment BANK_RELAYS
     8 bytes in segment XDATA_ROM_C
    81 bytes in segment XDATA_Z
 
   312 bytes of CODE     memory
     4 bytes of CONST    memory (+ 4 bytes shared)
 9 970 bytes of HUGECODE memory
    81 bytes of XDATA    memory

Errors: none
Warnings: none
