###############################################################################
#
# IAR C/C++ Compiler V10.30.1.6000 for 8051               21/Jul/2020  00:36:38
# Copyright 2004-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\Source\zcl_sampletemperaturesensor_data.c
#    Command line       =  
#        -f C:\Users\sunli\AppData\Local\Temp\EW2C05.tmp ("D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\Source\zcl_sampletemperaturesensor_data.c"
#        -D BDB_REPORTING -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D
#        xNV_RESTORE -D xPOWER_SAVING -D NWK_AUTO_POLL -D xZTOOL_P1 -D xMT_TASK
#        -D xMT_APP_FUNC -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D xMT_APP_CNF_FUNC -D
#        LCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D ZCL_READ -D
#        ZCL_DISCOVER -D ZCL_WRITE -D ZCL_BASIC -D ZCL_IDENTIFY -D
#        ZCL_TEMPERATURE_MEASUREMENT -D ZCL_GROUPS -D ZCL_ON_OFF -D ZCL_REPORT
#        -D ZCL_REPORT_DESTINATION_DEVICE -lC "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\EndDeviceEB\List"
#        -lA "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\EndDeviceEB\List"
#        --diag_suppress Pe001,Pa010 -o "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\EndDeviceEB\Obj"
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 16 -f "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg"
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
#        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0} -DMAC_MAX_FRAME_SIZE=116
#        -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const __code"
#        -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000
#        -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440
#        -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000 -DENABLE_LED4_DISABLE_S1)
#        -f "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\Source\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\Source\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\ZMain\TI2530DB\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\hal\include\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\include\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mt\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\osal\include\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\services\saddr\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\services\sdata\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\af\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\bdb\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\gp\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sec\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sys\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\zmac\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
#        -Om --require_prototypes --no_unroll --no_inline --no_tbaa
#        --no_cross_call)
#    Locale             =  Chinese (Simplified)_CHN.936
#    List file          =  
#        D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\EndDeviceEB\List\zcl_sampletemperaturesensor_data.lst
#    Object file        =  
#        D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\EndDeviceEB\Obj\zcl_sampletemperaturesensor_data.r51
#
###############################################################################

D:\AA\Z-Stack 3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\Source\zcl_sampletemperaturesensor_data.c
      1          /**************************************************************************************************
      2            Filename:       zcl_sampletemperaturesensor_data.c
      3            Revised:        $Date: 2014-09-25 13:20:41 -0700 (Thu, 25 Sep 2014) $
      4            Revision:       $Revision: 40295 $
      5          
      6          
      7            Description:    Zigbee Cluster Library - sample device application.
      8          
      9          
     10            Copyright 2013-2014 Texas Instruments Incorporated. All rights reserved.
     11          
     12            IMPORTANT: Your use of this Software is limited to those specific rights
     13            granted under the terms of a software license agreement between the user
     14            who downloaded the software, his/her employer (which must be your employer)
     15            and Texas Instruments Incorporated (the "License").  You may not use this
     16            Software unless you agree to abide by the terms of the License. The License
     17            limits your use, and you acknowledge, that the Software may not be modified,
     18            copied or distributed unless embedded on a Texas Instruments microcontroller
     19            or used solely and exclusively in conjunction with a Texas Instruments radio
     20            frequency transceiver, which is integrated into your product.  Other than for
     21            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     22            works of, modify, distribute, perform, display or sell this Software and/or
     23            its documentation for any purpose.
     24          
     25            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     26            PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     27            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     28            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     29            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     30            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     31            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     32            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     33            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     34            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     35            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     36          
     37            Should you have any questions regarding your right to use this Software,
     38            contact Texas Instruments Incorporated at www.TI.com.
     39          **************************************************************************************************/
     40          
     41          /*********************************************************************
     42           * INCLUDES
     43           */
     44          #include "ZComDef.h"
     45          #include "OSAL.h"
     46          #include "AF.h"
     47          #include "ZDConfig.h"
     48          
     49          #include "zcl.h"
     50          #include "zcl_general.h"
     51          #include "zcl_ha.h"
     52          #include "zcl_ms.h"
     53          
     54          #include "zcl_sampletemperaturesensor.h"
     55          
     56          /*********************************************************************
     57           * CONSTANTS
     58           */
     59          
     60          #define SAMPLETEMPERATURESENSOR_DEVICE_VERSION     0
     61          #define SAMPLETEMPERATURESENSOR_FLAGS              0
     62          
     63          #define SAMPLETEMPERATURESENSOR_HWVERSION          1
     64          #define SAMPLETEMPERATURESENSOR_ZCLVERSION         1
     65          
     66          #define SAMPLETEMPERATURESENSOR_MAX_MEASURED_VALUE  2700  // 27.00C
     67          #define SAMPLETEMPERATURESENSOR_MIN_MEASURED_VALUE  1700  // 17.00C
     68          
     69          #define SAMPLETEMPERATURESENSOR_MEASURED_VALUE      2000  // 20.00C
     70          
     71          /*********************************************************************
     72           * TYPEDEFS
     73           */
     74          
     75          /*********************************************************************
     76           * MACROS
     77           */
     78          
     79          /*********************************************************************
     80           * GLOBAL VARIABLES
     81           */
     82          
     83          // Global attributes

   \                                 In  segment XDATA_ROM_C, align 1
     84          const uint16 zclSampleTemperatureSensor_clusterRevision_all = 0x0001; 
   \                     zclSampleTemperatureSensor_clusterRevision_all:
   \   000000   0100         DW 1
     85          
     86          // Basic Cluster

   \                                 In  segment XDATA_ROM_C, align 1
     87          const uint8 zclSampleTemperatureSensor_HWRevision = SAMPLETEMPERATURESENSOR_HWVERSION;
   \                     zclSampleTemperatureSensor_HWRevision:
   \   000000   01           DB 1

   \                                 In  segment XDATA_ROM_C, align 1
     88          const uint8 zclSampleTemperatureSensor_ZCLVersion = SAMPLETEMPERATURESENSOR_ZCLVERSION;
   \                     zclSampleTemperatureSensor_ZCLVersion:
   \   000000   01           DB 1

   \                                 In  segment XDATA_ROM_C, align 1
     89          const uint8 zclSampleTemperatureSensor_ManufacturerName[] = { 16, 'T','e','x','a','s','I','n','s','t','r','u','m','e','n','t','s' };
   \                     zclSampleTemperatureSensor_ManufacturerName:
   \   000000   10           DB 16
   \   000001   54           DB 84
   \   000002   65           DB 101
   \   000003   78           DB 120
   \   000004   61           DB 97
   \   000005   73           DB 115
   \   000006   49           DB 73
   \   000007   6E           DB 110
   \   000008   73           DB 115
   \   000009   74           DB 116
   \   00000A   72           DB 114
   \   00000B   75           DB 117
   \   00000C   6D           DB 109
   \   00000D   65           DB 101
   \   00000E   6E           DB 110
   \   00000F   74           DB 116
   \   000010   73           DB 115

   \                                 In  segment XDATA_ROM_C, align 1
     90          const uint8 zclSampleTemperatureSensor_ModelId[] = { 16, 'T','I','0','0','0','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ' };
   \                     zclSampleTemperatureSensor_ModelId:
   \   000000   10           DB 16
   \   000001   54           DB 84
   \   000002   49           DB 73
   \   000003   30           DB 48
   \   000004   30           DB 48
   \   000005   30           DB 48
   \   000006   31           DB 49
   \   000007   20           DB 32
   \   000008   20           DB 32
   \   000009   20           DB 32
   \   00000A   20           DB 32
   \   00000B   20           DB 32
   \   00000C   20           DB 32
   \   00000D   20           DB 32
   \   00000E   20           DB 32
   \   00000F   20           DB 32
   \   000010   20           DB 32

   \                                 In  segment XDATA_ROM_C, align 1
     91          const uint8 zclSampleTemperatureSensor_DateCode[] = { 16, '2','0','0','6','0','8','3','1',' ',' ',' ',' ',' ',' ',' ',' ' };
   \                     zclSampleTemperatureSensor_DateCode:
   \   000000   10           DB 16
   \   000001   32           DB 50
   \   000002   30           DB 48
   \   000003   30           DB 48
   \   000004   36           DB 54
   \   000005   30           DB 48
   \   000006   38           DB 56
   \   000007   33           DB 51
   \   000008   31           DB 49
   \   000009   20           DB 32
   \   00000A   20           DB 32
   \   00000B   20           DB 32
   \   00000C   20           DB 32
   \   00000D   20           DB 32
   \   00000E   20           DB 32
   \   00000F   20           DB 32
   \   000010   20           DB 32

   \                                 In  segment XDATA_ROM_C, align 1
     92          const uint8 zclSampleTemperatureSensor_PowerSource = POWER_SOURCE_MAINS_1_PHASE;
   \                     zclSampleTemperatureSensor_PowerSource:
   \   000000   01           DB 1
     93          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     94          uint8 zclSampleTemperatureSensor_LocationDescription[17];
   \                     zclSampleTemperatureSensor_LocationDescription:
   \   000000                DS 17
   \   000011                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     95          uint8 zclSampleTemperatureSensor_PhysicalEnvironment;
   \                     zclSampleTemperatureSensor_PhysicalEnvironment:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     96          uint8 zclSampleTemperatureSensor_DeviceEnable;
   \                     zclSampleTemperatureSensor_DeviceEnable:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     97          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     98          uint8  zclSampleLight_OnOff;
   \                     zclSampleLight_OnOff:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     99          
    100          // Identify Cluster

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    101          uint16 zclSampleTemperatureSensor_IdentifyTime;
   \                     zclSampleTemperatureSensor_IdentifyTime:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    102          
    103          // Temperature Sensor Cluster

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    104          int16 zclSampleTemperatureSensor_MeasuredValue;
   \                     zclSampleTemperatureSensor_MeasuredValue:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_ROM_C, align 1
    105          const int16 zclSampleTemperatureSensor_MinMeasuredValue = SAMPLETEMPERATURESENSOR_MIN_MEASURED_VALUE; 
   \                     zclSampleTemperatureSensor_MinMeasuredValue:
   \   000000   A406         DW 1700

   \                                 In  segment XDATA_ROM_C, align 1
    106          const uint16 zclSampleTemperatureSensor_MaxMeasuredValue = SAMPLETEMPERATURESENSOR_MAX_MEASURED_VALUE;
   \                     zclSampleTemperatureSensor_MaxMeasuredValue:
   \   000000   8C0A         DW 2700
    107          
    108          //TEST

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    109          uint8 Sw_Test[4];
   \                     Sw_Test:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z
    110          /*********************************************************************
    111           * ATTRIBUTE DEFINITIONS - Uses REAL cluster IDs
    112           */
    113          
    114          // NOTE: The attributes listed in the AttrRec must be in ascending order 
    115          // per cluster to allow right function of the Foundation discovery commands
    116          

   \                                 In  segment CODE_C, align 1
    117          CONST zclAttrRec_t zclSampleTemperatureSensor_Attrs[] =
   \                     zclSampleTemperatureSensor_Attrs:
   \   000000   0000         DW 0
   \   000002   0000         DW 0
   \   000004   20           DB 32
   \   000005   01           DB 1
   \   000006   ....         DW zclSampleTemperatureSensor_ZCLVersion
   \   000008   0000         DW 0
   \   00000A   0300         DW 3
   \   00000C   20           DB 32
   \   00000D   01           DB 1
   \   00000E   ....         DW zclSampleTemperatureSensor_HWRevision
   \   000010   0000         DW 0
   \   000012   0400         DW 4
   \   000014   42           DB 66
   \   000015   01           DB 1
   \   000016   ....         DW zclSampleTemperatureSensor_ManufacturerName
   \   000018   0000         DW 0
   \   00001A   0500         DW 5
   \   00001C   42           DB 66
   \   00001D   01           DB 1
   \   00001E   ....         DW zclSampleTemperatureSensor_ModelId
   \   000020   0000         DW 0
   \   000022   0600         DW 6
   \   000024   42           DB 66
   \   000025   01           DB 1
   \   000026   ....         DW zclSampleTemperatureSensor_DateCode
   \   000028   0000         DW 0
   \   00002A   0700         DW 7
   \   00002C   30           DB 48
   \   00002D   01           DB 1
   \   00002E   ....         DW zclSampleTemperatureSensor_PowerSource
   \   000030   0000         DW 0
   \   000032   1000         DW 16
   \   000034   42           DB 66
   \   000035   03           DB 3
   \   000036   ....         DW zclSampleTemperatureSensor_LocationDescription
   \   000038   0000         DW 0
   \   00003A   1100         DW 17
   \   00003C   30           DB 48
   \   00003D   03           DB 3
   \   00003E   ....         DW zclSampleTemperatureSensor_PhysicalEnvironment
   \   000040   0000         DW 0
   \   000042   1200         DW 18
   \   000044   10           DB 16
   \   000045   03           DB 3
   \   000046   ....         DW zclSampleTemperatureSensor_DeviceEnable
   \   000048   0000         DW 0
   \   00004A   FDFF         DW 65533
   \   00004C   21           DB 33
   \   00004D   01           DB 1
   \   00004E   ....         DW zclSampleTemperatureSensor_clusterRevision_all
   \   000050   0300         DW 3
   \   000052   0000         DW 0
   \   000054   21           DB 33
   \   000055   03           DB 3
   \   000056   ....         DW zclSampleTemperatureSensor_IdentifyTime
   \   000058   0300         DW 3
   \   00005A   FDFF         DW 65533
   \   00005C   21           DB 33
   \   00005D   41           DB 65
   \   00005E   ....         DW zclSampleTemperatureSensor_clusterRevision_all
   \   000060   0204         DW 1026
   \   000062   0000         DW 0
   \   000064   29           DB 41
   \   000065   05           DB 5
   \   000066   ....         DW zclSampleTemperatureSensor_MeasuredValue
   \   000068   0204         DW 1026
   \   00006A   0100         DW 1
   \   00006C   29           DB 41
   \   00006D   01           DB 1
   \   00006E   ....         DW zclSampleTemperatureSensor_MinMeasuredValue
   \   000070   0204         DW 1026
   \   000072   0200         DW 2
   \   000074   29           DB 41
   \   000075   01           DB 1
   \   000076   ....         DW zclSampleTemperatureSensor_MaxMeasuredValue
   \   000078   0204         DW 1026
   \   00007A   FDFF         DW 65533
   \   00007C   21           DB 33
   \   00007D   01           DB 1
   \   00007E   ....         DW zclSampleTemperatureSensor_clusterRevision_all
   \   000080   0700         DW 7
   \   000082   0400         DW 4
   \   000084   23           DB 35
   \   000085   05           DB 5
   \   000086   ....         DW Sw_Test
   \   000088   0600         DW 6
   \   00008A   0000         DW 0
   \   00008C   10           DB 16
   \   00008D   05           DB 5
   \   00008E   ....         DW zclSampleLight_OnOff
    118          {
    119            // *** General Basic Cluster Attributes ***
    120            {
    121              ZCL_CLUSTER_ID_GEN_BASIC,
    122              { // Attribute record
    123                ATTRID_BASIC_ZCL_VERSION,
    124                ZCL_DATATYPE_UINT8,
    125                ACCESS_CONTROL_READ,
    126                (void *)&zclSampleTemperatureSensor_ZCLVersion
    127              }
    128            },
    129            {
    130              ZCL_CLUSTER_ID_GEN_BASIC,             // Cluster IDs - defined in the foundation (ie. zcl.h)
    131              {  // Attribute record
    132                ATTRID_BASIC_HW_VERSION,            // Attribute ID - Found in Cluster Library header (ie. zcl_general.h)
    133                ZCL_DATATYPE_UINT8,                 // Data Type - found in zcl.h
    134                ACCESS_CONTROL_READ,                // Variable access control - found in zcl.h
    135                (void *)&zclSampleTemperatureSensor_HWRevision  // Pointer to attribute variable
    136              }
    137            },
    138            {
    139              ZCL_CLUSTER_ID_GEN_BASIC,
    140              { // Attribute record
    141                ATTRID_BASIC_MANUFACTURER_NAME,
    142                ZCL_DATATYPE_CHAR_STR,
    143                ACCESS_CONTROL_READ,
    144                (void *)zclSampleTemperatureSensor_ManufacturerName
    145              }
    146            },
    147            {
    148              ZCL_CLUSTER_ID_GEN_BASIC,
    149              { // Attribute record
    150                ATTRID_BASIC_MODEL_ID,
    151                ZCL_DATATYPE_CHAR_STR,
    152                ACCESS_CONTROL_READ,
    153                (void *)zclSampleTemperatureSensor_ModelId
    154              }
    155            },
    156            {
    157              ZCL_CLUSTER_ID_GEN_BASIC,
    158              { // Attribute record
    159                ATTRID_BASIC_DATE_CODE,
    160                ZCL_DATATYPE_CHAR_STR,
    161                ACCESS_CONTROL_READ,
    162                (void *)zclSampleTemperatureSensor_DateCode
    163              }
    164            },
    165            {
    166              ZCL_CLUSTER_ID_GEN_BASIC,
    167              { // Attribute record
    168                ATTRID_BASIC_POWER_SOURCE,
    169                ZCL_DATATYPE_ENUM8,
    170                ACCESS_CONTROL_READ,
    171                (void *)&zclSampleTemperatureSensor_PowerSource
    172              }
    173            },
    174            {
    175              ZCL_CLUSTER_ID_GEN_BASIC,
    176              { // Attribute record
    177                ATTRID_BASIC_LOCATION_DESC,
    178                ZCL_DATATYPE_CHAR_STR,
    179                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    180                (void *)zclSampleTemperatureSensor_LocationDescription
    181              }
    182            },
    183            {
    184              ZCL_CLUSTER_ID_GEN_BASIC,
    185              { // Attribute record
    186                ATTRID_BASIC_PHYSICAL_ENV,
    187                ZCL_DATATYPE_ENUM8,
    188                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    189                (void *)&zclSampleTemperatureSensor_PhysicalEnvironment
    190              }
    191            },
    192            {
    193              ZCL_CLUSTER_ID_GEN_BASIC,
    194              { // Attribute record
    195                ATTRID_BASIC_DEVICE_ENABLED,
    196                ZCL_DATATYPE_BOOLEAN,
    197                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    198                (void *)&zclSampleTemperatureSensor_DeviceEnable
    199              }
    200            },
    201            {
    202              ZCL_CLUSTER_ID_GEN_BASIC,
    203              {  // Attribute record
    204                ATTRID_CLUSTER_REVISION,
    205                ZCL_DATATYPE_UINT16,
    206                ACCESS_CONTROL_READ,
    207                (void *)&zclSampleTemperatureSensor_clusterRevision_all
    208              }
    209            },
    210            // *** Identify Cluster Attribute ***
    211            {
    212              ZCL_CLUSTER_ID_GEN_IDENTIFY,
    213              { // Attribute record
    214                ATTRID_IDENTIFY_TIME,
    215                ZCL_DATATYPE_UINT16,
    216                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    217                (void *)&zclSampleTemperatureSensor_IdentifyTime
    218              }
    219            },
    220            {
    221              ZCL_CLUSTER_ID_GEN_IDENTIFY,
    222              {  // Attribute record
    223                ATTRID_CLUSTER_REVISION,
    224                ZCL_DATATYPE_UINT16,
    225                ACCESS_CONTROL_READ | ACCESS_GLOBAL,
    226                (void *)&zclSampleTemperatureSensor_clusterRevision_all
    227              }
    228            },
    229          
    230            // *** Temperature Measurement Attriubtes ***
    231            {
    232              ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
    233              { // Attribute record
    234                ATTRID_MS_TEMPERATURE_MEASURED_VALUE,
    235                ZCL_DATATYPE_INT16,
    236                ACCESS_CONTROL_READ | ACCESS_REPORTABLE,
    237                (void *)&zclSampleTemperatureSensor_MeasuredValue
    238              }
    239            },
    240            {
    241              ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
    242              { // Attribute record
    243                ATTRID_MS_TEMPERATURE_MIN_MEASURED_VALUE,
    244                ZCL_DATATYPE_INT16,
    245                ACCESS_CONTROL_READ,
    246                (void *)&zclSampleTemperatureSensor_MinMeasuredValue
    247              }
    248            },
    249            {
    250              ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
    251              { // Attribute record
    252                ATTRID_MS_TEMPERATURE_MAX_MEASURED_VALUE,
    253                ZCL_DATATYPE_INT16,
    254                ACCESS_CONTROL_READ,
    255                (void *)&zclSampleTemperatureSensor_MaxMeasuredValue
    256              }
    257            },
    258          
    259            {
    260              ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
    261              {  // Attribute record
    262                ATTRID_CLUSTER_REVISION,
    263                ZCL_DATATYPE_UINT16,
    264                ACCESS_CONTROL_READ,
    265                (void *)&zclSampleTemperatureSensor_clusterRevision_all
    266              }
    267            },
    268            //test
    269            {
    270              //ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
    271              ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG,
    272              {  // 
    273                TEST,
    274                ZCL_DATATYPE_UINT32,
    275                ACCESS_CONTROL_READ | ACCESS_REPORTABLE,
    276                (void *)&Sw_Test
    277              }
    278            },
    279            {
    280              ZCL_CLUSTER_ID_GEN_ON_OFF,
    281              { // Attribute record
    282                ATTRID_ON_OFF,
    283                ZCL_DATATYPE_BOOLEAN,
    284                ACCESS_CONTROL_READ | ACCESS_REPORTABLE,
    285                (void *)&zclSampleLight_OnOff
    286              }
    287            },
    288          };
    289          

   \                                 In  segment CODE_C, align 1
    290          uint8 CONST zclSampleTemperatureSensor_NumAttributes = ( sizeof(zclSampleTemperatureSensor_Attrs) / sizeof(zclSampleTemperatureSensor_Attrs[0]) );
   \                     zclSampleTemperatureSensor_NumAttributes:
   \   000000   12           DB 18
    291          
    292          /*********************************************************************
    293           * SIMPLE DESCRIPTOR
    294           */
    295          // This is the Cluster ID List and should be filled with Application
    296          // specific cluster IDs.
    297          #define ZCLSAMPLETEMPERATURESENSOR_MAX_INCLUSTERS       5

   \                                 In  segment XDATA_ROM_C, align 1
    298          const cId_t zclSampleTemperatureSensor_InClusterList[ZCLSAMPLETEMPERATURESENSOR_MAX_INCLUSTERS] =
   \                     zclSampleTemperatureSensor_InClusterList:
   \   000000   0000         DW 0
   \   000002   0300         DW 3
   \   000004   0204         DW 1026
   \   000006   0700         DW 7
   \   000008   0600         DW 6
    299          {
    300            ZCL_CLUSTER_ID_GEN_BASIC,
    301            ZCL_CLUSTER_ID_GEN_IDENTIFY,
    302            ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
    303            ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG,
    304            ZCL_CLUSTER_ID_GEN_ON_OFF
    305          };
    306          
    307          #define ZCLSAMPLETEMPERATURESENSOR_MAX_OUTCLUSTERS       4

   \                                 In  segment XDATA_ROM_C, align 1
    308          const cId_t zclSampleTemperatureSensor_OutClusterList[ZCLSAMPLETEMPERATURESENSOR_MAX_OUTCLUSTERS] =
   \                     zclSampleTemperatureSensor_OutClusterList:
   \   000000   0300         DW 3
   \   000002   0204         DW 1026
   \   000004   0700         DW 7
   \   000006   0600         DW 6
    309          {
    310            ZCL_CLUSTER_ID_GEN_IDENTIFY,
    311            ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
    312            ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG,
    313            ZCL_CLUSTER_ID_GEN_ON_OFF
    314          };
    315          

   \                                 In  segment XDATA_I, align 1, keep-with-next
    316          SimpleDescriptionFormat_t zclSampleTemperatureSensor_SimpleDesc =
   \                     zclSampleTemperatureSensor_SimpleDesc:
   \   000000                DS 12
   \   00000C                REQUIRE `?<Initializer for zclSampleTemperatureSensor_S`
   \   00000C                REQUIRE __INIT_XDATA_I
    317          {
    318            SAMPLETEMPERATURESENSOR_ENDPOINT,                  //  int Endpoint;
    319            ZCL_HA_PROFILE_ID,                                 //  uint16 AppProfId[2];
    320            ZCL_HA_DEVICEID_TEMPERATURE_SENSOR,                //  uint16 AppDeviceId[2];
    321            SAMPLETEMPERATURESENSOR_DEVICE_VERSION,            //  int   AppDevVer:4;
    322            SAMPLETEMPERATURESENSOR_FLAGS,                     //  int   AppFlags:4;
    323            ZCLSAMPLETEMPERATURESENSOR_MAX_INCLUSTERS,         //  byte  AppNumInClusters;
    324            (cId_t *)zclSampleTemperatureSensor_InClusterList, //  byte *pAppInClusterList;
    325            ZCLSAMPLETEMPERATURESENSOR_MAX_OUTCLUSTERS,        //  byte  AppNumInClusters;
    326            (cId_t *)zclSampleTemperatureSensor_OutClusterList //  byte *pAppInClusterList;
    327          };
    328           
    329          /*********************************************************************
    330           * GLOBAL FUNCTIONS
    331           */
    332          
    333          /*********************************************************************
    334           * LOCAL FUNCTIONS
    335           */
    336          
    337          /*********************************************************************
    338           * @fn      zclSampleLight_ResetAttributesToDefaultValues
    339           *
    340           * @brief   Reset all writable attributes to their default values.
    341           *
    342           * @param   none
    343           *
    344           * @return  none
    345           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    346          void zclSampleTemperatureSensor_ResetAttributesToDefaultValues(void)
   \                     zclSampleTemperatureSensor_ResetAttributesToDefaultValues:
    347          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    348            int i;
    349            
    350            zclSampleTemperatureSensor_LocationDescription[0] = 16;
   \   000004   90....       MOV       DPTR,#zclSampleTemperatureSensor_LocationDescription
   \   000007   7410         MOV       A,#0x10
   \   000009   F0           MOVX      @DPTR,A
    351            for (i = 1; i <= 16; i++)
   \   00000A   7801         MOV       R0,#0x1
   \   00000C   7900         MOV       R1,#0x0
   \   00000E   8012         SJMP      ??zclSampleTemperatureSensor_ResetAttributesToD_1
    352            {
    353              zclSampleTemperatureSensor_LocationDescription[i] = ' ';
   \                     ??zclSampleTemperatureSensor_ResetAttributesToD_2:
   \   000010   74..         MOV       A,#zclSampleTemperatureSensor_LocationDescription & 0xff
   \   000012   28           ADD       A,R0
   \   000013   F582         MOV       DPL,A
   \   000015   74..         MOV       A,#(zclSampleTemperatureSensor_LocationDescription >> 8) & 0xff
   \   000017   39           ADDC      A,R1
   \   000018   F583         MOV       DPH,A
   \   00001A   7420         MOV       A,#0x20
   \   00001C   F0           MOVX      @DPTR,A
    354            }
   \   00001D   08           INC       R0
   \   00001E   E8           MOV       A,R0
   \   00001F   7001         JNZ       ??zclSampleTemperatureSensor_ResetAttributesToD_1
   \   000021   09           INC       R1
   \                     ??zclSampleTemperatureSensor_ResetAttributesToD_1:
   \   000022   C3           CLR       C
   \   000023   E8           MOV       A,R0
   \   000024   9411         SUBB      A,#0x11
   \   000026   E9           MOV       A,R1
   \   000027   9400         SUBB      A,#0x0
   \   000029   A2D2         MOV       C,0xD0 /* PSW */.2
   \   00002B   65D0         XRL       A,PSW
   \   00002D   33           RLC       A
   \   00002E   40E0         JC        ??zclSampleTemperatureSensor_ResetAttributesToD_2
    355            
    356            zclSampleTemperatureSensor_PhysicalEnvironment = PHY_UNSPECIFIED_ENV;
   \   000030   90....       MOV       DPTR,#zclSampleTemperatureSensor_PhysicalEnvironment
   \   000033   E4           CLR       A
   \   000034   F0           MOVX      @DPTR,A
    357            zclSampleTemperatureSensor_DeviceEnable = DEVICE_ENABLED;
   \   000035   90....       MOV       DPTR,#zclSampleTemperatureSensor_DeviceEnable
   \   000038   04           INC       A
   \   000039   F0           MOVX      @DPTR,A
    358            
    359          #ifdef ZCL_IDENTIFY
    360            zclSampleTemperatureSensor_IdentifyTime = 0;
   \   00003A   90....       MOV       DPTR,#zclSampleTemperatureSensor_IdentifyTime
   \   00003D   E4           CLR       A
   \   00003E   F0           MOVX      @DPTR,A
   \   00003F   A3           INC       DPTR
   \   000040   F0           MOVX      @DPTR,A
    361          #endif
    362            
    363            zclSampleTemperatureSensor_MeasuredValue = SAMPLETEMPERATURESENSOR_MEASURED_VALUE;
   \   000041   90....       MOV       DPTR,#zclSampleTemperatureSensor_MeasuredValue
   \   000044   74D0         MOV       A,#-0x30
   \   000046   F0           MOVX      @DPTR,A
   \   000047   A3           INC       DPTR
   \   000048   7407         MOV       A,#0x7
   \   00004A   F0           MOVX      @DPTR,A
    364            Sw_Test[0] = 10;
   \   00004B   90....       MOV       DPTR,#Sw_Test
   \   00004E   740A         MOV       A,#0xa
   \   000050   F0           MOVX      @DPTR,A
    365            Sw_Test[1] = 0;
   \   000051   A3           INC       DPTR
   \   000052   E4           CLR       A
   \   000053   F0           MOVX      @DPTR,A
    366            Sw_Test[2] = 15;
   \   000054   A3           INC       DPTR
   \   000055   740F         MOV       A,#0xf
   \   000057   F0           MOVX      @DPTR,A
    367            Sw_Test[3] = 20;
   \   000058   A3           INC       DPTR
   \   000059   7414         MOV       A,#0x14
   \   00005B   F0           MOVX      @DPTR,A
    368           // Sw_Test[2] = 0;
    369            zclSampleLight_OnOff = 0;
   \   00005C   90....       MOV       DPTR,#zclSampleLight_OnOff
   \   00005F   E4           CLR       A
   \   000060   F0           MOVX      @DPTR,A
    370          }
   \   000061   D083         POP       DPH
   \   000063   D082         POP       DPL
   \   000065   02....       LJMP      ?BRET

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclSampleTemperatureSensor_S`:
   \   000000   08           DB 8
   \   000001   0401         DW 260
   \   000003   0203         DW 770
   \   000005   00           DB 0
   \   000006   05           DB 5
   \   000007   ....         DW zclSampleTemperatureSensor_InClusterList
   \   000009   04           DB 4
   \   00000A   ....         DW zclSampleTemperatureSensor_OutClusterList
    371          
    372          /****************************************************************************
    373          ****************************************************************************/
    374          
    375          

   Maximum stack usage in bytes:

   ISTACK Function
   ------ --------
      2   zclSampleTemperatureSensor_ResetAttributesToDefaultValues


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Initializer for zclSampleTemperatureSensor_S
       4  Sw_Test
       1  zclSampleLight_OnOff
     144  zclSampleTemperatureSensor_Attrs
      17  zclSampleTemperatureSensor_DateCode
       1  zclSampleTemperatureSensor_DeviceEnable
       1  zclSampleTemperatureSensor_HWRevision
       2  zclSampleTemperatureSensor_IdentifyTime
      10  zclSampleTemperatureSensor_InClusterList
      17  zclSampleTemperatureSensor_LocationDescription
      17  zclSampleTemperatureSensor_ManufacturerName
       2  zclSampleTemperatureSensor_MaxMeasuredValue
       2  zclSampleTemperatureSensor_MeasuredValue
       2  zclSampleTemperatureSensor_MinMeasuredValue
      17  zclSampleTemperatureSensor_ModelId
       1  zclSampleTemperatureSensor_NumAttributes
       8  zclSampleTemperatureSensor_OutClusterList
       1  zclSampleTemperatureSensor_PhysicalEnvironment
       1  zclSampleTemperatureSensor_PowerSource
     104  zclSampleTemperatureSensor_ResetAttributesToDefaultValues
      12  zclSampleTemperatureSensor_SimpleDesc
       1  zclSampleTemperatureSensor_ZCLVersion
       2  zclSampleTemperatureSensor_clusterRevision_all
       6  -- Other

 
 104 bytes in segment BANKED_CODE
   6 bytes in segment BANK_RELAYS
 145 bytes in segment CODE_C
  12 bytes in segment XDATA_I
  12 bytes in segment XDATA_ID
  78 bytes in segment XDATA_ROM_C
  28 bytes in segment XDATA_Z
 
 163 bytes of CODE     memory
  78 bytes of CONST    memory
 104 bytes of HUGECODE memory
  40 bytes of XDATA    memory

Errors: none
Warnings: none
