###############################################################################
#
# IAR C/C++ Compiler V10.30.1.6000 for 8051               15/Jul/2020  11:35:45
# Copyright 2004-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\Source\zcl_sampletemperaturesensor_data.c
#    Command line       =  
#        -f C:\Users\sunli\AppData\Local\Temp\EW6DA.tmp ("D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\Source\zcl_sampletemperaturesensor_data.c"
#        -D BDB_REPORTING -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D
#        NV_RESTORE -D xZTOOL_P1 -D xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC -D
#        xMT_ZDO_FUNC -D xMT_APP_CNF_FUNC -D LCD_SUPPORTED=DEBUG -D
#        MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_DISCOVER -D ZCL_WRITE -D
#        ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_TEMPERATURE_MEASUREMENT -D ZCL_GROUPS
#        -lC "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\CoordinatorEB\List"
#        -lA "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\CoordinatorEB\List"
#        --diag_suppress Pe001,Pa010 -o "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\CoordinatorEB\Obj"
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 16 -f "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DZDO_COORDINATOR -DRTR_NWK) -f "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0} -DMAC_MAX_FRAME_SIZE=116
#        -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const __code"
#        -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000
#        -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440
#        -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000 -DENABLE_LED4_DISABLE_S1)
#        -f "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\Source\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\Source\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\ZMain\TI2530DB\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\hal\include\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\include\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mt\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\osal\include\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\services\saddr\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\services\sdata\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\af\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\bdb\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\gp\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sec\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sys\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\zmac\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
#        -Ohz --require_prototypes)
#    Locale             =  Chinese (Simplified)_CHN.936
#    List file          =  
#        D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\CoordinatorEB\List\zcl_sampletemperaturesensor_data.lst
#    Object file        =  
#        D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\CoordinatorEB\Obj\zcl_sampletemperaturesensor_data.r51
#
###############################################################################

D:\AA\Z-Stack 3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\Source\zcl_sampletemperaturesensor_data.c
      1          /**************************************************************************************************
      2            Filename:       zcl_sampletemperaturesensor_data.c
      3            Revised:        $Date: 2014-09-25 13:20:41 -0700 (Thu, 25 Sep 2014) $
      4            Revision:       $Revision: 40295 $
      5          
      6          
      7            Description:    Zigbee Cluster Library - sample device application.
      8          
      9          
     10            Copyright 2013-2014 Texas Instruments Incorporated. All rights reserved.
     11          
     12            IMPORTANT: Your use of this Software is limited to those specific rights
     13            granted under the terms of a software license agreement between the user
     14            who downloaded the software, his/her employer (which must be your employer)
     15            and Texas Instruments Incorporated (the "License").  You may not use this
     16            Software unless you agree to abide by the terms of the License. The License
     17            limits your use, and you acknowledge, that the Software may not be modified,
     18            copied or distributed unless embedded on a Texas Instruments microcontroller
     19            or used solely and exclusively in conjunction with a Texas Instruments radio
     20            frequency transceiver, which is integrated into your product.  Other than for
     21            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     22            works of, modify, distribute, perform, display or sell this Software and/or
     23            its documentation for any purpose.
     24          
     25            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     26            PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     27            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     28            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     29            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     30            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     31            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     32            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     33            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     34            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     35            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     36          
     37            Should you have any questions regarding your right to use this Software,
     38            contact Texas Instruments Incorporated at www.TI.com.
     39          **************************************************************************************************/
     40          
     41          /*********************************************************************
     42           * INCLUDES
     43           */
     44          #include "ZComDef.h"
     45          #include "OSAL.h"
     46          #include "AF.h"
     47          #include "ZDConfig.h"
     48          
     49          #include "zcl.h"
     50          #include "zcl_general.h"
     51          #include "zcl_ha.h"
     52          #include "zcl_ms.h"
     53          
     54          #include "zcl_sampletemperaturesensor.h"
     55          
     56          /*********************************************************************
     57           * CONSTANTS
     58           */
     59          
     60          #define SAMPLETEMPERATURESENSOR_DEVICE_VERSION     0
     61          #define SAMPLETEMPERATURESENSOR_FLAGS              0
     62          
     63          #define SAMPLETEMPERATURESENSOR_HWVERSION          1
     64          #define SAMPLETEMPERATURESENSOR_ZCLVERSION         1
     65          
     66          #define SAMPLETEMPERATURESENSOR_MAX_MEASURED_VALUE  2700  // 27.00C
     67          #define SAMPLETEMPERATURESENSOR_MIN_MEASURED_VALUE  1700  // 17.00C
     68          
     69          #define SAMPLETEMPERATURESENSOR_MEASURED_VALUE      2000  // 20.00C
     70          
     71          /*********************************************************************
     72           * TYPEDEFS
     73           */
     74          
     75          /*********************************************************************
     76           * MACROS
     77           */
     78          
     79          /*********************************************************************
     80           * GLOBAL VARIABLES
     81           */
     82          
     83          // Global attributes

   \                                 In  segment XDATA_ROM_C, align 1
     84          const uint16 zclSampleTemperatureSensor_clusterRevision_all = 0x0001; 
   \                     zclSampleTemperatureSensor_clusterRevision_all:
   \   000000   0100         DW 1
     85          
     86          // Basic Cluster

   \                                 In  segment XDATA_ROM_C, align 1
     87          const uint8 zclSampleTemperatureSensor_HWRevision = SAMPLETEMPERATURESENSOR_HWVERSION;
   \                     zclSampleTemperatureSensor_HWRevision:
   \   000000   01           DB 1

   \                                 In  segment XDATA_ROM_C, align 1
     88          const uint8 zclSampleTemperatureSensor_ZCLVersion = SAMPLETEMPERATURESENSOR_ZCLVERSION;
   \                     zclSampleTemperatureSensor_ZCLVersion:
   \   000000   01           DB 1

   \                                 In  segment XDATA_ROM_C, align 1
     89          const uint8 zclSampleTemperatureSensor_ManufacturerName[] = { 16, 'T','e','x','a','s','I','n','s','t','r','u','m','e','n','t','s' };
   \                     zclSampleTemperatureSensor_ManufacturerName:
   \   000000   10           DB 16
   \   000001   54           DB 84
   \   000002   65           DB 101
   \   000003   78           DB 120
   \   000004   61           DB 97
   \   000005   73           DB 115
   \   000006   49           DB 73
   \   000007   6E           DB 110
   \   000008   73           DB 115
   \   000009   74           DB 116
   \   00000A   72           DB 114
   \   00000B   75           DB 117
   \   00000C   6D           DB 109
   \   00000D   65           DB 101
   \   00000E   6E           DB 110
   \   00000F   74           DB 116
   \   000010   73           DB 115

   \                                 In  segment XDATA_ROM_C, align 1
     90          const uint8 zclSampleTemperatureSensor_ModelId[] = { 16, 'T','I','0','0','0','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ' };
   \                     zclSampleTemperatureSensor_ModelId:
   \   000000   10           DB 16
   \   000001   54           DB 84
   \   000002   49           DB 73
   \   000003   30           DB 48
   \   000004   30           DB 48
   \   000005   30           DB 48
   \   000006   31           DB 49
   \   000007   20           DB 32
   \   000008   20           DB 32
   \   000009   20           DB 32
   \   00000A   20           DB 32
   \   00000B   20           DB 32
   \   00000C   20           DB 32
   \   00000D   20           DB 32
   \   00000E   20           DB 32
   \   00000F   20           DB 32
   \   000010   20           DB 32

   \                                 In  segment XDATA_ROM_C, align 1
     91          const uint8 zclSampleTemperatureSensor_DateCode[] = { 16, '2','0','0','6','0','8','3','1',' ',' ',' ',' ',' ',' ',' ',' ' };
   \                     zclSampleTemperatureSensor_DateCode:
   \   000000   10           DB 16
   \   000001   32           DB 50
   \   000002   30           DB 48
   \   000003   30           DB 48
   \   000004   36           DB 54
   \   000005   30           DB 48
   \   000006   38           DB 56
   \   000007   33           DB 51
   \   000008   31           DB 49
   \   000009   20           DB 32
   \   00000A   20           DB 32
   \   00000B   20           DB 32
   \   00000C   20           DB 32
   \   00000D   20           DB 32
   \   00000E   20           DB 32
   \   00000F   20           DB 32
   \   000010   20           DB 32

   \                                 In  segment XDATA_ROM_C, align 1
     92          const uint8 zclSampleTemperatureSensor_PowerSource = POWER_SOURCE_MAINS_1_PHASE;
   \                     zclSampleTemperatureSensor_PowerSource:
   \   000000   01           DB 1
     93          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     94          uint8 zclSampleTemperatureSensor_LocationDescription[17];
   \                     zclSampleTemperatureSensor_LocationDescription:
   \   000000                DS 17
   \   000011                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     95          uint8 zclSampleTemperatureSensor_PhysicalEnvironment;
   \                     zclSampleTemperatureSensor_PhysicalEnvironment:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     96          uint8 zclSampleTemperatureSensor_DeviceEnable;
   \                     zclSampleTemperatureSensor_DeviceEnable:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     97          
     98          // Identify Cluster

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     99          uint16 zclSampleTemperatureSensor_IdentifyTime;
   \                     zclSampleTemperatureSensor_IdentifyTime:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    100          
    101          // Temperature Sensor Cluster

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    102          int16 zclSampleTemperatureSensor_MeasuredValue;
   \                     zclSampleTemperatureSensor_MeasuredValue:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_ROM_C, align 1
    103          const int16 zclSampleTemperatureSensor_MinMeasuredValue = SAMPLETEMPERATURESENSOR_MIN_MEASURED_VALUE; 
   \                     zclSampleTemperatureSensor_MinMeasuredValue:
   \   000000   A406         DW 1700

   \                                 In  segment XDATA_ROM_C, align 1
    104          const uint16 zclSampleTemperatureSensor_MaxMeasuredValue = SAMPLETEMPERATURESENSOR_MAX_MEASURED_VALUE;
   \                     zclSampleTemperatureSensor_MaxMeasuredValue:
   \   000000   8C0A         DW 2700
    105          
    106          /*********************************************************************
    107           * ATTRIBUTE DEFINITIONS - Uses REAL cluster IDs
    108           */
    109          
    110          // NOTE: The attributes listed in the AttrRec must be in ascending order 
    111          // per cluster to allow right function of the Foundation discovery commands
    112          

   \                                 In  segment CODE_C, align 1
    113          CONST zclAttrRec_t zclSampleTemperatureSensor_Attrs[] =
   \                     zclSampleTemperatureSensor_Attrs:
   \   000000   0000         DW 0
   \   000002   0000         DW 0
   \   000004   20           DB 32
   \   000005   01           DB 1
   \   000006   ....         DW zclSampleTemperatureSensor_ZCLVersion
   \   000008   0000         DW 0
   \   00000A   0300         DW 3
   \   00000C   20           DB 32
   \   00000D   01           DB 1
   \   00000E   ....         DW zclSampleTemperatureSensor_HWRevision
   \   000010   0000         DW 0
   \   000012   0400         DW 4
   \   000014   42           DB 66
   \   000015   01           DB 1
   \   000016   ....         DW zclSampleTemperatureSensor_ManufacturerName
   \   000018   0000         DW 0
   \   00001A   0500         DW 5
   \   00001C   42           DB 66
   \   00001D   01           DB 1
   \   00001E   ....         DW zclSampleTemperatureSensor_ModelId
   \   000020   0000         DW 0
   \   000022   0600         DW 6
   \   000024   42           DB 66
   \   000025   01           DB 1
   \   000026   ....         DW zclSampleTemperatureSensor_DateCode
   \   000028   0000         DW 0
   \   00002A   0700         DW 7
   \   00002C   30           DB 48
   \   00002D   01           DB 1
   \   00002E   ....         DW zclSampleTemperatureSensor_PowerSource
   \   000030   0000         DW 0
   \   000032   1000         DW 16
   \   000034   42           DB 66
   \   000035   03           DB 3
   \   000036   ....         DW zclSampleTemperatureSensor_LocationDescription
   \   000038   0000         DW 0
   \   00003A   1100         DW 17
   \   00003C   30           DB 48
   \   00003D   03           DB 3
   \   00003E   ....         DW zclSampleTemperatureSensor_PhysicalEnvironment
   \   000040   0000         DW 0
   \   000042   1200         DW 18
   \   000044   10           DB 16
   \   000045   03           DB 3
   \   000046   ....         DW zclSampleTemperatureSensor_DeviceEnable
   \   000048   0000         DW 0
   \   00004A   FDFF         DW 65533
   \   00004C   21           DB 33
   \   00004D   01           DB 1
   \   00004E   ....         DW zclSampleTemperatureSensor_clusterRevision_all
   \   000050   0300         DW 3
   \   000052   0000         DW 0
   \   000054   21           DB 33
   \   000055   03           DB 3
   \   000056   ....         DW zclSampleTemperatureSensor_IdentifyTime
   \   000058   0300         DW 3
   \   00005A   FDFF         DW 65533
   \   00005C   21           DB 33
   \   00005D   41           DB 65
   \   00005E   ....         DW zclSampleTemperatureSensor_clusterRevision_all
   \   000060   0204         DW 1026
   \   000062   0000         DW 0
   \   000064   29           DB 41
   \   000065   05           DB 5
   \   000066   ....         DW zclSampleTemperatureSensor_MeasuredValue
   \   000068   0204         DW 1026
   \   00006A   0100         DW 1
   \   00006C   29           DB 41
   \   00006D   01           DB 1
   \   00006E   ....         DW zclSampleTemperatureSensor_MinMeasuredValue
   \   000070   0204         DW 1026
   \   000072   0200         DW 2
   \   000074   29           DB 41
   \   000075   01           DB 1
   \   000076   ....         DW zclSampleTemperatureSensor_MaxMeasuredValue
   \   000078   0204         DW 1026
   \   00007A   FDFF         DW 65533
   \   00007C   21           DB 33
   \   00007D   01           DB 1
   \   00007E   ....         DW zclSampleTemperatureSensor_clusterRevision_all
    114          {
    115            // *** General Basic Cluster Attributes ***
    116            {
    117              ZCL_CLUSTER_ID_GEN_BASIC,
    118              { // Attribute record
    119                ATTRID_BASIC_ZCL_VERSION,
    120                ZCL_DATATYPE_UINT8,
    121                ACCESS_CONTROL_READ,
    122                (void *)&zclSampleTemperatureSensor_ZCLVersion
    123              }
    124            },
    125            {
    126              ZCL_CLUSTER_ID_GEN_BASIC,             // Cluster IDs - defined in the foundation (ie. zcl.h)
    127              {  // Attribute record
    128                ATTRID_BASIC_HW_VERSION,            // Attribute ID - Found in Cluster Library header (ie. zcl_general.h)
    129                ZCL_DATATYPE_UINT8,                 // Data Type - found in zcl.h
    130                ACCESS_CONTROL_READ,                // Variable access control - found in zcl.h
    131                (void *)&zclSampleTemperatureSensor_HWRevision  // Pointer to attribute variable
    132              }
    133            },
    134            {
    135              ZCL_CLUSTER_ID_GEN_BASIC,
    136              { // Attribute record
    137                ATTRID_BASIC_MANUFACTURER_NAME,
    138                ZCL_DATATYPE_CHAR_STR,
    139                ACCESS_CONTROL_READ,
    140                (void *)zclSampleTemperatureSensor_ManufacturerName
    141              }
    142            },
    143            {
    144              ZCL_CLUSTER_ID_GEN_BASIC,
    145              { // Attribute record
    146                ATTRID_BASIC_MODEL_ID,
    147                ZCL_DATATYPE_CHAR_STR,
    148                ACCESS_CONTROL_READ,
    149                (void *)zclSampleTemperatureSensor_ModelId
    150              }
    151            },
    152            {
    153              ZCL_CLUSTER_ID_GEN_BASIC,
    154              { // Attribute record
    155                ATTRID_BASIC_DATE_CODE,
    156                ZCL_DATATYPE_CHAR_STR,
    157                ACCESS_CONTROL_READ,
    158                (void *)zclSampleTemperatureSensor_DateCode
    159              }
    160            },
    161            {
    162              ZCL_CLUSTER_ID_GEN_BASIC,
    163              { // Attribute record
    164                ATTRID_BASIC_POWER_SOURCE,
    165                ZCL_DATATYPE_ENUM8,
    166                ACCESS_CONTROL_READ,
    167                (void *)&zclSampleTemperatureSensor_PowerSource
    168              }
    169            },
    170            {
    171              ZCL_CLUSTER_ID_GEN_BASIC,
    172              { // Attribute record
    173                ATTRID_BASIC_LOCATION_DESC,
    174                ZCL_DATATYPE_CHAR_STR,
    175                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    176                (void *)zclSampleTemperatureSensor_LocationDescription
    177              }
    178            },
    179            {
    180              ZCL_CLUSTER_ID_GEN_BASIC,
    181              { // Attribute record
    182                ATTRID_BASIC_PHYSICAL_ENV,
    183                ZCL_DATATYPE_ENUM8,
    184                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    185                (void *)&zclSampleTemperatureSensor_PhysicalEnvironment
    186              }
    187            },
    188            {
    189              ZCL_CLUSTER_ID_GEN_BASIC,
    190              { // Attribute record
    191                ATTRID_BASIC_DEVICE_ENABLED,
    192                ZCL_DATATYPE_BOOLEAN,
    193                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    194                (void *)&zclSampleTemperatureSensor_DeviceEnable
    195              }
    196            },
    197            {
    198              ZCL_CLUSTER_ID_GEN_BASIC,
    199              {  // Attribute record
    200                ATTRID_CLUSTER_REVISION,
    201                ZCL_DATATYPE_UINT16,
    202                ACCESS_CONTROL_READ,
    203                (void *)&zclSampleTemperatureSensor_clusterRevision_all
    204              }
    205            },
    206            // *** Identify Cluster Attribute ***
    207            {
    208              ZCL_CLUSTER_ID_GEN_IDENTIFY,
    209              { // Attribute record
    210                ATTRID_IDENTIFY_TIME,
    211                ZCL_DATATYPE_UINT16,
    212                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    213                (void *)&zclSampleTemperatureSensor_IdentifyTime
    214              }
    215            },
    216            {
    217              ZCL_CLUSTER_ID_GEN_IDENTIFY,
    218              {  // Attribute record
    219                ATTRID_CLUSTER_REVISION,
    220                ZCL_DATATYPE_UINT16,
    221                ACCESS_CONTROL_READ | ACCESS_GLOBAL,
    222                (void *)&zclSampleTemperatureSensor_clusterRevision_all
    223              }
    224            },
    225          
    226            // *** Temperature Measurement Attriubtes ***
    227            {
    228              ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
    229              { // Attribute record
    230                ATTRID_MS_TEMPERATURE_MEASURED_VALUE,
    231                ZCL_DATATYPE_INT16,
    232                ACCESS_CONTROL_READ | ACCESS_REPORTABLE,
    233                (void *)&zclSampleTemperatureSensor_MeasuredValue
    234              }
    235            },
    236            {
    237              ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
    238              { // Attribute record
    239                ATTRID_MS_TEMPERATURE_MIN_MEASURED_VALUE,
    240                ZCL_DATATYPE_INT16,
    241                ACCESS_CONTROL_READ,
    242                (void *)&zclSampleTemperatureSensor_MinMeasuredValue
    243              }
    244            },
    245            {
    246              ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
    247              { // Attribute record
    248                ATTRID_MS_TEMPERATURE_MAX_MEASURED_VALUE,
    249                ZCL_DATATYPE_INT16,
    250                ACCESS_CONTROL_READ,
    251                (void *)&zclSampleTemperatureSensor_MaxMeasuredValue
    252              }
    253            },
    254          
    255            {
    256              ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
    257              {  // Attribute record
    258                ATTRID_CLUSTER_REVISION,
    259                ZCL_DATATYPE_UINT16,
    260                ACCESS_CONTROL_READ,
    261                (void *)&zclSampleTemperatureSensor_clusterRevision_all
    262              }
    263            },
    264          };
    265          

   \                                 In  segment CODE_C, align 1
    266          uint8 CONST zclSampleTemperatureSensor_NumAttributes = ( sizeof(zclSampleTemperatureSensor_Attrs) / sizeof(zclSampleTemperatureSensor_Attrs[0]) );
   \                     zclSampleTemperatureSensor_NumAttributes:
   \   000000   10           DB 16
    267          
    268          /*********************************************************************
    269           * SIMPLE DESCRIPTOR
    270           */
    271          // This is the Cluster ID List and should be filled with Application
    272          // specific cluster IDs.
    273          #define ZCLSAMPLETEMPERATURESENSOR_MAX_INCLUSTERS       3

   \                                 In  segment XDATA_ROM_C, align 1
    274          const cId_t zclSampleTemperatureSensor_InClusterList[ZCLSAMPLETEMPERATURESENSOR_MAX_INCLUSTERS] =
   \                     zclSampleTemperatureSensor_InClusterList:
   \   000000   0000         DW 0
   \   000002   0300         DW 3
   \   000004   0204         DW 1026
    275          {
    276            ZCL_CLUSTER_ID_GEN_BASIC,
    277            ZCL_CLUSTER_ID_GEN_IDENTIFY,
    278            ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT
    279          };
    280          
    281          #define ZCLSAMPLETEMPERATURESENSOR_MAX_OUTCLUSTERS       1

   \                                 In  segment XDATA_ROM_C, align 1
    282          const cId_t zclSampleTemperatureSensor_OutClusterList[ZCLSAMPLETEMPERATURESENSOR_MAX_OUTCLUSTERS] =
   \                     zclSampleTemperatureSensor_OutClusterList:
   \   000000   0300         DW 3
    283          {
    284            ZCL_CLUSTER_ID_GEN_IDENTIFY
    285          };
    286          

   \                                 In  segment XDATA_I, align 1, keep-with-next
    287          SimpleDescriptionFormat_t zclSampleTemperatureSensor_SimpleDesc =
   \                     zclSampleTemperatureSensor_SimpleDesc:
   \   000000                DS 12
   \   00000C                REQUIRE `?<Initializer for zclSampleTemperatureSensor_S`
   \   00000C                REQUIRE __INIT_XDATA_I
    288          {
    289            SAMPLETEMPERATURESENSOR_ENDPOINT,                  //  int Endpoint;
    290            ZCL_HA_PROFILE_ID,                                 //  uint16 AppProfId[2];
    291            ZCL_HA_DEVICEID_TEMPERATURE_SENSOR,                //  uint16 AppDeviceId[2];
    292            SAMPLETEMPERATURESENSOR_DEVICE_VERSION,            //  int   AppDevVer:4;
    293            SAMPLETEMPERATURESENSOR_FLAGS,                     //  int   AppFlags:4;
    294            ZCLSAMPLETEMPERATURESENSOR_MAX_INCLUSTERS,         //  byte  AppNumInClusters;
    295            (cId_t *)zclSampleTemperatureSensor_InClusterList, //  byte *pAppInClusterList;
    296            ZCLSAMPLETEMPERATURESENSOR_MAX_OUTCLUSTERS,        //  byte  AppNumInClusters;
    297            (cId_t *)zclSampleTemperatureSensor_OutClusterList //  byte *pAppInClusterList;
    298          };
    299           
    300          /*********************************************************************
    301           * GLOBAL FUNCTIONS
    302           */
    303          
    304          /*********************************************************************
    305           * LOCAL FUNCTIONS
    306           */
    307          
    308          /*********************************************************************
    309           * @fn      zclSampleLight_ResetAttributesToDefaultValues
    310           *
    311           * @brief   Reset all writable attributes to their default values.
    312           *
    313           * @param   none
    314           *
    315           * @return  none
    316           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    317          void zclSampleTemperatureSensor_ResetAttributesToDefaultValues(void)
   \                     zclSampleTemperatureSensor_ResetAttributesToDefaultValues:
    318          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    319            int i;
    320            
    321            zclSampleTemperatureSensor_LocationDescription[0] = 16;
   \   000004   90....       MOV       DPTR,#zclSampleTemperatureSensor_LocationDescription
   \   000007   7410         MOV       A,#0x10
   \   000009   F0           MOVX      @DPTR,A
    322            for (i = 1; i <= 16; i++)
    323            {
    324              zclSampleTemperatureSensor_LocationDescription[i] = ' ';
   \   00000A   7420         MOV       A,#0x20
   \   00000C   A3           INC       DPTR
   \   00000D   7810         MOV       R0,#0x10
   \                     ??zclSampleTemperatureSensor_ResetAttributesToD_1:
   \   00000F   F0           MOVX      @DPTR,A
   \   000010   A3           INC       DPTR
   \   000011   D8FC         DJNZ      R0,??zclSampleTemperatureSensor_ResetAttributesToD_1
    325            }
    326            
    327            zclSampleTemperatureSensor_PhysicalEnvironment = PHY_UNSPECIFIED_ENV;
   \   000013   90....       MOV       DPTR,#zclSampleTemperatureSensor_PhysicalEnvironment
   \   000016   E4           CLR       A
   \   000017   F0           MOVX      @DPTR,A
    328            zclSampleTemperatureSensor_DeviceEnable = DEVICE_ENABLED;
   \   000018   90....       MOV       DPTR,#zclSampleTemperatureSensor_DeviceEnable
   \   00001B   04           INC       A
   \   00001C   F0           MOVX      @DPTR,A
    329            
    330          #ifdef ZCL_IDENTIFY
    331            zclSampleTemperatureSensor_IdentifyTime = 0;
   \   00001D   90....       MOV       DPTR,#zclSampleTemperatureSensor_IdentifyTime
   \   000020   E4           CLR       A
   \   000021   F0           MOVX      @DPTR,A
   \   000022   A3           INC       DPTR
   \   000023   F0           MOVX      @DPTR,A
    332          #endif
    333            
    334            zclSampleTemperatureSensor_MeasuredValue = SAMPLETEMPERATURESENSOR_MEASURED_VALUE;
   \   000024   90....       MOV       DPTR,#zclSampleTemperatureSensor_MeasuredValue
   \   000027   74D0         MOV       A,#-0x30
   \   000029   F0           MOVX      @DPTR,A
   \   00002A   A3           INC       DPTR
   \   00002B   7407         MOV       A,#0x7
   \   00002D   F0           MOVX      @DPTR,A
    335            
    336          }
   \   00002E   D083         POP       DPH
   \   000030   D082         POP       DPL
   \   000032   02....       LJMP      ?BRET

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclSampleTemperatureSensor_S`:
   \   000000   08           DB 8
   \   000001   0401         DW 260
   \   000003   0203         DW 770
   \   000005   00           DB 0
   \   000006   03           DB 3
   \   000007   ....         DW zclSampleTemperatureSensor_InClusterList
   \   000009   01           DB 1
   \   00000A   ....         DW zclSampleTemperatureSensor_OutClusterList
    337          
    338          /****************************************************************************
    339          ****************************************************************************/
    340          
    341          

   Maximum stack usage in bytes:

   ISTACK Function
   ------ --------
      2   zclSampleTemperatureSensor_ResetAttributesToDefaultValues


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Initializer for zclSampleTemperatureSensor_S
     128  zclSampleTemperatureSensor_Attrs
      17  zclSampleTemperatureSensor_DateCode
       1  zclSampleTemperatureSensor_DeviceEnable
       1  zclSampleTemperatureSensor_HWRevision
       2  zclSampleTemperatureSensor_IdentifyTime
       6  zclSampleTemperatureSensor_InClusterList
      17  zclSampleTemperatureSensor_LocationDescription
      17  zclSampleTemperatureSensor_ManufacturerName
       2  zclSampleTemperatureSensor_MaxMeasuredValue
       2  zclSampleTemperatureSensor_MeasuredValue
       2  zclSampleTemperatureSensor_MinMeasuredValue
      17  zclSampleTemperatureSensor_ModelId
       1  zclSampleTemperatureSensor_NumAttributes
       2  zclSampleTemperatureSensor_OutClusterList
       1  zclSampleTemperatureSensor_PhysicalEnvironment
       1  zclSampleTemperatureSensor_PowerSource
      53  zclSampleTemperatureSensor_ResetAttributesToDefaultValues
      12  zclSampleTemperatureSensor_SimpleDesc
       1  zclSampleTemperatureSensor_ZCLVersion
       2  zclSampleTemperatureSensor_clusterRevision_all
       6  -- Other

 
  53 bytes in segment BANKED_CODE
   6 bytes in segment BANK_RELAYS
 129 bytes in segment CODE_C
  12 bytes in segment XDATA_I
  12 bytes in segment XDATA_ID
  68 bytes in segment XDATA_ROM_C
  23 bytes in segment XDATA_Z
 
 147 bytes of CODE     memory
  68 bytes of CONST    memory
  53 bytes of HUGECODE memory
  35 bytes of XDATA    memory

Errors: none
Warnings: none
