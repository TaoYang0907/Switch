///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.30.1.6000 for 8051              15/Jul/2020  11:35:45
// Copyright 2004-2018 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\Source\zcl_sampletemperaturesensor_data.c
//    Command line       =  
//        -f C:\Users\sunli\AppData\Local\Temp\EW6DA.tmp ("D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\Source\zcl_sampletemperaturesensor_data.c"
//        -D BDB_REPORTING -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D
//        NV_RESTORE -D xZTOOL_P1 -D xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC
//        -D xMT_ZDO_FUNC -D xMT_APP_CNF_FUNC -D LCD_SUPPORTED=DEBUG -D
//        MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_DISCOVER -D ZCL_WRITE -D
//        ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_TEMPERATURE_MEASUREMENT -D
//        ZCL_GROUPS -lC "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\CoordinatorEB\List"
//        -lA "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\CoordinatorEB\List"
//        --diag_suppress Pe001,Pa010 -o "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\CoordinatorEB\Obj"
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DZDO_COORDINATOR -DRTR_NWK) -f "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0}
//        -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000
//        -DENABLE_LED4_DISABLE_S1) -f "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\Source\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\Source\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\bdb\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\gp\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -Ohz --require_prototypes)
//    Locale             =  Chinese (Simplified)_CHN.936
//    List file          =  
//        D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\CC2530DB\CoordinatorEB\List\zcl_sampletemperaturesensor_data.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME zcl_sampletemperaturesensor_data

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??zclSampleTemperatureSensor_ResetAttributesToD
        FUNCTION ??zclSampleTemperatureSensor_ResetAttributesToD,0203H
        PUBLIC zclSampleTemperatureSensor_Attrs
        PUBLIC zclSampleTemperatureSensor_DateCode
        PUBLIC zclSampleTemperatureSensor_DeviceEnable
        PUBLIC zclSampleTemperatureSensor_HWRevision
        PUBLIC zclSampleTemperatureSensor_IdentifyTime
        PUBLIC zclSampleTemperatureSensor_InClusterList
        PUBLIC zclSampleTemperatureSensor_LocationDescription
        PUBLIC zclSampleTemperatureSensor_ManufacturerName
        PUBLIC zclSampleTemperatureSensor_MaxMeasuredValue
        PUBLIC zclSampleTemperatureSensor_MeasuredValue
        PUBLIC zclSampleTemperatureSensor_MinMeasuredValue
        PUBLIC zclSampleTemperatureSensor_ModelId
        PUBLIC zclSampleTemperatureSensor_NumAttributes
        PUBLIC zclSampleTemperatureSensor_OutClusterList
        PUBLIC zclSampleTemperatureSensor_PhysicalEnvironment
        PUBLIC zclSampleTemperatureSensor_PowerSource
        PUBLIC zclSampleTemperatureSensor_ResetAttributesToDefaultValues
        FUNCTION zclSampleTemperatureSensor_ResetAttributesToDefaultValues,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC zclSampleTemperatureSensor_SimpleDesc
        PUBLIC zclSampleTemperatureSensor_ZCLVersion
        PUBLIC zclSampleTemperatureSensor_clusterRevision_all
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
zclSampleTemperatureSensor_ResetAttributesToDefaultValues SYMBOL "zclSampleTemperatureSensor_ResetAttributesToDefaultValues"
??zclSampleTemperatureSensor_ResetAttributesToD SYMBOL "?relay", zclSampleTemperatureSensor_ResetAttributesToDefaultValues

// D:\AA\Z-Stack 3.0.2\Projects\zstack\HomeAutomation\SampleTemperatureSensor\Source\zcl_sampletemperaturesensor_data.c
//    1 /**************************************************************************************************
//    2   Filename:       zcl_sampletemperaturesensor_data.c
//    3   Revised:        $Date: 2014-09-25 13:20:41 -0700 (Thu, 25 Sep 2014) $
//    4   Revision:       $Revision: 40295 $
//    5 
//    6 
//    7   Description:    Zigbee Cluster Library - sample device application.
//    8 
//    9 
//   10   Copyright 2013-2014 Texas Instruments Incorporated. All rights reserved.
//   11 
//   12   IMPORTANT: Your use of this Software is limited to those specific rights
//   13   granted under the terms of a software license agreement between the user
//   14   who downloaded the software, his/her employer (which must be your employer)
//   15   and Texas Instruments Incorporated (the "License").  You may not use this
//   16   Software unless you agree to abide by the terms of the License. The License
//   17   limits your use, and you acknowledge, that the Software may not be modified,
//   18   copied or distributed unless embedded on a Texas Instruments microcontroller
//   19   or used solely and exclusively in conjunction with a Texas Instruments radio
//   20   frequency transceiver, which is integrated into your product.  Other than for
//   21   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   22   works of, modify, distribute, perform, display or sell this Software and/or
//   23   its documentation for any purpose.
//   24 
//   25   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   26   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   27   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   28   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   29   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   30   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   31   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   32   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   33   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   34   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   35   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   36 
//   37   Should you have any questions regarding your right to use this Software,
//   38   contact Texas Instruments Incorporated at www.TI.com.
//   39 **************************************************************************************************/
//   40 
//   41 /*********************************************************************
//   42  * INCLUDES
//   43  */
//   44 #include "ZComDef.h"
//   45 #include "OSAL.h"
//   46 #include "AF.h"
//   47 #include "ZDConfig.h"
//   48 
//   49 #include "zcl.h"
//   50 #include "zcl_general.h"
//   51 #include "zcl_ha.h"
//   52 #include "zcl_ms.h"
//   53 
//   54 #include "zcl_sampletemperaturesensor.h"
//   55 
//   56 /*********************************************************************
//   57  * CONSTANTS
//   58  */
//   59 
//   60 #define SAMPLETEMPERATURESENSOR_DEVICE_VERSION     0
//   61 #define SAMPLETEMPERATURESENSOR_FLAGS              0
//   62 
//   63 #define SAMPLETEMPERATURESENSOR_HWVERSION          1
//   64 #define SAMPLETEMPERATURESENSOR_ZCLVERSION         1
//   65 
//   66 #define SAMPLETEMPERATURESENSOR_MAX_MEASURED_VALUE  2700  // 27.00C
//   67 #define SAMPLETEMPERATURESENSOR_MIN_MEASURED_VALUE  1700  // 17.00C
//   68 
//   69 #define SAMPLETEMPERATURESENSOR_MEASURED_VALUE      2000  // 20.00C
//   70 
//   71 /*********************************************************************
//   72  * TYPEDEFS
//   73  */
//   74 
//   75 /*********************************************************************
//   76  * MACROS
//   77  */
//   78 
//   79 /*********************************************************************
//   80  * GLOBAL VARIABLES
//   81  */
//   82 
//   83 // Global attributes

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//   84 const uint16 zclSampleTemperatureSensor_clusterRevision_all = 0x0001; 
zclSampleTemperatureSensor_clusterRevision_all:
        DW 1
//   85 
//   86 // Basic Cluster

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   87 const uint8 zclSampleTemperatureSensor_HWRevision = SAMPLETEMPERATURESENSOR_HWVERSION;
zclSampleTemperatureSensor_HWRevision:
        DB 1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   88 const uint8 zclSampleTemperatureSensor_ZCLVersion = SAMPLETEMPERATURESENSOR_ZCLVERSION;
zclSampleTemperatureSensor_ZCLVersion:
        DB 1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   89 const uint8 zclSampleTemperatureSensor_ManufacturerName[] = { 16, 'T','e','x','a','s','I','n','s','t','r','u','m','e','n','t','s' };
zclSampleTemperatureSensor_ManufacturerName:
        DB 16
        DB 84
        DB 101
        DB 120
        DB 97
        DB 115
        DB 73
        DB 110
        DB 115
        DB 116
        DB 114
        DB 117
        DB 109
        DB 101
        DB 110
        DB 116
        DB 115

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   90 const uint8 zclSampleTemperatureSensor_ModelId[] = { 16, 'T','I','0','0','0','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ' };
zclSampleTemperatureSensor_ModelId:
        DB 16
        DB 84
        DB 73
        DB 48
        DB 48
        DB 48
        DB 49
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   91 const uint8 zclSampleTemperatureSensor_DateCode[] = { 16, '2','0','0','6','0','8','3','1',' ',' ',' ',' ',' ',' ',' ',' ' };
zclSampleTemperatureSensor_DateCode:
        DB 16
        DB 50
        DB 48
        DB 48
        DB 54
        DB 48
        DB 56
        DB 51
        DB 49
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   92 const uint8 zclSampleTemperatureSensor_PowerSource = POWER_SOURCE_MAINS_1_PHASE;
zclSampleTemperatureSensor_PowerSource:
        DB 1
//   93 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   94 uint8 zclSampleTemperatureSensor_LocationDescription[17];
zclSampleTemperatureSensor_LocationDescription:
        DS 17
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   95 uint8 zclSampleTemperatureSensor_PhysicalEnvironment;
zclSampleTemperatureSensor_PhysicalEnvironment:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   96 uint8 zclSampleTemperatureSensor_DeviceEnable;
zclSampleTemperatureSensor_DeviceEnable:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   97 
//   98 // Identify Cluster

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   99 uint16 zclSampleTemperatureSensor_IdentifyTime;
zclSampleTemperatureSensor_IdentifyTime:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  100 
//  101 // Temperature Sensor Cluster

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  102 int16 zclSampleTemperatureSensor_MeasuredValue;
zclSampleTemperatureSensor_MeasuredValue:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//  103 const int16 zclSampleTemperatureSensor_MinMeasuredValue = SAMPLETEMPERATURESENSOR_MIN_MEASURED_VALUE; 
zclSampleTemperatureSensor_MinMeasuredValue:
        DW 1700

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//  104 const uint16 zclSampleTemperatureSensor_MaxMeasuredValue = SAMPLETEMPERATURESENSOR_MAX_MEASURED_VALUE;
zclSampleTemperatureSensor_MaxMeasuredValue:
        DW 2700
//  105 
//  106 /*********************************************************************
//  107  * ATTRIBUTE DEFINITIONS - Uses REAL cluster IDs
//  108  */
//  109 
//  110 // NOTE: The attributes listed in the AttrRec must be in ascending order 
//  111 // per cluster to allow right function of the Foundation discovery commands
//  112 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  113 CONST zclAttrRec_t zclSampleTemperatureSensor_Attrs[] =
zclSampleTemperatureSensor_Attrs:
        DATA16
        DW 0
        DW 0
        DATA8
        DB 32
        DB 1
        DATA16
        DW zclSampleTemperatureSensor_ZCLVersion
        DW 0
        DW 3
        DATA8
        DB 32
        DB 1
        DATA16
        DW zclSampleTemperatureSensor_HWRevision
        DW 0
        DW 4
        DATA8
        DB 66
        DB 1
        DATA16
        DW zclSampleTemperatureSensor_ManufacturerName
        DW 0
        DW 5
        DATA8
        DB 66
        DB 1
        DATA16
        DW zclSampleTemperatureSensor_ModelId
        DW 0
        DW 6
        DATA8
        DB 66
        DB 1
        DATA16
        DW zclSampleTemperatureSensor_DateCode
        DW 0
        DW 7
        DATA8
        DB 48
        DB 1
        DATA16
        DW zclSampleTemperatureSensor_PowerSource
        DW 0
        DW 16
        DATA8
        DB 66
        DB 3
        DATA16
        DW zclSampleTemperatureSensor_LocationDescription
        DW 0
        DW 17
        DATA8
        DB 48
        DB 3
        DATA16
        DW zclSampleTemperatureSensor_PhysicalEnvironment
        DW 0
        DW 18
        DATA8
        DB 16
        DB 3
        DATA16
        DW zclSampleTemperatureSensor_DeviceEnable
        DW 0
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleTemperatureSensor_clusterRevision_all
        DW 3
        DW 0
        DATA8
        DB 33
        DB 3
        DATA16
        DW zclSampleTemperatureSensor_IdentifyTime
        DW 3
        DW 65533
        DATA8
        DB 33
        DB 65
        DATA16
        DW zclSampleTemperatureSensor_clusterRevision_all
        DW 1026
        DW 0
        DATA8
        DB 41
        DB 5
        DATA16
        DW zclSampleTemperatureSensor_MeasuredValue
        DW 1026
        DW 1
        DATA8
        DB 41
        DB 1
        DATA16
        DW zclSampleTemperatureSensor_MinMeasuredValue
        DW 1026
        DW 2
        DATA8
        DB 41
        DB 1
        DATA16
        DW zclSampleTemperatureSensor_MaxMeasuredValue
        DW 1026
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleTemperatureSensor_clusterRevision_all
//  114 {
//  115   // *** General Basic Cluster Attributes ***
//  116   {
//  117     ZCL_CLUSTER_ID_GEN_BASIC,
//  118     { // Attribute record
//  119       ATTRID_BASIC_ZCL_VERSION,
//  120       ZCL_DATATYPE_UINT8,
//  121       ACCESS_CONTROL_READ,
//  122       (void *)&zclSampleTemperatureSensor_ZCLVersion
//  123     }
//  124   },
//  125   {
//  126     ZCL_CLUSTER_ID_GEN_BASIC,             // Cluster IDs - defined in the foundation (ie. zcl.h)
//  127     {  // Attribute record
//  128       ATTRID_BASIC_HW_VERSION,            // Attribute ID - Found in Cluster Library header (ie. zcl_general.h)
//  129       ZCL_DATATYPE_UINT8,                 // Data Type - found in zcl.h
//  130       ACCESS_CONTROL_READ,                // Variable access control - found in zcl.h
//  131       (void *)&zclSampleTemperatureSensor_HWRevision  // Pointer to attribute variable
//  132     }
//  133   },
//  134   {
//  135     ZCL_CLUSTER_ID_GEN_BASIC,
//  136     { // Attribute record
//  137       ATTRID_BASIC_MANUFACTURER_NAME,
//  138       ZCL_DATATYPE_CHAR_STR,
//  139       ACCESS_CONTROL_READ,
//  140       (void *)zclSampleTemperatureSensor_ManufacturerName
//  141     }
//  142   },
//  143   {
//  144     ZCL_CLUSTER_ID_GEN_BASIC,
//  145     { // Attribute record
//  146       ATTRID_BASIC_MODEL_ID,
//  147       ZCL_DATATYPE_CHAR_STR,
//  148       ACCESS_CONTROL_READ,
//  149       (void *)zclSampleTemperatureSensor_ModelId
//  150     }
//  151   },
//  152   {
//  153     ZCL_CLUSTER_ID_GEN_BASIC,
//  154     { // Attribute record
//  155       ATTRID_BASIC_DATE_CODE,
//  156       ZCL_DATATYPE_CHAR_STR,
//  157       ACCESS_CONTROL_READ,
//  158       (void *)zclSampleTemperatureSensor_DateCode
//  159     }
//  160   },
//  161   {
//  162     ZCL_CLUSTER_ID_GEN_BASIC,
//  163     { // Attribute record
//  164       ATTRID_BASIC_POWER_SOURCE,
//  165       ZCL_DATATYPE_ENUM8,
//  166       ACCESS_CONTROL_READ,
//  167       (void *)&zclSampleTemperatureSensor_PowerSource
//  168     }
//  169   },
//  170   {
//  171     ZCL_CLUSTER_ID_GEN_BASIC,
//  172     { // Attribute record
//  173       ATTRID_BASIC_LOCATION_DESC,
//  174       ZCL_DATATYPE_CHAR_STR,
//  175       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  176       (void *)zclSampleTemperatureSensor_LocationDescription
//  177     }
//  178   },
//  179   {
//  180     ZCL_CLUSTER_ID_GEN_BASIC,
//  181     { // Attribute record
//  182       ATTRID_BASIC_PHYSICAL_ENV,
//  183       ZCL_DATATYPE_ENUM8,
//  184       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  185       (void *)&zclSampleTemperatureSensor_PhysicalEnvironment
//  186     }
//  187   },
//  188   {
//  189     ZCL_CLUSTER_ID_GEN_BASIC,
//  190     { // Attribute record
//  191       ATTRID_BASIC_DEVICE_ENABLED,
//  192       ZCL_DATATYPE_BOOLEAN,
//  193       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  194       (void *)&zclSampleTemperatureSensor_DeviceEnable
//  195     }
//  196   },
//  197   {
//  198     ZCL_CLUSTER_ID_GEN_BASIC,
//  199     {  // Attribute record
//  200       ATTRID_CLUSTER_REVISION,
//  201       ZCL_DATATYPE_UINT16,
//  202       ACCESS_CONTROL_READ,
//  203       (void *)&zclSampleTemperatureSensor_clusterRevision_all
//  204     }
//  205   },
//  206   // *** Identify Cluster Attribute ***
//  207   {
//  208     ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  209     { // Attribute record
//  210       ATTRID_IDENTIFY_TIME,
//  211       ZCL_DATATYPE_UINT16,
//  212       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  213       (void *)&zclSampleTemperatureSensor_IdentifyTime
//  214     }
//  215   },
//  216   {
//  217     ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  218     {  // Attribute record
//  219       ATTRID_CLUSTER_REVISION,
//  220       ZCL_DATATYPE_UINT16,
//  221       ACCESS_CONTROL_READ | ACCESS_GLOBAL,
//  222       (void *)&zclSampleTemperatureSensor_clusterRevision_all
//  223     }
//  224   },
//  225 
//  226   // *** Temperature Measurement Attriubtes ***
//  227   {
//  228     ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
//  229     { // Attribute record
//  230       ATTRID_MS_TEMPERATURE_MEASURED_VALUE,
//  231       ZCL_DATATYPE_INT16,
//  232       ACCESS_CONTROL_READ | ACCESS_REPORTABLE,
//  233       (void *)&zclSampleTemperatureSensor_MeasuredValue
//  234     }
//  235   },
//  236   {
//  237     ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
//  238     { // Attribute record
//  239       ATTRID_MS_TEMPERATURE_MIN_MEASURED_VALUE,
//  240       ZCL_DATATYPE_INT16,
//  241       ACCESS_CONTROL_READ,
//  242       (void *)&zclSampleTemperatureSensor_MinMeasuredValue
//  243     }
//  244   },
//  245   {
//  246     ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
//  247     { // Attribute record
//  248       ATTRID_MS_TEMPERATURE_MAX_MEASURED_VALUE,
//  249       ZCL_DATATYPE_INT16,
//  250       ACCESS_CONTROL_READ,
//  251       (void *)&zclSampleTemperatureSensor_MaxMeasuredValue
//  252     }
//  253   },
//  254 
//  255   {
//  256     ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
//  257     {  // Attribute record
//  258       ATTRID_CLUSTER_REVISION,
//  259       ZCL_DATATYPE_UINT16,
//  260       ACCESS_CONTROL_READ,
//  261       (void *)&zclSampleTemperatureSensor_clusterRevision_all
//  262     }
//  263   },
//  264 };
//  265 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  266 uint8 CONST zclSampleTemperatureSensor_NumAttributes = ( sizeof(zclSampleTemperatureSensor_Attrs) / sizeof(zclSampleTemperatureSensor_Attrs[0]) );
zclSampleTemperatureSensor_NumAttributes:
        DB 16
//  267 
//  268 /*********************************************************************
//  269  * SIMPLE DESCRIPTOR
//  270  */
//  271 // This is the Cluster ID List and should be filled with Application
//  272 // specific cluster IDs.
//  273 #define ZCLSAMPLETEMPERATURESENSOR_MAX_INCLUSTERS       3

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  274 const cId_t zclSampleTemperatureSensor_InClusterList[ZCLSAMPLETEMPERATURESENSOR_MAX_INCLUSTERS] =
zclSampleTemperatureSensor_InClusterList:
        DATA16
        DW 0
        DW 3
        DW 1026
//  275 {
//  276   ZCL_CLUSTER_ID_GEN_BASIC,
//  277   ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  278   ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT
//  279 };
//  280 
//  281 #define ZCLSAMPLETEMPERATURESENSOR_MAX_OUTCLUSTERS       1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//  282 const cId_t zclSampleTemperatureSensor_OutClusterList[ZCLSAMPLETEMPERATURESENSOR_MAX_OUTCLUSTERS] =
zclSampleTemperatureSensor_OutClusterList:
        DW 3
//  283 {
//  284   ZCL_CLUSTER_ID_GEN_IDENTIFY
//  285 };
//  286 

        RSEG XDATA_I:XDATA:NOROOT(0)
//  287 SimpleDescriptionFormat_t zclSampleTemperatureSensor_SimpleDesc =
zclSampleTemperatureSensor_SimpleDesc:
        DATA8
        DS 12
        REQUIRE `?<Initializer for zclSampleTemperatureSensor_S`
        REQUIRE __INIT_XDATA_I
//  288 {
//  289   SAMPLETEMPERATURESENSOR_ENDPOINT,                  //  int Endpoint;
//  290   ZCL_HA_PROFILE_ID,                                 //  uint16 AppProfId[2];
//  291   ZCL_HA_DEVICEID_TEMPERATURE_SENSOR,                //  uint16 AppDeviceId[2];
//  292   SAMPLETEMPERATURESENSOR_DEVICE_VERSION,            //  int   AppDevVer:4;
//  293   SAMPLETEMPERATURESENSOR_FLAGS,                     //  int   AppFlags:4;
//  294   ZCLSAMPLETEMPERATURESENSOR_MAX_INCLUSTERS,         //  byte  AppNumInClusters;
//  295   (cId_t *)zclSampleTemperatureSensor_InClusterList, //  byte *pAppInClusterList;
//  296   ZCLSAMPLETEMPERATURESENSOR_MAX_OUTCLUSTERS,        //  byte  AppNumInClusters;
//  297   (cId_t *)zclSampleTemperatureSensor_OutClusterList //  byte *pAppInClusterList;
//  298 };
//  299  
//  300 /*********************************************************************
//  301  * GLOBAL FUNCTIONS
//  302  */
//  303 
//  304 /*********************************************************************
//  305  * LOCAL FUNCTIONS
//  306  */
//  307 
//  308 /*********************************************************************
//  309  * @fn      zclSampleLight_ResetAttributesToDefaultValues
//  310  *
//  311  * @brief   Reset all writable attributes to their default values.
//  312  *
//  313  * @param   none
//  314  *
//  315  * @return  none
//  316  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  317 void zclSampleTemperatureSensor_ResetAttributesToDefaultValues(void)
zclSampleTemperatureSensor_ResetAttributesToDefaultValues:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function zclSampleTemperatureSensor_ResetAttributesToDefaultValues
        CODE
//  318 {
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  319   int i;
//  320   
//  321   zclSampleTemperatureSensor_LocationDescription[0] = 16;
        MOV       DPTR,#zclSampleTemperatureSensor_LocationDescription
        MOV       A,#0x10
        MOVX      @DPTR,A
//  322   for (i = 1; i <= 16; i++)
//  323   {
//  324     zclSampleTemperatureSensor_LocationDescription[i] = ' ';
        MOV       A,#0x20
        INC       DPTR
        MOV       R0,#0x10
??zclSampleTemperatureSensor_ResetAttributesToD_1:
        MOVX      @DPTR,A
        INC       DPTR
        DJNZ      R0,??zclSampleTemperatureSensor_ResetAttributesToD_1
//  325   }
//  326   
//  327   zclSampleTemperatureSensor_PhysicalEnvironment = PHY_UNSPECIFIED_ENV;
        MOV       DPTR,#zclSampleTemperatureSensor_PhysicalEnvironment
        CLR       A
        MOVX      @DPTR,A
//  328   zclSampleTemperatureSensor_DeviceEnable = DEVICE_ENABLED;
        MOV       DPTR,#zclSampleTemperatureSensor_DeviceEnable
        INC       A
        MOVX      @DPTR,A
//  329   
//  330 #ifdef ZCL_IDENTIFY
//  331   zclSampleTemperatureSensor_IdentifyTime = 0;
        MOV       DPTR,#zclSampleTemperatureSensor_IdentifyTime
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  332 #endif
//  333   
//  334   zclSampleTemperatureSensor_MeasuredValue = SAMPLETEMPERATURESENSOR_MEASURED_VALUE;
        MOV       DPTR,#zclSampleTemperatureSensor_MeasuredValue
        MOV       A,#-0x30
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#0x7
        MOVX      @DPTR,A
//  335   
//  336 }
        POP       DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP       DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP      ?BRET
          CFI EndBlock cfiBlock0

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zclSampleTemperatureSensor_S`:
        DATA8
        DB 8
        DATA16
        DW 260
        DW 770
        DATA8
        DB 0
        DB 3
        DATA16
        DW zclSampleTemperatureSensor_InClusterList
        DATA8
        DB 1
        DATA16
        DW zclSampleTemperatureSensor_OutClusterList

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclSampleTemperatureSensor_ResetAttributesToD:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclSampleTemperatureSensor_ResetAttributesToDefaultValues

        END
//  337 
//  338 /****************************************************************************
//  339 ****************************************************************************/
//  340 
//  341 
// 
//  53 bytes in segment BANKED_CODE
//   6 bytes in segment BANK_RELAYS
// 129 bytes in segment CODE_C
//  12 bytes in segment XDATA_I
//  12 bytes in segment XDATA_ID
//  68 bytes in segment XDATA_ROM_C
//  23 bytes in segment XDATA_Z
// 
// 147 bytes of CODE     memory
//  68 bytes of CONST    memory
//  53 bytes of HUGECODE memory
//  35 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
