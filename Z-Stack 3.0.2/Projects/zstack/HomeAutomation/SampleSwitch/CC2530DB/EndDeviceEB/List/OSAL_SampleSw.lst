###############################################################################
#
# IAR C/C++ Compiler V10.30.1.6000 for 8051               31/Jul/2020  16:02:09
# Copyright 2004-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\Source\OSAL_SampleSw.c
#    Command line       =  
#        -f C:\Users\sunli\AppData\Local\Temp\EW1DF.tmp ("D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\Source\OSAL_SampleSw.c"
#        -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D
#        POWER_SAVING -D NWK_AUTO_POLL -D xZTOOL_P1 -D xMT_TASK -D xMT_APP_FUNC
#        -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D xMT_ZDO_MGMT -D xMT_APP_CNF_FUNC -D
#        LCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D ZCL_READ -D
#        ZCL_DISCOVER -D ZCL_WRITE -D ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_ON_OFF
#        -D ZCL_GROUPS -D BDB_TL_INITIATOR -D INTER_PAN -lC "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\EndDeviceEB\List"
#        -lA "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\EndDeviceEB\List"
#        --diag_suppress Pe001,Pa010 -o "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\EndDeviceEB\Obj"
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 16 -f "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg"
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
#        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0} -DMAC_MAX_FRAME_SIZE=116
#        -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const __code"
#        -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=0
#        -DQUEUED_POLL_RATE=0 -DRESPONSE_POLL_RATE=0 -DREJOIN_POLL_RATE=0
#        -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000 -DENABLE_LED4_DISABLE_S1)
#        -f "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\" -I
#        "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\Source\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\Source\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\ZMain\TI2530DB\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\include\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\include\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mt\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\osal\include\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\services\saddr\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\services\sdata\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\af\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\bdb\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\gp\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sec\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sys\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\zmac\"
#        -I "D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
#        -On --require_prototypes --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_cross_call)
#    Locale             =  Chinese (Simplified)_CHN.936
#    List file          =  
#        D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\EndDeviceEB\List\OSAL_SampleSw.lst
#    Object file        =  
#        D:\AA\Z-Stack
#        3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\EndDeviceEB\Obj\OSAL_SampleSw.r51
#
###############################################################################

D:\AA\Z-Stack 3.0.2\Projects\zstack\HomeAutomation\SampleSwitch\Source\OSAL_SampleSw.c
      1          /**************************************************************************************************
      2            Filename:       OSAL_SampleSw.c
      3            Revised:        $Date: 2014-06-03 16:29:28 -0700 (Tue, 03 Jun 2014) $
      4            Revision:       $Revision: 38778 $
      5          
      6            Description:    This file contains all the settings and other functions
      7                            that the user should set and change.
      8          
      9          
     10            Copyright 2006-2014 Texas Instruments Incorporated. All rights reserved.
     11          
     12            IMPORTANT: Your use of this Software is limited to those specific rights
     13            granted under the terms of a software license agreement between the user
     14            who downloaded the software, his/her employer (which must be your employer)
     15            and Texas Instruments Incorporated (the "License").  You may not use this
     16            Software unless you agree to abide by the terms of the License. The License
     17            limits your use, and you acknowledge, that the Software may not be modified,
     18            copied or distributed unless embedded on a Texas Instruments microcontroller
     19            or used solely and exclusively in conjunction with a Texas Instruments radio
     20            frequency transceiver, which is integrated into your product.  Other than for
     21            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     22            works of, modify, distribute, perform, display or sell this Software and/or
     23            its documentation for any purpose.
     24          
     25            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     26            PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     27            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     28            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     29            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     30            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     31            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     32            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     33            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     34            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     35            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     36          
     37            Should you have any questions regarding your right to use this Software,
     38            contact Texas Instruments Incorporated at www.TI.com.
     39          **************************************************************************************************/
     40          
     41          /*********************************************************************
     42           * INCLUDES
     43           */
     44          
     45          #include "ZComDef.h"
     46          #include "hal_drivers.h"
     47          #include "OSAL.h"
     48          #include "OSAL_Tasks.h"
     49          
     50          #if defined ( MT_TASK )
     51            #include "MT.h"
     52            #include "MT_TASK.h"
     53          #endif
     54          
     55          #include "nwk.h"
     56          #include "APS.h"
     57          #include "ZDApp.h"
     58          
     59          #include "bdb_interface.h"
     60          
     61          #if !defined (DISABLE_GREENPOWER_BASIC_PROXY) && (ZG_BUILD_RTR_TYPE)
     62            #include "gp_common.h"
     63          #endif   
     64          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
     65            #include "ZDNwkMgr.h"
     66          #endif
     67          #if defined ( ZIGBEE_FRAGMENTATION )
     68            #include "aps_frag.h"
     69          #endif
     70          
     71          #if defined ( INTER_PAN )
     72            #include "stub_aps.h"
     73          #if defined ( BDB_TL_INITIATOR )
     74            #include "bdb_touchlink_initiator.h"
     75          #endif // BDB_TL_INITIATOR
     76          #if defined ( BDB_TL_TARGET )
     77            #include "bdb_touchlink_target.h"
     78          #endif // BDB_TL_TARGET
     79          #endif // INTER_PAN
     80          
     81          #include "zcl_samplesw.h"
     82          
     83          #if (defined OTA_CLIENT) && (OTA_CLIENT == TRUE)
     84            #include "zcl_ota.h"
     85          #endif
     86          /*********************************************************************
     87           * GLOBAL VARIABLES
     88           */
     89          
     90          // The order in this table must be identical to the task initialization calls below in osalInitTask.

   \                                 In  segment XDATA_ROM_C, align 1
     91          const pTaskEventHandlerFn tasksArr[] = {
   \                     tasksArr:
   \   000000   ....         DW `??macEventLoop::?relay`
   \   000002   ....         DW `??nwk_event_loop::?relay`
   \   000004   ....         DW `??Hal_ProcessEvent::?relay`
   \   000006   ....         DW `??APS_event_loop::?relay`
   \   000008   ....         DW `??APSF_ProcessEvent::?relay`
   \   00000A   ....         DW `??ZDApp_event_loop::?relay`
   \   00000C   ....         DW `??StubAPS_ProcessEvent::?relay`
   \   00000E   ....         DW `??touchLinkInitiator_event_loop::?relay`
   \   000010   ....         DW `??zcl_event_loop::?relay`
   \   000012   ....         DW `??bdb_event_loop::?relay`
   \   000014   ....         DW `??zclSampleSw_event_loop::?relay`
     92            macEventLoop,
     93            nwk_event_loop,
     94          #if !defined (DISABLE_GREENPOWER_BASIC_PROXY) && (ZG_BUILD_RTR_TYPE)
     95            gp_event_loop,
     96          #endif  
     97            Hal_ProcessEvent,
     98          #if defined( MT_TASK )
     99            MT_ProcessEvent,
    100          #endif
    101            APS_event_loop,
    102          #if defined ( ZIGBEE_FRAGMENTATION )
    103            APSF_ProcessEvent,
    104          #endif
    105            ZDApp_event_loop,
    106          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
    107            ZDNwkMgr_event_loop,
    108          #endif
    109            //Added to include TouchLink functionality
    110            #if defined ( INTER_PAN )
    111              StubAPS_ProcessEvent,
    112            #endif
    113            // Added to include TouchLink initiator functionality
    114            #if defined ( BDB_TL_INITIATOR )
    115              touchLinkInitiator_event_loop,
    116            #endif
    117            // Added to include TouchLink target functionality
    118            #if defined ( BDB_TL_TARGET )
    119              touchLinkTarget_event_loop,
    120            #endif
    121            zcl_event_loop,
    122            bdb_event_loop,
    123            zclSampleSw_event_loop,
    124          #if (defined OTA_CLIENT) && (OTA_CLIENT == TRUE)
    125            zclOTA_event_loop
    126          #endif
    127          };
    128          

   \                                 In  segment XDATA_ROM_C, align 1
    129          const uint8 tasksCnt = sizeof( tasksArr ) / sizeof( tasksArr[0] );
   \                     tasksCnt:
   \   000000   0B           DB 11

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    130          uint16 *tasksEvents;
   \                     tasksEvents:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    131          
    132          /*********************************************************************
    133           * FUNCTIONS
    134           *********************************************************************/
    135          
    136          /*********************************************************************
    137           * @fn      osalInitTasks
    138           *
    139           * @brief   This function invokes the initialization function for each task.
    140           *
    141           * @param   void
    142           *
    143           * @return  none
    144           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    145          void osalInitTasks( void )
   \                     osalInitTasks:
    146          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    147            uint8 taskID = 0;
   \   000005   7E00         MOV       R6,#0x0
    148          
    149            tasksEvents = (uint16 *)osal_mem_alloc( sizeof( uint16 ) * tasksCnt);
   \   000007                ; Setup parameters for call to function osal_mem_alloc
   \   000007   90....       MOV       DPTR,#tasksCnt
   \   00000A   E0           MOVX      A,@DPTR
   \   00000B   FA           MOV       R2,A
   \   00000C   7B00         MOV       R3,#0x0
   \   00000E   EA           MOV       A,R2
   \   00000F   75F002       MOV       B,#0x2
   \   000012   A4           MUL       AB
   \   000013   CA           XCH       A,R2
   \   000014   A8F0         MOV       R0,B
   \   000016   75F000       MOV       B,#0x0
   \   000019   A4           MUL       AB
   \   00001A   28           ADD       A,R0
   \   00001B   F8           MOV       R0,A
   \   00001C   75F002       MOV       B,#0x2
   \   00001F   EB           MOV       A,R3
   \   000020   A4           MUL       AB
   \   000021   28           ADD       A,R0
   \   000022   FB           MOV       R3,A
   \   000023   12....       LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   000026   90....       MOV       DPTR,#tasksEvents
   \   000029   EA           MOV       A,R2
   \   00002A   F0           MOVX      @DPTR,A
   \   00002B   A3           INC       DPTR
   \   00002C   EB           MOV       A,R3
   \   00002D   F0           MOVX      @DPTR,A
    150            osal_memset( tasksEvents, 0, (sizeof( uint16 ) * tasksCnt));
   \   00002E                ; Setup parameters for call to function osal_memset
   \   00002E   90....       MOV       DPTR,#tasksCnt
   \   000031   E0           MOVX      A,@DPTR
   \   000032   FC           MOV       R4,A
   \   000033   7D00         MOV       R5,#0x0
   \   000035   EC           MOV       A,R4
   \   000036   75F002       MOV       B,#0x2
   \   000039   A4           MUL       AB
   \   00003A   CC           XCH       A,R4
   \   00003B   A8F0         MOV       R0,B
   \   00003D   75F000       MOV       B,#0x0
   \   000040   A4           MUL       AB
   \   000041   28           ADD       A,R0
   \   000042   F8           MOV       R0,A
   \   000043   75F002       MOV       B,#0x2
   \   000046   ED           MOV       A,R5
   \   000047   A4           MUL       AB
   \   000048   28           ADD       A,R0
   \   000049   FD           MOV       R5,A
   \   00004A   7900         MOV       R1,#0x0
   \   00004C   90....       MOV       DPTR,#tasksEvents
   \   00004F   E0           MOVX      A,@DPTR
   \   000050   FA           MOV       R2,A
   \   000051   A3           INC       DPTR
   \   000052   E0           MOVX      A,@DPTR
   \   000053   FB           MOV       R3,A
   \   000054   12....       LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
    151          
    152            macTaskInit( taskID++ );
   \   000057                ; Setup parameters for call to function macTaskInit
   \   000057   EE           MOV       A,R6
   \   000058   F9           MOV       R1,A
   \   000059   12....       LCALL     `??macTaskInit::?relay`; Banked call to: macTaskInit
   \   00005C   0E           INC       R6
    153            nwk_init( taskID++ );
   \   00005D                ; Setup parameters for call to function nwk_init
   \   00005D   EE           MOV       A,R6
   \   00005E   F9           MOV       R1,A
   \   00005F   12....       LCALL     `??nwk_init::?relay`; Banked call to: nwk_init
   \   000062   0E           INC       R6
    154          #if !defined (DISABLE_GREENPOWER_BASIC_PROXY) && (ZG_BUILD_RTR_TYPE)
    155            gp_Init( taskID++ );
    156          #endif
    157            Hal_Init( taskID++ );
   \   000063                ; Setup parameters for call to function Hal_Init
   \   000063   EE           MOV       A,R6
   \   000064   F9           MOV       R1,A
   \   000065   12....       LCALL     `??Hal_Init::?relay`; Banked call to: Hal_Init
   \   000068   0E           INC       R6
    158          #if defined( MT_TASK )
    159            MT_TaskInit( taskID++ );
    160          #endif
    161            APS_Init( taskID++ );
   \   000069                ; Setup parameters for call to function APS_Init
   \   000069   EE           MOV       A,R6
   \   00006A   F9           MOV       R1,A
   \   00006B   12....       LCALL     `??APS_Init::?relay`; Banked call to: APS_Init
   \   00006E   0E           INC       R6
    162          #if defined ( ZIGBEE_FRAGMENTATION )
    163            APSF_Init( taskID++ );
   \   00006F                ; Setup parameters for call to function APSF_Init
   \   00006F   EE           MOV       A,R6
   \   000070   F9           MOV       R1,A
   \   000071   12....       LCALL     `??APSF_Init::?relay`; Banked call to: APSF_Init
   \   000074   0E           INC       R6
    164          #endif
    165            ZDApp_Init( taskID++ );
   \   000075                ; Setup parameters for call to function ZDApp_Init
   \   000075   EE           MOV       A,R6
   \   000076   F9           MOV       R1,A
   \   000077   12....       LCALL     `??ZDApp_Init::?relay`; Banked call to: ZDApp_Init
   \   00007A   0E           INC       R6
    166          #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
    167            ZDNwkMgr_Init( taskID++ );
    168          #endif
    169            // Added to include TouchLink functionality 
    170            #if defined ( INTER_PAN )
    171              StubAPS_Init( taskID++ );
   \   00007B                ; Setup parameters for call to function StubAPS_Init
   \   00007B   EE           MOV       A,R6
   \   00007C   F9           MOV       R1,A
   \   00007D   12....       LCALL     `??StubAPS_Init::?relay`; Banked call to: StubAPS_Init
   \   000080   0E           INC       R6
    172            #endif
    173            // Added to include TouchLink initiator functionality 
    174            #if defined( BDB_TL_INITIATOR )
    175              touchLinkInitiator_Init( taskID++ );
   \   000081                ; Setup parameters for call to function touchLinkInitiator_Init
   \   000081   EE           MOV       A,R6
   \   000082   F9           MOV       R1,A
   \   000083   12....       LCALL     `??touchLinkInitiator_Init::?relay`; Banked call to: touchLinkInitiator_Init
   \   000086   0E           INC       R6
    176            #endif
    177            // Added to include TouchLink target functionality 
    178            #if defined ( BDB_TL_TARGET )
    179              touchLinkTarget_Init( taskID++ );
    180            #endif
    181            zcl_Init( taskID++ );
   \   000087                ; Setup parameters for call to function zcl_Init
   \   000087   EE           MOV       A,R6
   \   000088   F9           MOV       R1,A
   \   000089   12....       LCALL     `??zcl_Init::?relay`; Banked call to: zcl_Init
   \   00008C   0E           INC       R6
    182            bdb_Init( taskID++ );
   \   00008D                ; Setup parameters for call to function bdb_Init
   \   00008D   EE           MOV       A,R6
   \   00008E   F9           MOV       R1,A
   \   00008F   12....       LCALL     `??bdb_Init::?relay`; Banked call to: bdb_Init
   \   000092   0E           INC       R6
    183            zclSampleSw_Init( taskID++ );
   \   000093                ; Setup parameters for call to function zclSampleSw_Init
   \   000093   EE           MOV       A,R6
   \   000094   F9           MOV       R1,A
   \   000095   12....       LCALL     `??zclSampleSw_Init::?relay`; Banked call to: zclSampleSw_Init
   \   000098   0E           INC       R6
    184          #if (defined OTA_CLIENT) && (OTA_CLIENT == TRUE)
    185            zclOTA_Init( taskID );
    186          #endif
    187          }
   \   000099   7F01         MOV       R7,#0x1
   \   00009B   02....       LJMP      ?BANKED_LEAVE_XDATA
    188          
    189          /*********************************************************************
    190          *********************************************************************/

   Maximum stack usage in bytes:

   XSTACK Function
   ------ --------
      9   osalInitTasks
        9   -> APSF_Init
        9   -> APS_Init
        9   -> Hal_Init
        9   -> StubAPS_Init
        9   -> ZDApp_Init
        9   -> bdb_Init
        9   -> macTaskInit
        9   -> nwk_init
        9   -> osal_mem_alloc
        9   -> osal_memset
        9   -> touchLinkInitiator_Init
        9   -> zclSampleSw_Init
        9   -> zcl_Init


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
     158  osalInitTasks
      22  tasksArr
       1  tasksCnt
       2  tasksEvents
       6  -- Other

 
 158 bytes in segment BANKED_CODE
   6 bytes in segment BANK_RELAYS
  23 bytes in segment XDATA_ROM_C
   2 bytes in segment XDATA_Z
 
   6 bytes of CODE     memory
  23 bytes of CONST    memory
 158 bytes of HUGECODE memory
   2 bytes of XDATA    memory

Errors: none
Warnings: none
