///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.30.1.6000 for 8051              20/Jul/2020  22:28:22
// Copyright 2004-2018 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        D:\AA\Z-Stack 3.0.2\Components\stack\zcl\zcl_general.c
//    Command line       =  
//        -f C:\Users\sunli\AppData\Local\Temp\EWB54D.tmp ("D:\AA\Z-Stack
//        3.0.2\Components\stack\zcl\zcl_general.c" -D BDB_REPORTING -D
//        SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D xZTOOL_P1 -D
//        xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D
//        xMT_ZDO_MGMT -D xMT_APP_CNF_FUNC -D LCD_SUPPORTED=DEBUG -D
//        MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_DISCOVER -D ZCL_WRITE -D
//        ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_ON_OFF -D ZCL_SCENES -D ZCL_GROUPS
//        -D ZCL_LEVEL_CTRL -lC "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\CoordinatorEB\List"
//        -lA "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\CoordinatorEB\List"
//        --diag_suppress Pe001,Pa010 -o "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\CoordinatorEB\Obj"
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DZDO_COORDINATOR -DRTR_NWK) -f "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0}
//        -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000
//        -DENABLE_LED4_DISABLE_S1) -f "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\" -I
//        "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\Source\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\Source\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\bdb\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\gp\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -Ohz --require_prototypes)
//    Locale             =  Chinese (Simplified)_CHN.936
//    List file          =  
//        D:\AA\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\CoordinatorEB\List\zcl_general.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME zcl_general

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V1
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V8
        EXTERN ?V9
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?V14
        EXTERN ?V15
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?US_DIV_MOD
        EXTERN ?US_SWITCH_DENSE
        EXTERN ?VB
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP100_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN __INIT_XDATA_Z

        FUNCTION `??zclGeneral_AddGroup::?relay`,0203H
        PUBLIC `??zclGeneral_AddScene::?relay`
        FUNCTION `??zclGeneral_AddScene::?relay`,0203H
        PUBLIC `??zclGeneral_CountAllScenes::?relay`
        FUNCTION `??zclGeneral_CountAllScenes::?relay`,0203H
        PUBLIC `??zclGeneral_CountScenes::?relay`
        FUNCTION `??zclGeneral_CountScenes::?relay`,0203H
        PUBLIC `??zclGeneral_FindAllScenesForGroup::?relay`
        FUNCTION `??zclGeneral_FindAllScenesForGroup::?relay`,0203H
        PUBLIC `??zclGeneral_FindScene::?relay`
        FUNCTION `??zclGeneral_FindScene::?relay`,0203H
        FUNCTION `??zclGeneral_HdlInSpecificCommands::?relay`,0203H
        FUNCTION `??zclGeneral_HdlIncoming::?relay`,0203H
        FUNCTION `??zclGeneral_ProcessInGroupsClient::?relay`,0203H
        FUNCTION `??zclGeneral_ProcessInGroupsServer::?relay`,0203H
        FUNCTION `??zclGeneral_ProcessInIdentity::?relay`,0203H
        FUNCTION `??zclGeneral_ProcessInLevelControl::?relay`,0203H
        FUNCTION `??zclGeneral_ProcessInScenesClient::?relay`,0203H
        FUNCTION `??zclGeneral_ProcessInScenesServer::?relay`,0203H
        PUBLIC `??zclGeneral_ReadSceneCountCB::?relay`
        FUNCTION `??zclGeneral_ReadSceneCountCB::?relay`,0203H
        PUBLIC `??zclGeneral_RegisterCmdCallbacks::?relay`
        FUNCTION `??zclGeneral_RegisterCmdCallbacks::?relay`,0203H
        PUBLIC `??zclGeneral_RemoveAllScenes::?relay`
        FUNCTION `??zclGeneral_RemoveAllScenes::?relay`,0203H
        PUBLIC `??zclGeneral_RemoveScene::?relay`
        FUNCTION `??zclGeneral_RemoveScene::?relay`,0203H
        PUBLIC `??zclGeneral_ScenesInit::?relay`
        FUNCTION `??zclGeneral_ScenesInit::?relay`,0203H
        PUBLIC `??zclGeneral_ScenesSave::?relay`
        FUNCTION `??zclGeneral_ScenesSave::?relay`,0203H
        FUNCTION `??zclGeneral_ScenesWriteNV::?relay`,0203H
        PUBLIC `??zclGeneral_SendAddGroupRequest::?relay`
        FUNCTION `??zclGeneral_SendAddGroupRequest::?relay`,0203H
        PUBLIC `??zclGeneral_SendAddSceneRequest::?relay`
        FUNCTION `??zclGeneral_SendAddSceneRequest::?relay`,0203H
        PUBLIC `??zclGeneral_SendGroupGetMembershipRequest::?re`
        FUNCTION `??zclGeneral_SendGroupGetMembershipRequest::?re`,0203H
        PUBLIC `??zclGeneral_SendGroupRequest::?relay`
        FUNCTION `??zclGeneral_SendGroupRequest::?relay`,0203H
        PUBLIC `??zclGeneral_SendGroupResponse::?relay`
        FUNCTION `??zclGeneral_SendGroupResponse::?relay`,0203H
        PUBLIC `??zclGeneral_SendGroupViewResponse::?relay`
        FUNCTION `??zclGeneral_SendGroupViewResponse::?relay`,0203H
        PUBLIC `??zclGeneral_SendIdentify::?relay`
        FUNCTION `??zclGeneral_SendIdentify::?relay`,0203H
        PUBLIC `??zclGeneral_SendIdentifyEZModeInvoke::?relay`
        FUNCTION `??zclGeneral_SendIdentifyEZModeInvoke::?relay`,0203H
        PUBLIC `??zclGeneral_SendIdentifyQueryResponse::?relay`
        FUNCTION `??zclGeneral_SendIdentifyQueryResponse::?relay`,0203H
        PUBLIC `??zclGeneral_SendIdentifyUpdateCommState::?rela`
        FUNCTION `??zclGeneral_SendIdentifyUpdateCommState::?rela`,0203H
        PUBLIC `??zclGeneral_SendLevelControlMoveRequest::?rela`
        FUNCTION `??zclGeneral_SendLevelControlMoveRequest::?rela`,0203H
        PUBLIC ??zclGeneral_SendLevelControlMoveToLevelRequest
        FUNCTION ??zclGeneral_SendLevelControlMoveToLevelRequest,0203H
        PUBLIC `??zclGeneral_SendLevelControlStepRequest::?rela`
        FUNCTION `??zclGeneral_SendLevelControlStepRequest::?rela`,0203H
        PUBLIC `??zclGeneral_SendLevelControlStopRequest::?rela`
        FUNCTION `??zclGeneral_SendLevelControlStopRequest::?rela`,0203H
        PUBLIC `??zclGeneral_SendSceneGetMembershipResponse::?r`
        FUNCTION `??zclGeneral_SendSceneGetMembershipResponse::?r`,0203H
        PUBLIC `??zclGeneral_SendSceneRequest::?relay`
        FUNCTION `??zclGeneral_SendSceneRequest::?relay`,0203H
        PUBLIC `??zclGeneral_SendSceneResponse::?relay`
        FUNCTION `??zclGeneral_SendSceneResponse::?relay`,0203H
        PUBLIC `??zclGeneral_SendSceneViewRsp::?relay`
        FUNCTION `??zclGeneral_SendSceneViewRsp::?relay`,0203H
        FUNCTION zclGeneral_AddGroup,0a1203H
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC zclGeneral_AddScene
        FUNCTION zclGeneral_AddScene,0a1203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC zclGeneral_CountAllScenes
        FUNCTION zclGeneral_CountAllScenes,0203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC zclGeneral_CountScenes
        FUNCTION zclGeneral_CountScenes,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC zclGeneral_FindAllScenesForGroup
        FUNCTION zclGeneral_FindAllScenesForGroup,080203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC zclGeneral_FindScene
        FUNCTION zclGeneral_FindScene,080203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        FUNCTION zclGeneral_HdlInSpecificCommands,0a1203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION zclGeneral_HdlIncoming,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION zclGeneral_ProcessInGroupsClient,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 53, STACK
        FUNCTION zclGeneral_ProcessInGroupsServer,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 83, STACK
        FUNCTION zclGeneral_ProcessInIdentity,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclGeneral_ProcessInLevelControl,080203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION zclGeneral_ProcessInScenesClient,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 90, STACK
        FUNCTION zclGeneral_ProcessInScenesServer,0a1203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 89, STACK
        PUBLIC zclGeneral_ReadSceneCountCB
        FUNCTION zclGeneral_ReadSceneCountCB,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC zclGeneral_RegisterCmdCallbacks
        FUNCTION zclGeneral_RegisterCmdCallbacks,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC zclGeneral_RemoveAllScenes
        FUNCTION zclGeneral_RemoveAllScenes,0a1203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 13, STACK
        PUBLIC zclGeneral_RemoveScene
        FUNCTION zclGeneral_RemoveScene,0a1203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC zclGeneral_ScenesInit
        FUNCTION zclGeneral_ScenesInit,0a1203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 72, STACK
        PUBLIC zclGeneral_ScenesSave
        FUNCTION zclGeneral_ScenesSave,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION zclGeneral_ScenesWriteNV,0a1203H
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 73, STACK
        PUBLIC zclGeneral_SendAddGroupRequest
        FUNCTION zclGeneral_SendAddGroupRequest,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC zclGeneral_SendAddSceneRequest
        FUNCTION zclGeneral_SendAddSceneRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 38, STACK
        PUBLIC zclGeneral_SendGroupGetMembershipRequest
        FUNCTION zclGeneral_SendGroupGetMembershipRequest,0a1203H
        ARGFRAME XSTACK, 83, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC zclGeneral_SendGroupRequest
        FUNCTION zclGeneral_SendGroupRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC zclGeneral_SendGroupResponse
        FUNCTION zclGeneral_SendGroupResponse,0a1203H
        ARGFRAME XSTACK, 80, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclGeneral_SendGroupViewResponse
        FUNCTION zclGeneral_SendGroupViewResponse,0a1203H
        ARGFRAME XSTACK, 79, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC zclGeneral_SendIdentify
        FUNCTION zclGeneral_SendIdentify,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclGeneral_SendIdentifyEZModeInvoke
        FUNCTION zclGeneral_SendIdentifyEZModeInvoke,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC zclGeneral_SendIdentifyQueryResponse
        FUNCTION zclGeneral_SendIdentifyQueryResponse,0a1203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclGeneral_SendIdentifyUpdateCommState
        FUNCTION zclGeneral_SendIdentifyUpdateCommState,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC zclGeneral_SendLevelControlMoveRequest
        FUNCTION zclGeneral_SendLevelControlMoveRequest,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC zclGeneral_SendLevelControlMoveToLevelRequest
        FUNCTION zclGeneral_SendLevelControlMoveToLevelRequest,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclGeneral_SendLevelControlStepRequest
        FUNCTION zclGeneral_SendLevelControlStepRequest,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC zclGeneral_SendLevelControlStopRequest
        FUNCTION zclGeneral_SendLevelControlStopRequest,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC zclGeneral_SendSceneGetMembershipResponse
        FUNCTION zclGeneral_SendSceneGetMembershipResponse,0a1203H
        ARGFRAME XSTACK, 89, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 29, STACK
        PUBLIC zclGeneral_SendSceneRequest
        FUNCTION zclGeneral_SendSceneRequest,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC zclGeneral_SendSceneResponse
        FUNCTION zclGeneral_SendSceneResponse,0a1203H
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC zclGeneral_SendSceneViewRsp
        FUNCTION zclGeneral_SendSceneViewRsp,0a1203H
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 37, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
aps_AddGroup        SYMBOL "aps_AddGroup"
`??aps_AddGroup::?relay` SYMBOL "?relay", aps_AddGroup
aps_CountAllGroups  SYMBOL "aps_CountAllGroups"
`??aps_CountAllGroups::?relay` SYMBOL "?relay", aps_CountAllGroups
aps_FindAllGroupsForEndpoint SYMBOL "aps_FindAllGroupsForEndpoint"
`??aps_FindAllGroupsForEndpoint::?relay` SYMBOL "?relay", aps_FindAllGroupsForEndpoint
aps_FindGroup       SYMBOL "aps_FindGroup"
`??aps_FindGroup::?relay` SYMBOL "?relay", aps_FindGroup
aps_RemoveAllGroup  SYMBOL "aps_RemoveAllGroup"
`??aps_RemoveAllGroup::?relay` SYMBOL "?relay", aps_RemoveAllGroup
aps_RemoveGroup     SYMBOL "aps_RemoveGroup"
`??aps_RemoveGroup::?relay` SYMBOL "?relay", aps_RemoveGroup
bdb_ZclIdentifyCmdInd SYMBOL "bdb_ZclIdentifyCmdInd"
`??bdb_ZclIdentifyCmdInd::?relay` SYMBOL "?relay", bdb_ZclIdentifyCmdInd
bdb_ZclIdentifyQueryCmdInd SYMBOL "bdb_ZclIdentifyQueryCmdInd"
`??bdb_ZclIdentifyQueryCmdInd::?relay` SYMBOL "?relay", bdb_ZclIdentifyQueryCmdInd
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
`??osal_memcpy::?relay` SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
osal_nv_item_init   SYMBOL "osal_nv_item_init"
`??osal_nv_item_init::?relay` SYMBOL "?relay", osal_nv_item_init
osal_nv_read        SYMBOL "osal_nv_read"
`??osal_nv_read::?relay` SYMBOL "?relay", osal_nv_read
osal_nv_write       SYMBOL "osal_nv_write"
`??osal_nv_write::?relay` SYMBOL "?relay", osal_nv_write
zcl_ReadAttrData    SYMBOL "zcl_ReadAttrData"
`??zcl_ReadAttrData::?relay` SYMBOL "?relay", zcl_ReadAttrData
zcl_SendCommand     SYMBOL "zcl_SendCommand"
`??zcl_SendCommand::?relay` SYMBOL "?relay", zcl_SendCommand
zcl_SendDefaultRspCmd SYMBOL "zcl_SendDefaultRspCmd"
`??zcl_SendDefaultRspCmd::?relay` SYMBOL "?relay", zcl_SendDefaultRspCmd
zcl_registerPlugin  SYMBOL "zcl_registerPlugin"
`??zcl_registerPlugin::?relay` SYMBOL "?relay", zcl_registerPlugin
zclGeneral_AddScene SYMBOL "zclGeneral_AddScene"
`??zclGeneral_AddScene::?relay` SYMBOL "?relay", zclGeneral_AddScene
zclGeneral_CountAllScenes SYMBOL "zclGeneral_CountAllScenes"
`??zclGeneral_CountAllScenes::?relay` SYMBOL "?relay", zclGeneral_CountAllScenes
zclGeneral_CountScenes SYMBOL "zclGeneral_CountScenes"
`??zclGeneral_CountScenes::?relay` SYMBOL "?relay", zclGeneral_CountScenes
zclGeneral_FindAllScenesForGroup SYMBOL "zclGeneral_FindAllScenesForGroup"
`??zclGeneral_FindAllScenesForGroup::?relay` SYMBOL "?relay", zclGeneral_FindAllScenesForGroup
zclGeneral_FindScene SYMBOL "zclGeneral_FindScene"
`??zclGeneral_FindScene::?relay` SYMBOL "?relay", zclGeneral_FindScene
zclGeneral_ReadSceneCountCB SYMBOL "zclGeneral_ReadSceneCountCB"
`??zclGeneral_ReadSceneCountCB::?relay` SYMBOL "?relay", zclGeneral_ReadSceneCountCB
zclGeneral_RegisterCmdCallbacks SYMBOL "zclGeneral_RegisterCmdCallbacks"
`??zclGeneral_RegisterCmdCallbacks::?relay` SYMBOL "?relay", zclGeneral_RegisterCmdCallbacks
zclGeneral_RemoveAllScenes SYMBOL "zclGeneral_RemoveAllScenes"
`??zclGeneral_RemoveAllScenes::?relay` SYMBOL "?relay", zclGeneral_RemoveAllScenes
zclGeneral_RemoveScene SYMBOL "zclGeneral_RemoveScene"
`??zclGeneral_RemoveScene::?relay` SYMBOL "?relay", zclGeneral_RemoveScene
zclGeneral_ScenesInit SYMBOL "zclGeneral_ScenesInit"
`??zclGeneral_ScenesInit::?relay` SYMBOL "?relay", zclGeneral_ScenesInit
zclGeneral_ScenesSave SYMBOL "zclGeneral_ScenesSave"
`??zclGeneral_ScenesSave::?relay` SYMBOL "?relay", zclGeneral_ScenesSave
zclGeneral_SendAddGroupRequest SYMBOL "zclGeneral_SendAddGroupRequest"
`??zclGeneral_SendAddGroupRequest::?relay` SYMBOL "?relay", zclGeneral_SendAddGroupRequest
zclGeneral_SendAddSceneRequest SYMBOL "zclGeneral_SendAddSceneRequest"
`??zclGeneral_SendAddSceneRequest::?relay` SYMBOL "?relay", zclGeneral_SendAddSceneRequest
zclGeneral_SendGroupGetMembershipRequest SYMBOL "zclGeneral_SendGroupGetMembershipRequest"
`??zclGeneral_SendGroupGetMembershipRequest::?re` SYMBOL "?relay", zclGeneral_SendGroupGetMembershipRequest
zclGeneral_SendGroupRequest SYMBOL "zclGeneral_SendGroupRequest"
`??zclGeneral_SendGroupRequest::?relay` SYMBOL "?relay", zclGeneral_SendGroupRequest
zclGeneral_SendGroupResponse SYMBOL "zclGeneral_SendGroupResponse"
`??zclGeneral_SendGroupResponse::?relay` SYMBOL "?relay", zclGeneral_SendGroupResponse
zclGeneral_SendGroupViewResponse SYMBOL "zclGeneral_SendGroupViewResponse"
`??zclGeneral_SendGroupViewResponse::?relay` SYMBOL "?relay", zclGeneral_SendGroupViewResponse
zclGeneral_SendIdentify SYMBOL "zclGeneral_SendIdentify"
`??zclGeneral_SendIdentify::?relay` SYMBOL "?relay", zclGeneral_SendIdentify
zclGeneral_SendIdentifyEZModeInvoke SYMBOL "zclGeneral_SendIdentifyEZModeInvoke"
`??zclGeneral_SendIdentifyEZModeInvoke::?relay` SYMBOL "?relay", zclGeneral_SendIdentifyEZModeInvoke
zclGeneral_SendIdentifyQueryResponse SYMBOL "zclGeneral_SendIdentifyQueryResponse"
`??zclGeneral_SendIdentifyQueryResponse::?relay` SYMBOL "?relay", zclGeneral_SendIdentifyQueryResponse
zclGeneral_SendIdentifyUpdateCommState SYMBOL "zclGeneral_SendIdentifyUpdateCommState"
`??zclGeneral_SendIdentifyUpdateCommState::?rela` SYMBOL "?relay", zclGeneral_SendIdentifyUpdateCommState
zclGeneral_SendLevelControlMoveRequest SYMBOL "zclGeneral_SendLevelControlMoveRequest"
`??zclGeneral_SendLevelControlMoveRequest::?rela` SYMBOL "?relay", zclGeneral_SendLevelControlMoveRequest
zclGeneral_SendLevelControlMoveToLevelRequest SYMBOL "zclGeneral_SendLevelControlMoveToLevelRequest"
??zclGeneral_SendLevelControlMoveToLevelRequest SYMBOL "?relay", zclGeneral_SendLevelControlMoveToLevelRequest
zclGeneral_SendLevelControlStepRequest SYMBOL "zclGeneral_SendLevelControlStepRequest"
`??zclGeneral_SendLevelControlStepRequest::?rela` SYMBOL "?relay", zclGeneral_SendLevelControlStepRequest
zclGeneral_SendLevelControlStopRequest SYMBOL "zclGeneral_SendLevelControlStopRequest"
`??zclGeneral_SendLevelControlStopRequest::?rela` SYMBOL "?relay", zclGeneral_SendLevelControlStopRequest
zclGeneral_SendSceneGetMembershipResponse SYMBOL "zclGeneral_SendSceneGetMembershipResponse"
`??zclGeneral_SendSceneGetMembershipResponse::?r` SYMBOL "?relay", zclGeneral_SendSceneGetMembershipResponse
zclGeneral_SendSceneRequest SYMBOL "zclGeneral_SendSceneRequest"
`??zclGeneral_SendSceneRequest::?relay` SYMBOL "?relay", zclGeneral_SendSceneRequest
zclGeneral_SendSceneResponse SYMBOL "zclGeneral_SendSceneResponse"
`??zclGeneral_SendSceneResponse::?relay` SYMBOL "?relay", zclGeneral_SendSceneResponse
zclGeneral_SendSceneViewRsp SYMBOL "zclGeneral_SendSceneViewRsp"
`??zclGeneral_SendSceneViewRsp::?relay` SYMBOL "?relay", zclGeneral_SendSceneViewRsp

        EXTERN `??aps_AddGroup::?relay`
        FUNCTION `??aps_AddGroup::?relay`,00H
        EXTERN `??aps_CountAllGroups::?relay`
        FUNCTION `??aps_CountAllGroups::?relay`,00H
        EXTERN `??aps_FindAllGroupsForEndpoint::?relay`
        FUNCTION `??aps_FindAllGroupsForEndpoint::?relay`,00H
        EXTERN `??aps_FindGroup::?relay`
        FUNCTION `??aps_FindGroup::?relay`,00H
        EXTERN `??aps_RemoveAllGroup::?relay`
        FUNCTION `??aps_RemoveAllGroup::?relay`,00H
        EXTERN `??aps_RemoveGroup::?relay`
        FUNCTION `??aps_RemoveGroup::?relay`,00H
        EXTERN `??bdb_ZclIdentifyCmdInd::?relay`
        FUNCTION `??bdb_ZclIdentifyCmdInd::?relay`,00H
        EXTERN `??bdb_ZclIdentifyQueryCmdInd::?relay`
        FUNCTION `??bdb_ZclIdentifyQueryCmdInd::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??osal_memcpy::?relay`
        FUNCTION `??osal_memcpy::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??osal_nv_item_init::?relay`
        FUNCTION `??osal_nv_item_init::?relay`,00H
        EXTERN `??osal_nv_read::?relay`
        FUNCTION `??osal_nv_read::?relay`,00H
        EXTERN `??osal_nv_write::?relay`
        FUNCTION `??osal_nv_write::?relay`,00H
        EXTERN `??zcl_ReadAttrData::?relay`
        FUNCTION `??zcl_ReadAttrData::?relay`,00H
        EXTERN `??zcl_SendCommand::?relay`
        FUNCTION `??zcl_SendCommand::?relay`,00H
        EXTERN `??zcl_SendDefaultRspCmd::?relay`
        FUNCTION `??zcl_SendDefaultRspCmd::?relay`,00H
        EXTERN `??zcl_registerPlugin::?relay`
        FUNCTION `??zcl_registerPlugin::?relay`,00H
        EXTERN aps_AddGroup
        FUNCTION aps_AddGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_CountAllGroups
        FUNCTION aps_CountAllGroups,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_FindAllGroupsForEndpoint
        FUNCTION aps_FindAllGroupsForEndpoint,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_FindGroup
        FUNCTION aps_FindGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_RemoveAllGroup
        FUNCTION aps_RemoveAllGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN aps_RemoveGroup
        FUNCTION aps_RemoveGroup,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN bdb_ZclIdentifyCmdInd
        FUNCTION bdb_ZclIdentifyCmdInd,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN bdb_ZclIdentifyQueryCmdInd
        FUNCTION bdb_ZclIdentifyQueryCmdInd,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 90, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_item_init
        FUNCTION osal_nv_item_init,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 70, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_read
        FUNCTION osal_nv_read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_write
        FUNCTION osal_nv_write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 73, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_ReadAttrData
        FUNCTION zcl_ReadAttrData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_SendCommand
        FUNCTION zcl_SendCommand,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_SendDefaultRspCmd
        FUNCTION zcl_SendDefaultRspCmd,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 83, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_registerPlugin
        FUNCTION zcl_registerPlugin,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// D:\AA\Z-Stack 3.0.2\Components\stack\zcl\zcl_general.c
//    1 /**************************************************************************************************
//    2   Filename:       zcl_general.c
//    3   Revised:        $Date: 2015-09-10 09:36:48 -0700 (Thu, 10 Sep 2015) $
//    4   Revision:       $Revision: 44493 $
//    5 
//    6   Description:    Zigbee Cluster Library - General.  This application receives all
//    7                   ZCL messages and initially parses them before passing to application.
//    8 
//    9 
//   10   Copyright 2006-2015 Texas Instruments Incorporated. All rights reserved.
//   11 
//   12   IMPORTANT: Your use of this Software is limited to those specific rights
//   13   granted under the terms of a software license agreement between the user
//   14   who downloaded the software, his/her employer (which must be your employer)
//   15   and Texas Instruments Incorporated (the "License"). You may not use this
//   16   Software unless you agree to abide by the terms of the License. The License
//   17   limits your use, and you acknowledge, that the Software may not be modified,
//   18   copied or distributed unless embedded on a Texas Instruments microcontroller
//   19   or used solely and exclusively in conjunction with a Texas Instruments radio
//   20   frequency transceiver, which is integrated into your product. Other than for
//   21   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   22   works of, modify, distribute, perform, display or sell this Software and/or
//   23   its documentation for any purpose.
//   24 
//   25   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   26   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   27   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   28   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   29   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   30   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   31   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   32   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   33   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   34   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   35   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   36 
//   37   Should you have any questions regarding your right to use this Software,
//   38   contact Texas Instruments Incorporated at www.TI.com.
//   39 **************************************************************************************************/
//   40 
//   41 /*********************************************************************
//   42  * INCLUDES
//   43  */
//   44 #include "ZComDef.h"
//   45 #include "zcl.h"
//   46 #include "zcl_general.h"
//   47 //#include "ZDApp.h"
//   48 
//   49 #if defined ( INTER_PAN )
//   50   #include "stub_aps.h"
//   51 #endif
//   52 #include "bdb.h"
//   53 
//   54 /*********************************************************************
//   55  * MACROS
//   56  */
//   57 #define locationTypeAbsolute( a )          ( (a) & LOCATION_TYPE_ABSOLUTE )
//   58 #define locationType2D( a )                ( (a) & LOCATION_TYPE_2_D )
//   59 #define locationTypeCoordinateSystem( a )  ( (a) & LOCATION_TYPE_COORDINATE_SYSTEM )
//   60 
//   61 #ifdef ZCL_SCENES
//   62 #define zclGeneral_ScenesRemaingCapacity() ( ZCL_GEN_MAX_SCENES - zclGeneral_CountAllScenes() )
//   63 #endif // ZCL_SCENES
//   64 
//   65 /*********************************************************************
//   66  * CONSTANTS
//   67  */
//   68 
//   69 /*********************************************************************
//   70  * TYPEDEFS
//   71  */
//   72 typedef struct zclGenCBRec
//   73 {
//   74   struct zclGenCBRec        *next;
//   75   uint8                     endpoint; // Used to link it into the endpoint descriptor
//   76   zclGeneral_AppCallbacks_t *CBs;     // Pointer to Callback function
//   77 } zclGenCBRec_t;
//   78 
//   79 typedef struct zclGenSceneItem
//   80 {
//   81   struct zclGenSceneItem    *next;
//   82   uint8                     endpoint; // Used to link it into the endpoint descriptor
//   83   zclGeneral_Scene_t        scene;    // Scene info
//   84 } zclGenSceneItem_t;
//   85 
//   86 typedef struct zclGenAlarmItem
//   87 {
//   88   struct zclGenAlarmItem    *next;
//   89   uint8                     endpoint; // Used to link it into the endpoint descriptor
//   90   zclGeneral_Alarm_t        alarm;    // Alarm info
//   91 } zclGenAlarmItem_t;
//   92 
//   93 // Scene NV types
//   94 typedef struct
//   95 {
//   96   uint16                    numRecs;
//   97 } nvGenScenesHdr_t;
//   98 
//   99 typedef struct zclGenSceneNVItem
//  100 {
//  101   uint8                     endpoint;
//  102   zclGeneral_Scene_t        scene;
//  103 } zclGenSceneNVItem_t;
//  104 
//  105 /*********************************************************************
//  106  * GLOBAL VARIABLES
//  107  */
//  108 
//  109 /*********************************************************************
//  110  * GLOBAL FUNCTIONS
//  111  */
//  112 
//  113 /*********************************************************************
//  114  * LOCAL VARIABLES
//  115  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  116 static zclGenCBRec_t *zclGenCBs = (zclGenCBRec_t *)NULL;
zclGenCBs:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  117 static uint8 zclGenPluginRegisted = FALSE;
zclGenPluginRegisted:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  118 
//  119 #if defined( ZCL_SCENES )
//  120   #if !defined ( ZCL_STANDALONE )

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  121     static zclGenSceneItem_t *zclGenSceneTable = (zclGenSceneItem_t *)NULL;
zclGenSceneTable:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  122   #endif
//  123 #endif // ZCL_SCENES
//  124 
//  125 #ifdef ZCL_ALARMS
//  126 static zclGenAlarmItem_t *zclGenAlarmTable = (zclGenAlarmItem_t *)NULL;
//  127 #endif // ZCL_ALARMS
//  128 
//  129 /*********************************************************************
//  130  * LOCAL FUNCTIONS
//  131  */
//  132 static ZStatus_t zclGeneral_HdlIncoming( zclIncoming_t *pInMsg );
//  133 static ZStatus_t zclGeneral_HdlInSpecificCommands( zclIncoming_t *pInMsg );
//  134 static zclGeneral_AppCallbacks_t *zclGeneral_FindCallbacks( uint8 endpoint );
//  135 
//  136 // Device Configuration and Installation clusters
//  137 #ifdef ZCL_BASIC
//  138 static ZStatus_t zclGeneral_ProcessInBasic( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  139 #endif // ZCL_BASIC
//  140 
//  141 #ifdef ZCL_IDENTIFY
//  142 static ZStatus_t zclGeneral_ProcessInIdentity( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  143 #endif // ZCL_IDENTIFY
//  144 
//  145 // Groups and Scenes clusters
//  146 #ifdef ZCL_GROUPS
//  147 static ZStatus_t zclGeneral_ProcessInGroupsServer( zclIncoming_t *pInMsg );
//  148 static ZStatus_t zclGeneral_ProcessInGroupsClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  149 static ZStatus_t zclGeneral_AddGroup( uint8 endPoint, aps_Group_t *group, uint8 *pData );
//  150 #endif // ZCL_GROUPS
//  151 
//  152 #ifdef ZCL_SCENES
//  153 static ZStatus_t zclGeneral_ProcessInScenesServer( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  154 static ZStatus_t zclGeneral_ProcessInScenesClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  155 #endif // ZCL_SCENES
//  156 
//  157 // On/Off and Level Control Configuration clusters
//  158 #ifdef ZCL_ON_OFF
//  159 static ZStatus_t zclGeneral_ProcessInOnOff( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  160 //static ZStatus_t zclGeneral_ProcessInOnOffTest( zclIncoming_t *pInMsg );
//  161 #endif // ZCL_ONOFF
//  162 
//  163 #ifdef ZCL_LEVEL_CTRL
//  164 static ZStatus_t zclGeneral_ProcessInLevelControl( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  165 #endif // ZCL_LEVEL_CTRL
//  166 
//  167 // Alarms cluster
//  168 #ifdef ZCL_ALARMS
//  169 static ZStatus_t zclGeneral_ProcessInAlarmsServer( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  170 static ZStatus_t zclGeneral_ProcessInAlarmsClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  171 #endif // ZCL_ALARMS
//  172 
//  173 // Location cluster
//  174 #ifdef ZCL_LOCATION
//  175 static ZStatus_t zclGeneral_ProcessInLocationServer( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  176 static ZStatus_t zclGeneral_ProcessInLocationClient( zclIncoming_t *pInMsg, zclGeneral_AppCallbacks_t *pCBs );
//  177 #endif // ZCL_LOCATION
//  178 
//  179 #ifdef ZCL_SCENES
//  180   #if !defined ( ZCL_STANDALONE )
//  181     static uint8 zclGeneral_ScenesInitNV( void );
//  182     static void zclGeneral_ScenesSetDefaultNV( void );
//  183     static void zclGeneral_ScenesWriteNV( void );
//  184     static uint16 zclGeneral_ScenesRestoreFromNV( void );
//  185   #endif
//  186 #endif // ZCL_SCENES
//  187 
//  188 /*********************************************************************
//  189  * @fn      zclGeneral_RegisterCmdCallbacks
//  190  *
//  191  * @brief   Register an applications command callbacks
//  192  *
//  193  * @param   endpoint - application's endpoint
//  194  * @param   callbacks - pointer to the callback record.
//  195  *
//  196  * @return  ZMemError if not able to allocate
//  197  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  198 ZStatus_t zclGeneral_RegisterCmdCallbacks( uint8 endpoint, zclGeneral_AppCallbacks_t *callbacks )
zclGeneral_RegisterCmdCallbacks:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
        CODE
//  199 {
        FUNCALL zclGeneral_RegisterCmdCallbacks, zcl_registerPlugin
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RegisterCmdCallbacks, zclGeneral_ScenesInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RegisterCmdCallbacks, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       ?V0,R1
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  200   zclGenCBRec_t *pNewItem;
//  201   zclGenCBRec_t *pLoop;
//  202 
//  203   // Register as a ZCL Plugin
//  204   if ( zclGenPluginRegisted == FALSE )
        MOV       DPTR,#zclGenPluginRegisted
        MOVX      A,@DPTR
        JNZ       ??zclGeneral_RegisterCmdCallbacks_0
//  205   {
//  206     zcl_registerPlugin( ZCL_CLUSTER_ID_GEN_BASIC,
//  207                         ZCL_CLUSTER_ID_GEN_MULTISTATE_VALUE_BASIC,
//  208                         zclGeneral_HdlIncoming );
        ; Setup parameters for call to function zcl_registerPlugin
        MOV       ?V2,#`??zclGeneral_HdlIncoming::?relay` & 0xff
        MOV       ?V3,#(`??zclGeneral_HdlIncoming::?relay` >> 8) & 0xff
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R4,#0x14
        MOV       R5,#0x0
        MOV       R2,#0x0
        MOV       R3,#0x0
        LCALL     `??zcl_registerPlugin::?relay`; Banked call to: zcl_registerPlugin
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
//  209 
//  210 #ifdef ZCL_SCENES
//  211     // Initialize the Scenes Table
//  212     zclGeneral_ScenesInit();
        ; Setup parameters for call to function zclGeneral_ScenesInit
        LCALL     `??zclGeneral_ScenesInit::?relay`; Banked call to: zclGeneral_ScenesInit
//  213 #endif // ZCL_SCENES
//  214 
//  215     zclGenPluginRegisted = TRUE;
        MOV       DPTR,#zclGenPluginRegisted
        MOV       A,#0x1
        MOVX      @DPTR,A
//  216   }
//  217 
//  218   // Fill in the new profile list
//  219   pNewItem = zcl_mem_alloc( sizeof( zclGenCBRec_t ) );
??zclGeneral_RegisterCmdCallbacks_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x5
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R0,?V2
        MOV       R1,?V3
//  220   if ( pNewItem == NULL )
        MOV       A,R2
        ORL       A,R1
        JNZ       ??zclGeneral_RegisterCmdCallbacks_1
//  221     return (ZMemError);
        MOV       R1,#0x10
        SJMP      ??zclGeneral_RegisterCmdCallbacks_2
//  222 
//  223   pNewItem->next = (zclGenCBRec_t *)NULL;
??zclGeneral_RegisterCmdCallbacks_1:
        LCALL     ?Subroutine60 & 0xFFFF
//  224   pNewItem->endpoint = endpoint;
??CrossCallReturnLabel_109:
        MOV       A,?V0
        LCALL     ?Subroutine64 & 0xFFFF
//  225   pNewItem->CBs = callbacks;
??CrossCallReturnLabel_114:
        MOV       A,R6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R7
        MOVX      @DPTR,A
//  226 
//  227   // Find spot in list
//  228   if (  zclGenCBs == NULL )
        MOV       DPTR,#zclGenCBs
        LCALL     ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_280:
        MOV       DPTR,#zclGenCBs
        JZ        ??zclGeneral_RegisterCmdCallbacks_3
//  229   {
//  230     zclGenCBs = pNewItem;
//  231   }
//  232   else
//  233   {
//  234     // Look for end of list
//  235     pLoop = zclGenCBs;
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_140:
        SJMP      ??zclGeneral_RegisterCmdCallbacks_4
//  236     while ( pLoop->next != NULL )
//  237       pLoop = pLoop->next;
??zclGeneral_RegisterCmdCallbacks_5:
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
??zclGeneral_RegisterCmdCallbacks_4:
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_281:
        JNZ       ??zclGeneral_RegisterCmdCallbacks_5
//  238 
//  239     // Put new item at end of list
//  240     pLoop->next = pNewItem;
        MOV       DPL,R4
        MOV       DPH,R5
//  241   }
??zclGeneral_RegisterCmdCallbacks_3:
        LCALL     ?Subroutine65 & 0xFFFF
//  242 
//  243   return ( ZSuccess );
??CrossCallReturnLabel_296:
        MOV       R1,#0x0
??zclGeneral_RegisterCmdCallbacks_2:
        LJMP      ??Subroutine102_0 & 0xFFFF
//  244 }
          CFI EndBlock cfiBlock0
//  245 
//  246 #ifdef ZCL_IDENTIFY
//  247 /*********************************************************************
//  248  * @fn      zclGeneral_SendIdentify
//  249  *
//  250  * @brief   Call to send out an Identify Command
//  251  *
//  252  * @param   srcEP - Sending application's endpoint
//  253  * @param   dstAddr - where you want the message to go
//  254  * @param   identifyTime - how long the device will continue to identify itself (in seconds)
//  255  * @param   seqNum - identification number for the transaction
//  256  *
//  257  * @return  ZStatus_t
//  258  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  259 ZStatus_t zclGeneral_SendIdentify( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentify:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function zclGeneral_SendIdentify
        CODE
//  260                                    uint16 identifyTime, uint8 disableDefaultRsp, uint8 seqNum )
//  261 {
        FUNCALL zclGeneral_SendIdentify, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R1
        MOV       R6,A
//  262   uint8 buf[2];
//  263 
//  264   buf[0] = LO_UINT16( identifyTime );
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
//  265   buf[1] = HI_UINT16( identifyTime );
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine56 & 0xFFFF
//  266 
//  267   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  268                           COMMAND_IDENTIFY, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  269                           disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_160:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,#0x2
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_50:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_51:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V0,#0x1
        LJMP      ?Subroutine1 & 0xFFFF
//  270 }
          CFI EndBlock cfiBlock1

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond2 Using cfiCommon0
          CFI Function zclGeneral_SendIdentify
          CFI Conditional ??CrossCallReturnLabel_160
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond3 Using cfiCommon0
          CFI (cfiCond3) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond3) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond3) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond3) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond3) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond3) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond3) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond3) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond3) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond3) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond3) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond3) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond3) CFA_SP SP+-2
          CFI (cfiCond3) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker4 Using cfiCommon1
          CFI (cfiPicker4) NoFunction
          CFI (cfiPicker4) Picker
        MOV       A,R5
          CFI EndBlock cfiCond2
          CFI EndBlock cfiCond3
          CFI EndBlock cfiPicker4
        REQUIRE ??Subroutine94_0
        ; // Fall through to label ??Subroutine94_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine94_0:
          CFI Block cfiCond5 Using cfiCommon0
          CFI Function zclGeneral_ScenesInit
          CFI Conditional ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 68)
          CFI Block cfiCond6 Using cfiCommon0
          CFI (cfiCond6) Function zclGeneral_SendIdentify
          CFI (cfiCond6) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond6) CFA_SP SP+-2
          CFI (cfiCond6) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond7) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond7) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond7) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond7) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond7) CFA_SP SP+-2
          CFI (cfiCond7) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker8 Using cfiCommon1
          CFI (cfiPicker8) NoFunction
          CFI (cfiPicker8) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function osal_nv_write
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond5
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiPicker8
//  271 
//  272 /*********************************************************************
//  273  * @fn      zclGeneral_SendIdentifyEZModeInvoke
//  274  *
//  275  * @brief   Call to send out an Identify EZ-Mode Invoke Command
//  276  *
//  277  * @param   srcEP - Sending application's endpoint
//  278  * @param   dstAddr - where you want the message to go
//  279  * @param   action - describes the EZ-Mode action to be performed
//  280  * @param   seqNum - identification number for the transaction
//  281  *
//  282  * @return  ZStatus_t
//  283  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  284 ZStatus_t zclGeneral_SendIdentifyEZModeInvoke( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentifyEZModeInvoke:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyEZModeInvoke
        CODE
//  285                                                uint8 action, uint8 disableDefaultRsp, uint8 seqNum )
//  286 {
        FUNCALL zclGeneral_SendIdentifyEZModeInvoke, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
//  287   uint8 buf[1];
//  288 
//  289   buf[0] = action;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine95_0 & 0xFFFF
//  290 
//  291   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  292                           COMMAND_IDENTIFY_EZMODE_INVOKE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  293                           disableDefaultRsp, 0, seqNum, 1, buf );
??CrossCallReturnLabel_167:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V2,#0x1
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_187:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R5
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x2
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        LCALL     ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_227:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,#0x1
        LJMP      ??Subroutine101_0 & 0xFFFF
//  294 }
          CFI EndBlock cfiBlock9
//  295 
//  296 /*********************************************************************
//  297  * @fn      zclGeneral_SendIdentifyUpdateCommState
//  298  *
//  299  * @brief   Call to send out an Identify Update Commission State Command
//  300  *
//  301  * @param   srcEP - Sending application's endpoint
//  302  * @param   dstAddr - where you want the message to go
//  303  * @param   action - describes the EZ-Mode action to be performed
//  304  * @param   commissionStateMask - updates the device's commission state
//  305  * @param   seqNum - identification number for the transaction
//  306  *
//  307  * @return  ZStatus_t
//  308  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  309 ZStatus_t zclGeneral_SendIdentifyUpdateCommState( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentifyUpdateCommState:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyUpdateCommState
        CODE
//  310                                                   uint8 action, uint8 commissionStateMask,
//  311                                                   uint8 disableDefaultRsp, uint8 seqNum )
//  312 {
        FUNCALL zclGeneral_SendIdentifyUpdateCommState, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
//  313   uint8 buf[2];
//  314 
//  315   buf[0] = action;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
//  316   buf[1] = commissionStateMask;
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        LCALL     ??Subroutine95_0 & 0xFFFF
//  317 
//  318   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  319                           COMMAND_IDENTIFY_UPDATE_COMMISSION_STATE, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  320                           disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_168:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       ?V2,#0x2
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_188:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_189:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V1,#0x3
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R4,#0x3
        LJMP      ?Subroutine0 & 0xFFFF
//  321 }
          CFI EndBlock cfiBlock10
//  322 
//  323 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  324 /*********************************************************************
//  325  * @fn      zclGeneral_SendIdentifyTriggerEffect
//  326  *
//  327  * @brief   Call to send out a Trigger Effect Command
//  328  *
//  329  * @param   srcEP - Sending application's endpoint
//  330  * @param   dstAddr - where you want the message to go
//  331  * @param   effectId - identify effect to use
//  332  * @param   effectVariant - which variant of effect to be triggered
//  333  * @param   disableDefaultRsp - whether to disable the Default Response command
//  334  * @param   seqNum - identification number for the transaction
//  335  *
//  336  * @return  ZStatus_t
//  337  */
//  338 ZStatus_t zclGeneral_SendIdentifyTriggerEffect( uint8 srcEP, afAddrType_t *dstAddr,
//  339                                                 uint8 effectId, uint8 effectVariant,
//  340                                                 uint8 disableDefaultRsp, uint8 seqNum )
//  341 {
//  342   uint8 buf[2];
//  343 
//  344   buf[0] = effectId;
//  345   buf[1] = effectVariant;
//  346 
//  347   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  348                           COMMAND_IDENTIFY_TRIGGER_EFFECT, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  349                           disableDefaultRsp, 0, seqNum, 2, buf );
//  350 }
//  351 #endif // ZCL_LIGHT_LINK_ENHANCE
//  352 
//  353 /*********************************************************************
//  354  * @fn      zclGeneral_SendIdentifyQueryResponse
//  355  *
//  356  * @brief   Call to send out an Identify Query Response Command
//  357  *
//  358  * @param   srcEP - Sending application's endpoint
//  359  * @param   dstAddr - where you want the message to go
//  360  * @param   timeout - how long the device will continue to identify itself (in seconds)
//  361  * @param   seqNum - identification number for the transaction
//  362  *
//  363  * @return  ZStatus_t
//  364  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  365 ZStatus_t zclGeneral_SendIdentifyQueryResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendIdentifyQueryResponse:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyQueryResponse
        CODE
//  366                                                 uint16 timeout, uint8 disableDefaultRsp, uint8 seqNum )
//  367 {
        FUNCALL zclGeneral_SendIdentifyQueryResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R1
        MOV       R6,A
//  368   uint8 buf[2];
//  369 
//  370   buf[0] = LO_UINT16( timeout );
        MOV       A,R4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
//  371   buf[1] = HI_UINT16( timeout );
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine56 & 0xFFFF
//  372 
//  373   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  374                           COMMAND_IDENTIFY_QUERY_RSP, TRUE,
//  375                           ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_161:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,#0x2
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_52:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        CLR       A
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_53:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        LJMP      ?Subroutine1 & 0xFFFF
//  376 }
          CFI EndBlock cfiBlock11

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond12 Using cfiCommon0
          CFI Function zclGeneral_SendIdentify
          CFI Conditional ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond13 Using cfiCommon0
          CFI (cfiCond13) Function zclGeneral_SendIdentify
          CFI (cfiCond13) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond13) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond13) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond13) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond13) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond13) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond13) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond13) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond13) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond13) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond13) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond13) CFA_SP SP+-2
          CFI (cfiCond13) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond14 Using cfiCommon0
          CFI (cfiCond14) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond14) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond14) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond14) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond14) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond14) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond14) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond14) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond14) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond14) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond14) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond14) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond14) CFA_SP SP+-2
          CFI (cfiCond14) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+-2
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+-2
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker17 Using cfiCommon1
          CFI (cfiPicker17) NoFunction
          CFI (cfiPicker17) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond12
          CFI EndBlock cfiCond13
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiPicker17
//  377 #endif // ZCL_IDENTIFY
//  378 
//  379 #ifdef ZCL_GROUPS
//  380 /*********************************************************************
//  381  * @fn      zclGeneral_SendGroupRequest
//  382  *
//  383  * @brief   Send a Group Request to a device.  You can also use the
//  384  *          appropriate macro.
//  385  *
//  386  * @param   srcEP - Sending Apps endpoint
//  387  * @param   dstAddr - where to send the request
//  388  * @param   cmd - one of the following:
//  389  *              COMMAND_GROUP_VIEW
//  390  *              COMMAND_GROUP_REMOVE
//  391  * @param   groupID -
//  392  *
//  393  * @return  ZStatus_t
//  394  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  395 ZStatus_t zclGeneral_SendGroupRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupRequest:
          CFI Block cfiBlock18 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
        CODE
//  396                                        uint8 cmd, uint16 groupID, uint8 disableDefaultRsp, uint8 seqNum )
//  397 {
        FUNCALL zclGeneral_SendGroupRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,R1
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine32 & 0xFFFF
//  398   uint8 buf[2];
//  399 
//  400   buf[0] = LO_UINT16( groupID );
//  401   buf[1] = HI_UINT16( groupID );
??CrossCallReturnLabel_43:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine55 & 0xFFFF
//  402 
//  403   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  404                             cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  405                             disableDefaultRsp, 0, seqNum, 2, buf ) );
??CrossCallReturnLabel_163:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       ?V2,#0x2
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_190:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R5
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,R4
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R4,#0x4
        MOV       R5,#0x0
        MOV       R1,?V0
        LJMP      ??Subroutine100_0 & 0xFFFF
          CFI EndBlock cfiBlock18

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond19 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
          CFI Conditional ??CrossCallReturnLabel_163
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond20 Using cfiCommon0
          CFI (cfiCond20) Function zclGeneral_SendGroupResponse
          CFI (cfiCond20) Conditional ??CrossCallReturnLabel_164
          CFI (cfiCond20) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond20) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond20) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond20) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond20) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond20) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond20) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond20) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond20) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond20) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond20) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond20) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond20) CFA_SP SP+-2
          CFI (cfiCond20) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond21) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond21) CFA_SP SP+-2
          CFI (cfiCond21) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond22) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond22) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond22) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond22) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond22) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond22) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond22) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond22) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond22) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond22) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond22) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond22) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond22) CFA_SP SP+-2
          CFI (cfiCond22) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker23 Using cfiCommon1
          CFI (cfiPicker23) NoFunction
          CFI (cfiPicker23) Picker
        MOV       A,R1
          CFI EndBlock cfiCond19
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiPicker23
        REQUIRE ??Subroutine95_0
        ; // Fall through to label ??Subroutine95_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine95_0:
          CFI Block cfiCond24 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyEZModeInvoke
          CFI Conditional ??CrossCallReturnLabel_167
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond25 Using cfiCommon0
          CFI (cfiCond25) Function zclGeneral_SendIdentifyUpdateCommState
          CFI (cfiCond25) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond25) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond25) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond25) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond25) CFA_SP SP+-2
          CFI (cfiCond25) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond26 Using cfiCommon0
          CFI (cfiCond26) Function zclGeneral_SendLevelControlMoveRequest
          CFI (cfiCond26) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond26) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond26) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond26) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond26) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond26) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond26) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond26) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond26) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond26) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond26) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond26) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond26) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond26) CFA_SP SP+-2
          CFI (cfiCond26) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond27 Using cfiCommon0
          CFI (cfiCond27) Function zclGeneral_SendGroupRequest
          CFI (cfiCond27) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond27) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond27) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond27) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond27) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond27) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond27) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond27) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond27) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond27) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond27) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond27) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond27) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond27) CFA_SP SP+-2
          CFI (cfiCond27) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond28 Using cfiCommon0
          CFI (cfiCond28) Function zclGeneral_SendGroupResponse
          CFI (cfiCond28) Conditional ??CrossCallReturnLabel_164
          CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond28) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond28) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond28) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond28) CFA_SP SP+-2
          CFI (cfiCond28) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond29 Using cfiCommon0
          CFI (cfiCond29) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond29) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond29) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond29) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond29) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond29) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond29) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond29) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond29) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond29) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond29) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond29) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond29) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond29) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond29) CFA_SP SP+-2
          CFI (cfiCond29) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond30 Using cfiCommon0
          CFI (cfiCond30) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond30) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond30) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond30) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond30) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond30) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond30) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond30) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond30) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond30) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond30) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond30) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond30) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond30) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond30) CFA_SP SP+-2
          CFI (cfiCond30) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker31 Using cfiCommon1
          CFI (cfiPicker31) NoFunction
          CFI (cfiPicker31) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        RET
          CFI EndBlock cfiCond24
          CFI EndBlock cfiCond25
          CFI EndBlock cfiCond26
          CFI EndBlock cfiCond27
          CFI EndBlock cfiCond28
          CFI EndBlock cfiCond29
          CFI EndBlock cfiCond30
          CFI EndBlock cfiPicker31
//  406 }
//  407 
//  408 /*********************************************************************
//  409  * @fn      zclGeneral_SendAddGroupRequest
//  410  *
//  411  * @brief   Send the Add Group Request to a device
//  412  *
//  413  * @param   srcEP - Sending Apps endpoint
//  414  * @param   dstAddr - where to send the request
//  415  * @param   cmd - one of the following:
//  416  *                COMMAND_GROUP_ADD
//  417  *                COMMAND_GROUP_ADD_IF_IDENTIFYING
//  418  * @param   groupID - pointer to the group structure
//  419  * @param   groupName - pointer to Group Name.  This is a Zigbee
//  420  *          string data type, so the first byte is the length of the
//  421  *          name (in bytes), then the name.
//  422  *
//  423  * @return  ZStatus_t
//  424  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  425 ZStatus_t zclGeneral_SendAddGroupRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendAddGroupRequest:
          CFI Block cfiBlock32 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
        CODE
//  426                                           uint8 cmd, uint16 groupID, uint8 *groupName,
//  427                                           uint8 disableDefaultRsp, uint8 seqNum )
//  428 {
        FUNCALL zclGeneral_SendAddGroupRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddGroupRequest, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddGroupRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddGroupRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V7,R1
        MOV       ?V10,R2
        MOV       ?V11,R3
        MOV       ?V9,R4
        MOV       ?V8,R5
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine35 & 0xFFFF
//  429   uint8 *buf;
//  430   uint8 *pBuf;
//  431   uint8 len;
//  432   ZStatus_t status;
//  433 
//  434   len = 2;    // Group ID
//  435   len += groupName[0] + 1;  // String + 1 for length
??CrossCallReturnLabel_48:
        MOVX      A,@DPTR
        ADD       A,#0x3
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
//  436 
//  437   buf = zcl_mem_alloc( len );
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     ??Subroutine103_0 & 0xFFFF
//  438   if ( buf )
??CrossCallReturnLabel_215:
        JNZ       $+5
        LJMP      ??zclGeneral_SendAddGroupRequest_0 & 0xFFFF
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
//  439   {
//  440     pBuf = buf;
//  441     *pBuf++ = LO_UINT16( groupID );
??CrossCallReturnLabel_72:
        MOVX      @DPTR,A
//  442     *pBuf++ = HI_UINT16( groupID );
        MOV       A,R1
        INC       DPTR
        MOVX      @DPTR,A
//  443     *pBuf++ = groupName[0]; // string length
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine98_0 & 0xFFFF
//  444     zcl_memcpy( pBuf, &(groupName[1]), groupName[0] );
??CrossCallReturnLabel_176:
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,?V0
        ADD       A,#0x3
        LCALL     ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_122:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
//  445 
//  446     status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  447                               cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  448                               disableDefaultRsp, 0, seqNum, len, buf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V2,R6
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_58:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,?V8
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V2,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       A,?V9
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       R4,#0x4
        MOV       R5,#0x0
        MOV       R2,?V10
        MOV       R3,?V11
        MOV       R1,?V7
        LCALL     ??Subroutine106_0 & 0xFFFF
??CrossCallReturnLabel_231:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R1
        MOV       R6,A
//  449     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_SendAddGroupRequest_1
//  450   }
//  451   else
//  452     status = ZMemError;
??zclGeneral_SendAddGroupRequest_0:
        MOV       R6,#0x10
//  453 
//  454   return ( status );
??zclGeneral_SendAddGroupRequest_1:
        MOV       A,R6
        MOV       R1,A
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock32
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2
//  455 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock33 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xc
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock33
//  456 
//  457 /*********************************************************************
//  458  * @fn      zclGeneral_SendGroupGetMembershipRequest
//  459  *
//  460  * @brief   Send a Get Group Membership (Resposne) Command to a device
//  461  *
//  462  * @param   srcEP - Sending Apps endpoint
//  463  * @param   dstAddr - where to send the request
//  464  * @param   cmd - one of the following:
//  465  *                COMMAND_GROUP_GET_MEMBERSHIP
//  466  *                COMMAND_GROUP_GET_MEMBERSHIP_RSP
//  467  * @param   groupID - pointer to the group structure
//  468  * @param   groupName - pointer to Group Name.  This is a Zigbee
//  469  *          string data type, so the first byte is the length of the
//  470  *          name (in bytes), then the name.
//  471  *
//  472  * @return  ZStatus_t
//  473  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  474 ZStatus_t zclGeneral_SendGroupGetMembershipRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupGetMembershipRequest:
          CFI Block cfiBlock34 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
        CODE
//  475                                                     uint8 cmd, uint8 rspCmd, uint8 direction, uint8 capacity,
//  476                                                     uint8 grpCnt, uint16 *grpList, uint8 disableDefaultRsp, uint8 seqNum )
//  477 {
        FUNCALL zclGeneral_SendGroupGetMembershipRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupGetMembershipRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupGetMembershipRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV       ?V2,R1
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
//  478   uint8 *buf;
//  479   uint8 *pBuf;
//  480   uint8 len = 0;
        MOV       R0,#0x0
//  481   uint8 i;
//  482   ZStatus_t status;
//  483 
//  484   if ( rspCmd )
        JZ        ??zclGeneral_SendGroupGetMembershipRequest_0
//  485     len++;  // Capacity
        MOV       R0,#0x1
??zclGeneral_SendGroupGetMembershipRequest_0:
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V3,A
//  486 
//  487   len++;  // Group Count
//  488   len += sizeof ( uint16 ) * grpCnt;  // Group List
        CLR       C
        RLC       A
        INC       A
        ADD       A,R0
//  489 
//  490   buf = zcl_mem_alloc( len );
        LCALL     ?Subroutine66 & 0xFFFF
//  491   if ( buf )
??CrossCallReturnLabel_213:
        JNZ       $+5
        LJMP      ??zclGeneral_SendGroupGetMembershipRequest_1 & 0xFFFF
//  492   {
//  493     pBuf = buf;
        MOV       R0,?V0
        MOV       R1,?V1
//  494     if ( rspCmd )
        MOV       A,R7
        JZ        ??zclGeneral_SendGroupGetMembershipRequest_2
//  495       *pBuf++ = capacity;
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_183:
        MOVX      @DPTR,A
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
//  496 
//  497     *pBuf++ = grpCnt;
??zclGeneral_SendGroupGetMembershipRequest_2:
        MOV       DPL,R0
        MOV       DPH,R1
        MOV       A,?V3
        MOVX      @DPTR,A
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
//  498     for ( i = 0; i < grpCnt; i++ )
        MOV       R4,#0x0
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_84:
        SJMP      ??zclGeneral_SendGroupGetMembershipRequest_3
//  499     {
//  500       *pBuf++ = LO_UINT16( grpList[i] );
??zclGeneral_SendGroupGetMembershipRequest_4:
        MOV       A,R4
        ADD       A,0xE0 /* A   */
        MOV       ?V8,A
        CLR       A
        RLC       A
        MOV       ?V9,A
        MOV       A,R2
        ADD       A,?V8
        MOV       ?V8,A
        MOV       A,R3
        ADDC      A,?V9
        MOV       ?V9,A
        MOV       DPL,?V8
        LCALL     ?Subroutine52 & 0xFFFF
//  501       *pBuf++ = HI_UINT16( grpList[i] );
??CrossCallReturnLabel_171:
        MOV       DPL,?V8
        MOV       DPH,?V9
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x2
        MOV       R0,A
        JNC       ??zclGeneral_SendGroupGetMembershipRequest_5
        INC       R1
//  502     }
??zclGeneral_SendGroupGetMembershipRequest_5:
        INC       R4
??zclGeneral_SendGroupGetMembershipRequest_3:
        MOV       A,R4
        CLR       C
        SUBB      A,?V3
        JC        ??zclGeneral_SendGroupGetMembershipRequest_4
//  503 
//  504     status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  505                               cmd, TRUE, direction,
//  506                               disableDefaultRsp, 0, seqNum, len, buf );
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,#0x1e
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_63:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        CLR       A
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0x20
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_64:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_65:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V3,#0x1
        MOV       R0,#?V3
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,R6
        MOV       ?V3,A
        MOV       R0,#?V3
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R4,#0x4
        MOV       R5,#0x0
        MOV       R2,?V6
        MOV       R3,?V7
        MOV       R1,?V2
        LCALL     ??Subroutine106_0 & 0xFFFF
??CrossCallReturnLabel_232:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R1
        MOV       ?V3,A
//  507     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_SendGroupGetMembershipRequest_6
//  508   }
//  509   else
//  510     status = ZMemError;
??zclGeneral_SendGroupGetMembershipRequest_1:
        MOV       ?V3,#0x10
//  511 
//  512   return ( status );
??zclGeneral_SendGroupGetMembershipRequest_6:
        MOV       R1,?V3
        LJMP      ?Subroutine2 & 0xFFFF
//  513 }
          CFI EndBlock cfiBlock34

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond35 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_171
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond36 Using cfiCommon0
          CFI (cfiCond36) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond36) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond36) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond36) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond36) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond36) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond36) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond36) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond36) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond36) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond36) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond36) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond36) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond36) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond36) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond36) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond36) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond36) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond36) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond36) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond36) CFA_SP SP+-2
          CFI (cfiCond36) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker37 Using cfiCommon1
          CFI (cfiPicker37) NoFunction
          CFI (cfiPicker37) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond35
          CFI EndBlock cfiCond36
          CFI EndBlock cfiPicker37
        REQUIRE ??Subroutine96_0
        ; // Fall through to label ??Subroutine96_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine96_0:
          CFI Block cfiCond38 Using cfiCommon0
          CFI Function zclGeneral_SendGroupViewResponse
          CFI Conditional ??CrossCallReturnLabel_170
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond39) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond39) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond39) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond39) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond39) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond39) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond39) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond39) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+-2
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond40) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond40) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond40) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond40) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+-2
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker41 Using cfiCommon1
          CFI (cfiPicker41) NoFunction
          CFI (cfiPicker41) Picker
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiPicker41
//  514 
//  515 /*********************************************************************
//  516  * @fn      zclGeneral_SendGroupResponse
//  517  *
//  518  * @brief   Send Group Response (not Group View Response)
//  519  *
//  520  * @param   srcEP - Sending application's endpoint
//  521  * @param   dstAddr - where you want the message to go
//  522  * @param   cmd - either COMMAND_GROUP_ADD_RSP or COMMAND_GROUP_REMOVE_RSP
//  523  * @param   status - group command status
//  524  * @param   groupID - what group
//  525  *
//  526  * @return  ZStatus_t
//  527  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  528 ZStatus_t zclGeneral_SendGroupResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupResponse:
          CFI Block cfiBlock42 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
        CODE
//  529                                         uint8 cmd, uint8 status, uint16 groupID,
//  530                                         uint8 disableDefaultRsp, uint8 seqNum )
//  531 {
        FUNCALL zclGeneral_SendGroupResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       A,R1
        MOV       R6,A
//  532   uint8 buf[3];
//  533 
//  534   buf[0] = status;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R5
        MOVX      @DPTR,A
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
//  535   buf[1] = LO_UINT16( groupID );
??CrossCallReturnLabel_55:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
//  536   buf[2] = HI_UINT16( groupID );
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine55 & 0xFFFF
//  537 
//  538   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  539                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  540                           disableDefaultRsp, 0, seqNum, 3, buf );
??CrossCallReturnLabel_164:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       ?V2,#0x3
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_191:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_192:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,R4
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       R4,#0x4
          CFI EndBlock cfiBlock42
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
//  541 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock43 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     ??Subroutine105_0 & 0xFFFF
??CrossCallReturnLabel_229:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       A,#0x3
        LJMP      ??Subroutine101_0 & 0xFFFF
          CFI EndBlock cfiBlock43
//  542 
//  543 /*********************************************************************
//  544  * @fn      zclGeneral_SendGroupViewResponse
//  545  *
//  546  * @brief   Call to send Group Response Command
//  547  *
//  548  * @param   srcEP - Sending application's endpoint
//  549  * @param   dstAddr - where you want the message to go
//  550  * @param   cmd - either COMMAND_GROUP_ADD_RSP or COMMAND_GROUP_REMOVE_RSP
//  551  * @param   status - group command status
//  552  * @param   grp - group info
//  553  *
//  554  * @return  ZStatus_t
//  555  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  556 ZStatus_t zclGeneral_SendGroupViewResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendGroupViewResponse:
          CFI Block cfiBlock44 Using cfiCommon0
          CFI Function zclGeneral_SendGroupViewResponse
        CODE
//  557                                             uint8 status, aps_Group_t *grp, uint8 disableDefaultRsp, uint8 seqNum )
//  558 {
        FUNCALL zclGeneral_SendGroupViewResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupViewResponse, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupViewResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendGroupViewResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
        MOV       ?V8,R1
        MOV       ?V12,R2
        MOV       ?V13,R3
        MOV       ?V7,R4
        MOV       ?V9,R5
//  559   uint8 *buf;
//  560   uint8 len;
//  561   ZStatus_t stat;
//  562 
//  563   len = 1 + 2 + 1; // Status + Group ID + name length
        MOV       R0,#0x4
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
//  564 
//  565   if ( status == ZCL_STATUS_SUCCESS )
        MOV       A,?V4
        ADD       A,#0x2
        MOV       ?V2,A
        CLR       A
        ADDC      A,?V5
        MOV       ?V3,A
        MOV       A,R4
        JNZ       ??zclGeneral_SendGroupViewResponse_0
//  566   {
//  567     len += grp->name[0];  // String length
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        ADD       A,R0
        MOV       R0,A
//  568   }
//  569 
//  570   buf = zcl_mem_alloc( len );
??zclGeneral_SendGroupViewResponse_0:
        MOV       A,R0
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     ??Subroutine103_0 & 0xFFFF
//  571   if ( buf )
??CrossCallReturnLabel_216:
        JNZ       $+5
        LJMP      ??zclGeneral_SendGroupViewResponse_1 & 0xFFFF
//  572   {
//  573     buf[0] = status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V7
        MOVX      @DPTR,A
//  574     buf[1] = LO_UINT16( grp->ID );
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_180:
        MOVX      @DPTR,A
//  575     buf[2] = HI_UINT16( grp->ID );
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ?Subroutine29 & 0xFFFF
//  576 
//  577     if ( status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_177:
        MOV       A,R2
        ADD       A,#0x3
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        MOV       R1,A
        MOV       A,?V7
        JNZ       ??zclGeneral_SendGroupViewResponse_2
//  578     {
//  579       buf[3] = grp->name[0]; // string length
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine96_0 & 0xFFFF
//  580       zcl_memcpy( &buf[4], (&grp->name[1]), grp->name[0] );
??CrossCallReturnLabel_170:
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,?V4
        MOV       DPH,?V5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,?V0
        ADD       A,#0x4
        LCALL     ?Subroutine71 & 0xFFFF
//  581     }
??CrossCallReturnLabel_123:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        SJMP      ??zclGeneral_SendGroupViewResponse_3
//  582     else //ZCL_STATUS_NOT_FOUND
//  583     {
//  584       buf[3] = 0;
??zclGeneral_SendGroupViewResponse_2:
        MOV       DPL,R0
        MOV       DPH,R1
        CLR       A
        MOVX      @DPTR,A
//  585     }
//  586 
//  587     stat = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_GROUPS,
//  588                             COMMAND_GROUP_VIEW_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  589                             disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendGroupViewResponse_3:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V2,R6
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_59:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,?V9
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       R4,#0x4
        MOV       R5,#0x0
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       R1,?V8
        LCALL     ??Subroutine106_0 & 0xFFFF
??CrossCallReturnLabel_233:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R1
        MOV       R6,A
//  590     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_SendGroupViewResponse_4
//  591   }
//  592   else
//  593   {
//  594     stat = ZMemError;
??zclGeneral_SendGroupViewResponse_1:
        MOV       R6,#0x10
//  595   }
//  596 
//  597   return ( stat );
??zclGeneral_SendGroupViewResponse_4:
        MOV       A,R6
        MOV       R1,A
        LJMP      ??Subroutine114_0 & 0xFFFF
//  598 }
          CFI EndBlock cfiBlock44

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond45 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_122
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_123
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond46) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond46) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond46) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond46) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond46) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond46) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond46) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond46) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond46) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+-2
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker47 Using cfiCommon1
          CFI (cfiPicker47) NoFunction
          CFI (cfiPicker47) Picker
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiPicker47
//  599 #endif // ZCL_GROUPS
//  600 
//  601 #ifdef ZCL_SCENES
//  602 /*********************************************************************
//  603  * @fn      zclGeneral_SendAddSceneRequest
//  604  *
//  605  * @brief   Send the (Enhanced) Add Scene Request to a device. You can
//  606  *           also use the appropriate macro.
//  607  *
//  608  * @param   srcEP - Sending Apps endpoint
//  609  * @param   dstAddr - where to send the request
//  610  * @param   scene - pointer to the scene structure
//  611  * @param  cmd - COMMAND_SCENE_ADD or COMMAND_SCENE_ENHANCED_ADD
//  612  * @param   disableDefaultRsp - whether to disable the Default Response command
//  613  * @param   seqNum - sequence number
//  614  *
//  615  * @return  ZStatus_t
//  616  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  617 ZStatus_t zclGeneral_SendAddSceneRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendAddSceneRequest:
          CFI Block cfiBlock48 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
        CODE
//  618                                           uint8 cmd, zclGeneral_Scene_t *scene,
//  619                                           uint8 disableDefaultRsp, uint8 seqNum )
//  620 {
        FUNCALL zclGeneral_SendAddSceneRequest, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendAddSceneRequest, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV       A,#-0x18
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_222:
        MOV       ?V7,R1
        MOV       ?V15,R4
        MOV       ?V14,R5
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine30 & 0xFFFF
//  621   uint8 *buf;
//  622   uint8 *pBuf;
//  623   uint8 len;
//  624   ZStatus_t status;
//  625 
//  626   len = 2 + 1 + 2;    // Group ID + Scene ID + transition time
//  627   len += scene->name[0] + 1; // String + 1 for length
//  628 
//  629   // Add something for the extension field length
//  630   len += scene->extLen;
??CrossCallReturnLabel_39:
        MOV       ?V8,A
        CLR       A
        ADDC      A,R7
        MOV       ?V9,A
        MOV       DPL,?V12
        MOV       DPH,?V13
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        ADD       A,R0
        ADD       A,#0x6
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
//  631 
//  632   buf = zcl_mem_alloc( len );
        MOV       ?V2,A
        MOV       ?V3,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,?V3
        LCALL     ??Subroutine103_0 & 0xFFFF
//  633   if ( buf )
??CrossCallReturnLabel_217:
        JNZ       $+5
        LJMP      ??zclGeneral_SendAddSceneRequest_0 & 0xFFFF
//  634   {
//  635     pBuf = buf;
//  636     *pBuf++ = LO_UINT16( scene->groupID );
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_184:
        LCALL     ?Subroutine63 & 0xFFFF
//  637     *pBuf++ = HI_UINT16( scene->groupID );
??CrossCallReturnLabel_111:
        LCALL     ?Subroutine40 & 0xFFFF
//  638     *pBuf++ = scene->ID;
??CrossCallReturnLabel_68:
        INC       DPTR
        LCALL     ?Subroutine29 & 0xFFFF
//  639     *pBuf++ = LO_UINT16( scene->transTime );
??CrossCallReturnLabel_178:
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_118:
        LCALL     ?Subroutine50 & 0xFFFF
//  640     *pBuf++ = HI_UINT16( scene->transTime );
??CrossCallReturnLabel_95:
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        LCALL     ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_97:
        MOVX      @DPTR,A
//  641     *pBuf++ = scene->name[0]; // string length
        MOV       DPL,?V8
        MOV       DPH,?V9
        LCALL     ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_98:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x6
        MOV       ?V10,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V11,A
//  642     zcl_memcpy( pBuf, &(scene->name[1]), scene->name[0] );
        ; Setup parameters for call to function osal_memcpy
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_174:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       R2,?V10
        MOV       R3,?V11
        LCALL     ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_250:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
//  643     pBuf += scene->name[0]; // move pass name
//  644 
//  645     // Add the extension fields
//  646     if ( scene->extLen > 0 )
        MOV       DPL,?V12
        MOV       DPH,?V13
        MOVX      A,@DPTR
        MOV       R1,A
        JZ        ??zclGeneral_SendAddSceneRequest_1
//  647       zcl_memcpy( pBuf, scene->extField, scene->extLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,R6
        ADD       A,#0x18
        MOV       ?V4,A
        CLR       A
        ADDC      A,R7
        MOV       ?V5,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,R1
        MOV       R4,A
        MOV       R5,#0x0
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V10
        ADD       A,R0
        MOV       R2,A
        CLR       A
        ADDC      A,?V11
        MOV       R3,A
        LCALL     ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_251:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
//  648 
//  649     status = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  650                               cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  651                               disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendAddSceneRequest_1:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       A,#0x21
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_60:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       A,?V14
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V2,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       A,?V15
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       R4,#0x5
        MOV       R5,#0x0
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_85:
        MOV       R1,?V7
        LCALL     ??Subroutine106_0 & 0xFFFF
??CrossCallReturnLabel_234:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,R1
        MOV       R6,A
//  652     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_SendAddSceneRequest_2
//  653   }
//  654   else
//  655     status = ZMemError;
??zclGeneral_SendAddSceneRequest_0:
        MOV       R6,#0x10
//  656 
//  657   return ( status );
??zclGeneral_SendAddSceneRequest_2:
        MOV       A,R6
        MOV       R1,A
        MOV       A,#0x3
          CFI EndBlock cfiBlock48
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
//  658 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock49 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Valid
        MOV       R7,#0x10
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock49

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond50 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_174
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond51 Using cfiCommon0
          CFI (cfiCond51) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond51) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond51) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond51) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond51) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond51) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond51) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond51) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond51) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond51) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond51) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond51) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond51) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond51) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond51) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond51) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond51) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond51) CFA_SP SP+-2
          CFI (cfiCond51) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker52 Using cfiCommon1
          CFI (cfiPicker52) NoFunction
          CFI (cfiPicker52) Picker
        MOV       A,R6
        ADD       A,#0x8
          CFI EndBlock cfiCond50
          CFI EndBlock cfiCond51
          CFI EndBlock cfiPicker52
        REQUIRE ??Subroutine97_0
        ; // Fall through to label ??Subroutine97_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine97_0:
          CFI Block cfiCond53 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
          CFI Conditional ??CrossCallReturnLabel_173
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond54) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond54) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond54) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond54) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond54) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond54) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond54) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond54) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond54) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond54) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+-2
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond55) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond55) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond55) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond55) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond55) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond55) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond55) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond55) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond55) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond55) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond55) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond55) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+-2
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker56 Using cfiCommon1
          CFI (cfiPicker56) NoFunction
          CFI (cfiPicker56) Picker
        MOV       ?V4,A
        CLR       A
        ADDC      A,R7
        MOV       ?V5,A
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiPicker56

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond57 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_97
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_98
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond58) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond58) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond58) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond58) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond58) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond58) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond58) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond58) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond58) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond58) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond58) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+-2
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker59 Using cfiCommon1
          CFI (cfiPicker59) NoFunction
          CFI (cfiPicker59) Picker
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_147:
        INC       DPTR
        RET
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiPicker59

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond60 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond61) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond61) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond61) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond61) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond61) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond61) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond61) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+-2
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond62) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond62) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond62) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond62) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond62) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond62) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond62) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond62) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond62) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+-2
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond63) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond63) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond63) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond63) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond63) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond63) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond63) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond63) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond63) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond63) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond63) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond63) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond63) CFA_SP SP+-2
          CFI (cfiCond63) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond64) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond64) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond64) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond64) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond64) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond64) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond64) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond64) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond64) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+-2
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker65 Using cfiCommon1
          CFI (cfiPicker65) NoFunction
          CFI (cfiPicker65) Picker
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       R0,#?V2
        RET
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiPicker65

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond66 Using cfiCommon0
          CFI Function zclGeneral_SendGroupViewResponse
          CFI Conditional ??CrossCallReturnLabel_177
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond67 Using cfiCommon0
          CFI (cfiCond67) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond67) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond67) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond67) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond67) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond67) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond67) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond67) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond67) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond67) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond67) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond67) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond67) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond67) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond67) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond67) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond67) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond67) CFA_SP SP+-2
          CFI (cfiCond67) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond68) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond68) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond68) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond68) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond68) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond68) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond68) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond68) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond68) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond68) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond68) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+-2
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker69 Using cfiCommon1
          CFI (cfiPicker69) NoFunction
          CFI (cfiPicker69) Picker
        INC       DPTR
          CFI EndBlock cfiCond66
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiPicker69
        REQUIRE ??Subroutine98_0
        ; // Fall through to label ??Subroutine98_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine98_0:
          CFI Block cfiCond70 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_176
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond71) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond71) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond71) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond71) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond71) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond71) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond71) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond71) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond71) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond71) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+-2
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond72 Using cfiCommon0
          CFI (cfiCond72) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond72) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond72) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond72) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond72) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond72) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond72) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond72) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond72) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond72) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond72) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond72) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond72) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond72) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond72) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond72) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond72) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond72) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond72) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond72) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond72) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond72) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond72) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond72) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond72) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond72) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond72) CFA_SP SP+-2
          CFI (cfiCond72) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond73 Using cfiCommon0
          CFI (cfiCond73) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond73) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond73) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond73) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond73) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond73) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond73) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond73) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond73) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond73) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond73) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond73) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond73) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond73) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond73) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond73) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond73) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond73) CFA_SP SP+-2
          CFI (cfiCond73) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker74 Using cfiCommon1
          CFI (cfiPicker74) NoFunction
          CFI (cfiPicker74) Picker
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_182:
        INC       DPTR
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiCond72
          CFI EndBlock cfiCond73
          CFI EndBlock cfiPicker74

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond75 Using cfiCommon0
          CFI Function zclGeneral_SendGroupViewResponse
          CFI Conditional ??CrossCallReturnLabel_180
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond76 Using cfiCommon0
          CFI (cfiCond76) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond76) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_177
          CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond76) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond76) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond76) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond76) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond76) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond76) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond76) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond76) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond76) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond76) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond76) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond76) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond76) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond76) CFA_SP SP+-4
          CFI (cfiCond76) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_178
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond77) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond77) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond77) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond77) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond77) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond77) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond77) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond77) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond77) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond77) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond77) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond77) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_SP SP+-4
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_179
          CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond78) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond78) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond78) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond78) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond78) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond78) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond78) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond78) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond78) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond78) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond78) CFA_SP SP+-4
          CFI (cfiCond78) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_176
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-4
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_68
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond80) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond80) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond80) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond80) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond80) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+-4
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond81 Using cfiCommon0
          CFI (cfiCond81) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond81) Conditional ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_69
          CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond81) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond81) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond81) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond81) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond81) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond81) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond81) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond81) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond81) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond81) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond81) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond81) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond81) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond81) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond81) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond81) CFA_SP SP+-4
          CFI (cfiCond81) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker82 Using cfiCommon1
          CFI (cfiPicker82) NoFunction
          CFI (cfiPicker82) Picker
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_186:
        INC       DPTR
        RET
          CFI EndBlock cfiCond75
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiCond81
          CFI EndBlock cfiPicker82

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond83 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_183
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond84) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond84) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond84) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond84) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond84) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond84) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond84) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond84) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond84) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+-2
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond85 Using cfiCommon0
          CFI (cfiCond85) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond85) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_180
          CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond85) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond85) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond85) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond85) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond85) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond85) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond85) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond85) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond85) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond85) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond85) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond85) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond85) CFA_SP SP+-4
          CFI (cfiCond85) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond86 Using cfiCommon0
          CFI (cfiCond86) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond86) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_177
          CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond86) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond86) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond86) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond86) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond86) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond86) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond86) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond86) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond86) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond86) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond86) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond86) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond86) CFA_SP SP+-6
          CFI (cfiCond86) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_178
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond87) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond87) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond87) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond87) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond87) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond87) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond87) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond87) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond87) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond87) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+-6
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_179
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond88) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond88) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond88) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond88) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond88) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond88) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond88) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond88) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond88) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond88) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond88) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond88) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+-6
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_176
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond89) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond89) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond89) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond89) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond89) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond89) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+-6
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_68
          CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond90) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond90) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond90) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond90) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond90) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond90) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond90) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond90) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond90) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond90) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond90) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond90) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond90) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond90) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond90) CFA_SP SP+-6
          CFI (cfiCond90) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_181, ??CrossCallReturnLabel_69
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond91) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond91) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond91) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond91) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond91) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond91) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond91) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+-6
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_97
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond92) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond92) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond92) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond92) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond92) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond92) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond92) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond92) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond92) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond92) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+-6
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_98
          CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond93) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond93) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond93) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond93) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond93) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond93) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond93) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond93) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond93) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond93) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond93) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond93) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond93) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond93) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond93) CFA_SP SP+-6
          CFI (cfiCond93) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_95
          CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond94) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond94) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond94) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond94) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond94) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond94) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond94) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond94) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond94) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond94) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond94) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond94) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond94) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond94) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond94) CFA_SP SP+-6
          CFI (cfiCond94) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond95 Using cfiCommon0
          CFI (cfiCond95) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond95) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_96
          CFI (cfiCond95) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond95) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond95) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond95) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond95) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond95) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond95) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond95) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond95) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond95) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond95) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond95) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond95) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond95) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond95) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond95) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond95) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond95) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond95) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond95) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond95) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond95) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond95) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond95) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond95) CFA_SP SP+-6
          CFI (cfiCond95) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker96 Using cfiCommon1
          CFI (cfiPicker96) NoFunction
          CFI (cfiPicker96) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiCond85
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiCond95
          CFI EndBlock cfiPicker96
//  659 
//  660 /*********************************************************************
//  661  * @fn      zclGeneral_SendSceneRequest
//  662  *
//  663  * @brief   Send a Scene Request to a device.  You can also use the
//  664  *          appropriate macro.
//  665  *
//  666  * @param   srcEP - Sending Apps endpoint
//  667  * @param   dstAddr - where to send the request
//  668  * @param   cmd - one of the following:
//  669  *              COMMAND_SCENE_VIEW
//  670  *              COMMAND_SCENE_REMOVE
//  671  *              COMMAND_SCENE_REMOVE_ALL
//  672  *              COMMAND_SCENE_STORE
//  673  *              COMMAND_SCENE_RECALL
//  674  *              COMMAND_SCENE_GET_MEMBERSHIP
//  675  *              COMMAND_SCENE_ENHANCED_VIEW
//  676  * @param   groupID - group ID
//  677  * @param   sceneID - scene ID (not applicable to COMMAND_SCENE_REMOVE_ALL and
//  678  *                    COMMAND_SCENE_GET_MEMBERSHIP)
//  679  * @param   disableDefaultRsp - whether to disable the Default Response command
//  680  * @param   seqNum - sequence number
//  681  * @return  ZStatus_t
//  682  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  683 ZStatus_t zclGeneral_SendSceneRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneRequest:
          CFI Block cfiBlock97 Using cfiCommon0
          CFI Function zclGeneral_SendSceneRequest
        CODE
//  684                                        uint8 cmd, uint16 groupID, uint8 sceneID,
//  685                                        uint8 disableDefaultRsp, uint8 seqNum )
//  686 {
        FUNCALL zclGeneral_SendSceneRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
        MOV       R7,A
//  687   uint8 buf[3];
//  688   uint8 len = 2;
        MOV       R4,#0x2
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine32 & 0xFFFF
//  689 
//  690   buf[0] = LO_UINT16( groupID );
//  691   buf[1] = HI_UINT16( groupID );
??CrossCallReturnLabel_44:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        MOVX      @DPTR,A
//  692 
//  693   if ( cmd != COMMAND_SCENE_REMOVE_ALL && cmd != COMMAND_SCENE_GET_MEMBERSHIP )
        MOV       A,#0x3
        XRL       A,R7
        JZ        ??zclGeneral_SendSceneRequest_0
        MOV       A,#0x6
        XRL       A,R7
        JZ        ??zclGeneral_SendSceneRequest_0
//  694   {
//  695     buf[2] = sceneID;
        MOV       A,R4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R5
        MOVX      @DPTR,A
//  696     len++;
        MOV       R4,#0x3
//  697   }
//  698 
//  699   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  700                             cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  701                             disableDefaultRsp, 0, seqNum, len, buf ) );
??zclGeneral_SendSceneRequest_0:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,R4
        MOV       ?V2,A
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_193:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_194:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,R7
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       R4,#0x5
        LJMP      ?Subroutine8 & 0xFFFF
//  702 }
          CFI EndBlock cfiBlock97

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond98 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
          CFI Conditional ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond99 Using cfiCommon0
          CFI (cfiCond99) Function zclGeneral_SendSceneRequest
          CFI (cfiCond99) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond99) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond99) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond99) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond99) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond99) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond99) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond99) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond99) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond99) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond99) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond99) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond99) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond99) CFA_SP SP+-2
          CFI (cfiCond99) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker100 Using cfiCommon1
          CFI (cfiPicker100) NoFunction
          CFI (cfiPicker100) Picker
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_341:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond98
          CFI EndBlock cfiCond99
          CFI EndBlock cfiPicker100
//  703 
//  704 /*********************************************************************
//  705  * @fn      zclGeneral_SendSceneResponse
//  706  *
//  707  * @brief   Send Group Response (not Group View Response)
//  708  *
//  709  * @param   srcEP - Sending application's endpoint
//  710  * @param   dstAddr - where you want the message to go
//  711  * @param   cmd - either COMMAND_SCENE_ADD_RSP, COMMAND_SCENE_REMOVE_RSP
//  712  *                COMMAND_SCENE_STORE_RSP, or COMMAND_SCENE_REMOVE_ALL_RSP
//  713  * @param   status - scene command status
//  714  * @param   groupID - what group
//  715  * @param   sceneID - what scene (not applicable to COMMAND_SCENE_REMOVE_ALL_RSP)
//  716  *
//  717  * @return  ZStatus_t
//  718  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  719 ZStatus_t zclGeneral_SendSceneResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneResponse:
          CFI Block cfiBlock101 Using cfiCommon0
          CFI Function zclGeneral_SendSceneResponse
        CODE
//  720                                         uint8 cmd, uint8 status, uint16 groupID,
//  721                                         uint8 sceneID, uint8 disableDefaultRsp, uint8 seqNum )
//  722 {
        FUNCALL zclGeneral_SendSceneResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 4
        MOV       A,#-0x4
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
        MOV       R7,A
//  723   uint8 buf[4];
//  724   uint8 len = 1 + 2; // Status + Group ID
        MOV       R4,#0x3
//  725 
//  726   buf[0] = status;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R5
        MOVX      @DPTR,A
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
//  727   buf[1] = LO_UINT16( groupID );
??CrossCallReturnLabel_56:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
//  728   buf[2] = HI_UINT16( groupID );
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        MOVX      @DPTR,A
//  729 
//  730   if ( cmd != COMMAND_SCENE_REMOVE_ALL_RSP )
        MOV       A,R4
        XRL       A,R7
        JZ        ??zclGeneral_SendSceneResponse_0
//  731   {
//  732     buf[3] = sceneID;
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
//  733     len++;
        MOV       R4,#0x4
//  734   }
//  735 
//  736   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  737                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  738                           disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendSceneResponse_0:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,R4
        MOV       ?V2,A
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_195:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_196:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,R7
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       R4,#0x5
          CFI EndBlock cfiBlock101
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9
//  739 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiBlock102 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     ??Subroutine105_0 & 0xFFFF
??CrossCallReturnLabel_230:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,#0x4
        SJMP      ??Subroutine101_0
          CFI EndBlock cfiBlock102

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond103 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
          CFI Conditional ??CrossCallReturnLabel_55
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond104 Using cfiCommon0
          CFI (cfiCond104) Function zclGeneral_SendSceneResponse
          CFI (cfiCond104) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond104) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond104) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond104) CFA_SP SP+-2
          CFI (cfiCond104) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_57
          CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond105) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond105) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond105) CFA_SP SP+-2
          CFI (cfiCond105) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker106 Using cfiCommon1
          CFI (cfiPicker106) NoFunction
          CFI (cfiPicker106) Picker
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_347:
        MOV       R1,A
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond103
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiPicker106

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond107 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_207
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_208
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond108) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond108) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond108) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond108) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond108) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond108) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond108) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond108) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond108) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+-2
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond109) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond109) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond109) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond109) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond109) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond109) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond109) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond109) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond109) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+-2
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond110) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond110) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond110) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond110) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond110) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+-2
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond111) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond111) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond111) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond111) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond111) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond111) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond111) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond111) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond111) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond111) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond111) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond111) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond111) CFA_SP SP+-2
          CFI (cfiCond111) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond112) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond112) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond112) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond112) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond112) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond112) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond112) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond112) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond112) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+-2
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker113 Using cfiCommon1
          CFI (cfiPicker113) NoFunction
          CFI (cfiPicker113) Picker
        MOV       DPL,?V12
        MOV       DPH,?V13
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiPicker113
        REQUIRE ??Subroutine99_0
        ; // Fall through to label ??Subroutine99_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine99_0:
          CFI Block cfiCond114 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyEZModeInvoke
          CFI Conditional ??CrossCallReturnLabel_187
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function zclGeneral_SendIdentifyUpdateCommState
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+-2
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function zclGeneral_SendIdentifyUpdateCommState
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+-2
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function zclGeneral_SendGroupRequest
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+-2
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function zclGeneral_SendGroupResponse
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+-2
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function zclGeneral_SendGroupResponse
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond119) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond119) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond119) CFA_SP SP+-2
          CFI (cfiCond119) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function zclGeneral_SendSceneRequest
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+-2
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond121 Using cfiCommon0
          CFI (cfiCond121) Function zclGeneral_SendSceneRequest
          CFI (cfiCond121) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond121) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond121) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond121) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond121) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond121) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond121) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond121) CFA_SP SP+-2
          CFI (cfiCond121) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function zclGeneral_SendSceneResponse
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_195
          CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond122) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond122) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond122) CFA_SP SP+-2
          CFI (cfiCond122) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function zclGeneral_SendSceneResponse
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_196
          CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond123) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond123) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond123) CFA_SP SP+-2
          CFI (cfiCond123) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+-2
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+-2
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function zclGeneral_SendLevelControlMoveRequest
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+-2
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function zclGeneral_SendLevelControlMoveRequest
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+-2
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_201
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_SP SP+-2
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond129 Using cfiCommon0
          CFI (cfiCond129) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond129) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond129) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond129) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond129) CFA_SP SP+-2
          CFI (cfiCond129) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond130 Using cfiCommon0
          CFI (cfiCond130) Function zclGeneral_SendLevelControlStopRequest
          CFI (cfiCond130) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond130) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond130) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond130) CFA_SP SP+-2
          CFI (cfiCond130) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond131 Using cfiCommon0
          CFI (cfiCond131) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond131) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond131) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond131) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond131) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond131) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond131) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond131) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond131) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond131) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond131) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond131) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond131) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond131) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond131) CFA_SP SP+-2
          CFI (cfiCond131) CFA_XSP16 add(XSP16, 84)
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond132) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond132) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond132) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond132) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond132) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond132) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond132) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond132) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond132) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond132) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond132) CFA_SP SP+-2
          CFI (cfiCond132) CFA_XSP16 add(XSP16, 84)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond133) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond133) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond133) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond133) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond133) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond133) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond133) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond133) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond133) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+-2
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 84)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond134) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond134) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond134) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond134) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond134) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond134) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond134) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+-2
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_208
          CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond135) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond135) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond135) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond135) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond135) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond135) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond135) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond135) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond135) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond135) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond135) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond135) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond135) CFA_SP SP+-2
          CFI (cfiCond135) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond136) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond136) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond136) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond136) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond136) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond136) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond136) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond136) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond136) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond136) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond136) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond136) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond136) CFA_SP SP+-2
          CFI (cfiCond136) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond137 Using cfiCommon0
          CFI (cfiCond137) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond137) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond137) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond137) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond137) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond137) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond137) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond137) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond137) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond137) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond137) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond137) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond137) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond137) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond137) CFA_SP SP+-2
          CFI (cfiCond137) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond138) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond138) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond138) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond138) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond138) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond138) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond138) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond138) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond138) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond138) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond138) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond138) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond138) CFA_SP SP+-2
          CFI (cfiCond138) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond139) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond139) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond139) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond139) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond139) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+-2
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker140 Using cfiCommon1
          CFI (cfiPicker140) NoFunction
          CFI (cfiPicker140) Picker
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       R0,#?V1
        RET
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiCond129
          CFI EndBlock cfiCond130
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiPicker140

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock141 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R5,#0x0
        MOV       A,R6
        MOV       R1,A
          CFI EndBlock cfiBlock141
        REQUIRE ??Subroutine100_0
        ; // Fall through to label ??Subroutine100_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine100_0:
          CFI Block cfiBlock142 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     ??Subroutine106_0 & 0xFFFF
??CrossCallReturnLabel_235:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       A,#0x2
          CFI EndBlock cfiBlock142
        REQUIRE ??Subroutine101_0
        ; // Fall through to label ??Subroutine101_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine101_0:
          CFI Block cfiBlock143 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock143
        REQUIRE ??Subroutine102_0
        ; // Fall through to label ??Subroutine102_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine102_0:
          CFI Block cfiBlock144 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x4
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock144
//  740 
//  741 /*********************************************************************
//  742  * @fn      zclGeneral_SendSceneViewResponse
//  743  *
//  744  * @brief   Call to send Scene (Enahced) View Response Command. You can
//  745  *           also use the appropriate macro.
//  746  *
//  747  * @param   srcEP - Sending application's endpoint
//  748  * @param   dstAddr - where you want the message to go
//  749  * @param   cmd - either COMMAND_SCENE_VIEW_RSP or COMMAND_SCENE_ENHANCED_VIEW_RSP
//  750  * @param   status - scene command status
//  751  * @param   scene - scene info
//  752  *
//  753  * @return  ZStatus_t
//  754  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  755 ZStatus_t zclGeneral_SendSceneViewRsp( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneViewRsp:
          CFI Block cfiBlock145 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
        CODE
//  756                                        uint8 cmd, uint8 status, zclGeneral_Scene_t *scene,
//  757                                        uint8 disableDefaultRsp, uint8 seqNum )
//  758 {
        FUNCALL zclGeneral_SendSceneViewRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneViewRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV       A,#-0x18
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_223:
        MOV       ?V15,R1
        MOV       ?V14,R4
        MOV       ?V7,R5
//  759   uint8 *buf;
//  760   uint8 *pBuf;
//  761   uint8 len = 1 + 2 + 1; // Status + Group ID + Scene ID
        MOV       R0,#0x4
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine30 & 0xFFFF
//  762   ZStatus_t stat;
//  763 
//  764   if ( status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_40:
        MOV       ?V10,A
        CLR       A
        ADDC      A,R7
        MOV       ?V11,A
        MOV       A,R5
        JNZ       ??zclGeneral_SendSceneViewRsp_0
//  765   {
//  766     len += 2; // Transition Time
//  767     len += scene->name[0] + 1; // string + 1 for length
//  768 
//  769     // Add something for the extension field length
//  770     len += scene->extLen;
        MOV       DPL,?V12
        MOV       DPH,?V13
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        ADD       A,R0
        ADD       A,#0x7
        MOV       R0,A
//  771   }
//  772 
//  773   buf = zcl_mem_alloc( len );
??zclGeneral_SendSceneViewRsp_0:
        MOV       A,R0
        MOV       ?V2,A
        MOV       ?V3,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,?V3
        LCALL     ??Subroutine103_0 & 0xFFFF
//  774   if ( buf )
??CrossCallReturnLabel_218:
        JNZ       $+5
        LJMP      ??zclGeneral_SendSceneViewRsp_1 & 0xFFFF
//  775   {
//  776     pBuf = buf;
//  777     *pBuf++ = status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V7
        LCALL     ?Subroutine87 & 0xFFFF
//  778     *pBuf++ = LO_UINT16( scene->groupID );
??CrossCallReturnLabel_150:
        LCALL     ?Subroutine40 & 0xFFFF
//  779     *pBuf++ = HI_UINT16( scene->groupID );
??CrossCallReturnLabel_69:
        LCALL     ?Subroutine29 & 0xFFFF
//  780     *pBuf++ = scene->ID;
??CrossCallReturnLabel_179:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine50 & 0xFFFF
//  781     if ( status == ZCL_STATUS_SUCCESS )
??CrossCallReturnLabel_96:
        MOV       A,?V7
        JZ        $+5
        LJMP      ??zclGeneral_SendSceneViewRsp_2 & 0xFFFF
//  782     {
//  783       uint16 transTime = scene->transTime;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine46 & 0xFFFF
//  784       if ( cmd == COMMAND_SCENE_ENHANCED_VIEW_RSP )
??CrossCallReturnLabel_74:
        MOV       A,#0x41
        XRL       A,?V14
        JNZ       ??zclGeneral_SendSceneViewRsp_3
//  785       {
//  786         // Transition time is in 1/10s
//  787         transTime *= 10;
//  788         transTime += scene->transTime100ms;
        MOV       A,R0
        MOV       B,#0xa
        MUL       AB
        MOV       R0,A
        MOV       R2,B
        MOV       B,#0xa
        MOV       A,R1
        MUL       AB
        ADD       A,R2
        MOV       R1,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ADD       A,R0
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,R1
        MOV       R1,A
//  789       }
//  790 
//  791       *pBuf++ = LO_UINT16( transTime );
??zclGeneral_SendSceneViewRsp_3:
        MOV       A,R0
        MOV       DPL,?V0
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  792       *pBuf++ = HI_UINT16( transTime );
        MOV       A,R1
        MOV       DPL,?V0
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  793       *pBuf++ = scene->name[0]; // string length
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        MOV       DPL,?V0
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,?V0
        ADD       A,#0x7
        MOV       ?V8,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V9,A
//  794       if ( scene->name[0] != 0 )
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        MOV       R1,A
        JZ        ??zclGeneral_SendSceneViewRsp_4
//  795       {
//  796         zcl_memcpy( pBuf, &(scene->name[1]), scene->name[0] );
        ; Setup parameters for call to function osal_memcpy
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_175:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,R1
        MOV       R4,A
        MOV       R5,#0x0
        MOV       R2,?V8
        MOV       R3,?V9
        LCALL     ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_252:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  797         pBuf += scene->name[0]; // move pass name
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V8
        ADD       A,R0
        MOV       ?V8,A
        CLR       A
        ADDC      A,?V9
        MOV       ?V9,A
//  798       }
//  799 
//  800       // Add the extension fields
//  801       if ( scene->extLen > 0 )
??zclGeneral_SendSceneViewRsp_4:
        MOV       DPL,?V12
        MOV       DPH,?V13
        MOVX      A,@DPTR
        MOV       R1,A
        JZ        ??zclGeneral_SendSceneViewRsp_2
//  802         zcl_memcpy( pBuf, scene->extField, scene->extLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,R6
        ADD       A,#0x18
        LCALL     ??Subroutine97_0 & 0xFFFF
//  803     }
??CrossCallReturnLabel_173:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,R1
        MOV       R4,A
        MOV       R5,#0x0
        MOV       R2,?V8
        MOV       R3,?V9
        LCALL     ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_253:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  804 
//  805     stat = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  806                             cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  807                             disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendSceneViewRsp_2:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,#0x21
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_61:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       A,#0x23
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_62:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       A,?V14
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       R4,#0x5
        MOV       R5,#0x0
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_86:
        MOV       R1,?V15
        LCALL     ??Subroutine106_0 & 0xFFFF
??CrossCallReturnLabel_236:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,R1
        MOV       R6,A
//  808     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_SendSceneViewRsp_5
//  809   }
//  810   else
//  811     stat = ZMemError;
??zclGeneral_SendSceneViewRsp_1:
        MOV       R6,#0x10
//  812 
//  813   return ( stat );
??zclGeneral_SendSceneViewRsp_5:
        MOV       A,R6
        MOV       R1,A
        MOV       A,#0x2
        LJMP      ?Subroutine4 & 0xFFFF
//  814 }
          CFI EndBlock cfiBlock145

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond146 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_213
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+-2
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker148 Using cfiCommon1
          CFI (cfiPicker148) NoFunction
          CFI (cfiPicker148) Picker
        MOV       ?V4,A
        MOV       ?V5,#0x0
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,?V5
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiPicker148
        REQUIRE ??Subroutine103_0
        ; // Fall through to label ??Subroutine103_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine103_0:
          CFI Block cfiCond149 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_215
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond150) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond150) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond150) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond150) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond150) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond150) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond150) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond150) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond150) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+-2
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond151) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond151) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond151) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond151) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond151) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond151) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond151) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond151) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond151) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond151) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond151) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+-2
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond152) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond152) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond152) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond152) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond152) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond152) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond152) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond152) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond152) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+-2
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond153 Using cfiCommon0
          CFI (cfiCond153) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond153) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond153) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond153) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond153) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond153) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond153) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond153) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond153) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond153) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond153) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond153) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond153) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond153) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond153) CFA_SP SP+-2
          CFI (cfiCond153) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond154 Using cfiCommon0
          CFI (cfiCond154) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond154) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond154) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond154) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond154) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond154) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond154) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond154) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond154) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond154) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond154) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond154) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond154) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond154) CFA_SP SP+-2
          CFI (cfiCond154) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond155) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond155) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond155) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond155) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond155) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond155) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond155) CFA_SP SP+-2
          CFI (cfiCond155) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker156 Using cfiCommon1
          CFI (cfiPicker156) NoFunction
          CFI (cfiPicker156) Picker
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiCond153
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiPicker156

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond157 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_222
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond158) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond158) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond158) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond158) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond158) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond158) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond158) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond158) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond158) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond158) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond158) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond158) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond158) CFA_SP SP+-2
          CFI (cfiCond158) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond159) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond159) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond159) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond159) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond159) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond159) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond159) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+-2
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function zclGeneral_RemoveScene
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+-2
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond161 Using cfiCommon0
          CFI (cfiCond161) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond161) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond161) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond161) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond161) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond161) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond161) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond161) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond161) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond161) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond161) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond161) CFA_SP SP+-2
          CFI (cfiCond161) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker162 Using cfiCommon1
          CFI (cfiPicker162) NoFunction
          CFI (cfiPicker162) Picker
        MOV       A,R2
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiCond161
          CFI EndBlock cfiPicker162
        REQUIRE ??Subroutine104_0
        ; // Fall through to label ??Subroutine104_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine104_0:
          CFI Block cfiCond163 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_220
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_221
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+-2
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond165) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond165) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond165) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond165) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond165) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond165) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond165) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond165) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond165) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond165) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond165) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond165) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_SP SP+-2
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond166) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond166) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond166) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond166) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond166) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond166) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond166) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond166) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond166) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond166) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond166) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond166) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_SP SP+-2
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond167) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond167) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond167) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond167) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+-2
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function zclGeneral_RemoveScene
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+-2
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond169) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond169) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond169) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond169) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond169) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond169) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond169) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond169) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond169) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond169) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_SP SP+-2
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker170 Using cfiCommon1
          CFI (cfiPicker170) NoFunction
          CFI (cfiPicker170) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiPicker170

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond171 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_95
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_96
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond172) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond172) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond172) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond172) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond172) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond172) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+-2
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker173 Using cfiCommon1
          CFI (cfiPicker173) NoFunction
          CFI (cfiPicker173) Picker
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_146:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiPicker173

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond174 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_97
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_98
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond175) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond175) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+-4
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_95
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond176) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond176) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond176) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond176) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond176) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond176) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+-4
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond177 Using cfiCommon0
          CFI (cfiCond177) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond177) Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_96
          CFI (cfiCond177) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond177) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond177) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond177) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond177) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond177) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond177) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond177) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond177) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond177) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond177) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond177) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond177) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond177) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond177) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond177) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond177) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond177) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond177) CFA_SP SP+-4
          CFI (cfiCond177) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker178 Using cfiCommon1
          CFI (cfiPicker178) NoFunction
          CFI (cfiPicker178) Picker
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_185:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiCond177
          CFI EndBlock cfiPicker178

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond179 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_68
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond180) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond180) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond180) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond180) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond180) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+-2
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker181 Using cfiCommon1
          CFI (cfiPicker181) NoFunction
          CFI (cfiPicker181) Picker
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_181:
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_151:
        RET
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiPicker181

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond182 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
          CFI Conditional ??CrossCallReturnLabel_150
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_68
          CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond183) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond183) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond183) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond183) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond183) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond183) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond183) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond183) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond183) CFA_SP SP+-4
          CFI (cfiCond183) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_69
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond184) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond184) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond184) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond184) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond184) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond184) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond184) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond184) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond184) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond184) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond184) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond184) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+-4
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_111
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond185) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond185) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond185) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond185) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond185) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond185) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond185) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+-4
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_113
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond186) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond186) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond186) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond186) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond186) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond186) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond186) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond186) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond186) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+-4
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_112
          CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond187) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond187) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond187) CFA_SP SP+-4
          CFI (cfiCond187) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_107
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond188) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond188) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond188) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond188) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond188) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond188) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond188) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond188) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond188) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond188) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+-4
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_108
          CFI (cfiCond189) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond189) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond189) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond189) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond189) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond189) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond189) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond189) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond189) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond189) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond189) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond189) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond189) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond189) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond189) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond189) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond189) CFA_SP SP+-4
          CFI (cfiCond189) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker190 Using cfiCommon1
          CFI (cfiPicker190) NoFunction
          CFI (cfiPicker190) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,R6
        MOV       DPH,R7
        RET
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiPicker190

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond191 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_39
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond192) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond192) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond192) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond192) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond192) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond192) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond192) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond192) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond192) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond192) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond192) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+-2
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker193 Using cfiCommon1
          CFI (cfiPicker193) NoFunction
          CFI (cfiPicker193) Picker
        LCALL     ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_310:
        MOV       A,R6
        ADD       A,#0x17
        MOV       ?V12,A
        CLR       A
        ADDC      A,R7
        MOV       ?V13,A
        MOV       A,R6
        ADD       A,#0x7
        RET
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiPicker193
//  815 
//  816 /*********************************************************************
//  817  * @fn      zclGeneral_SendSceneGetMembershipResponse
//  818  *
//  819  * @brief   Call to send Scene Get Membership Response Command
//  820  *
//  821  * @param   srcEP - Sending application's endpoint
//  822  * @param   dstAddr - where you want the message to go
//  823  * @param   status - scene command status
//  824  * @param   capacity - remaining capacity of the scene table
//  825  * @param   sceneCnt - number of scenes in the scene list
//  826  * @param   sceneList - list of scene IDs
//  827  * @param   groupID - group ID that scene belongs to
//  828  * @param   seqNum - sequence number
//  829  *
//  830  * @return  ZStatus_t
//  831  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  832 ZStatus_t zclGeneral_SendSceneGetMembershipResponse( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendSceneGetMembershipResponse:
          CFI Block cfiBlock194 Using cfiCommon0
          CFI Function zclGeneral_SendSceneGetMembershipResponse
        CODE
//  833                                                      uint8 status, uint8 capacity, uint8 sceneCnt, uint8 *sceneList,
//  834                                                      uint16 groupID, uint8 disableDefaultRsp, uint8 seqNum )
//  835 {
        FUNCALL zclGeneral_SendSceneGetMembershipResponse, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneGetMembershipResponse, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_SendSceneGetMembershipResponse, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV       ?V2,R1
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
//  836   uint8 *buf;
//  837   uint8 *pBuf;
//  838   uint8 len = 1 + 1 + 2; // Status + Capacity + Group ID;
        MOV       R0,#0x4
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V3,A
//  839   uint8 i;
//  840   ZStatus_t stat;
//  841 
//  842   if ( status == ZCL_STATUS_SUCCESS )
        MOV       A,R4
        JNZ       ??zclGeneral_SendSceneGetMembershipResponse_0
//  843   {
//  844     len++; // Scene Count
//  845     len += sceneCnt; // Scene List (Scene ID is a single octet)
        MOV       A,#0x5
        ADD       A,?V3
        MOV       R0,A
//  846   }
//  847 
//  848   buf = zcl_mem_alloc( len );
??zclGeneral_SendSceneGetMembershipResponse_0:
        MOV       A,R0
        LCALL     ?Subroutine66 & 0xFFFF
//  849   if ( buf )
??CrossCallReturnLabel_214:
        JNZ       $+5
        LJMP      ??zclGeneral_SendSceneGetMembershipResponse_1 & 0xFFFF
//  850   {
//  851     pBuf = buf;
//  852     *pBuf++ = status;
        MOV       A,R6
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      @DPTR,A
//  853     *pBuf++ = capacity;
        MOV       A,R7
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine44 & 0xFFFF
//  854     *pBuf++ = LO_UINT16( groupID );
??CrossCallReturnLabel_73:
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  855     *pBuf++ = HI_UINT16( groupID );
        MOV       A,R1
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  856     if ( status == ZCL_STATUS_SUCCESS )
        MOV       A,R6
        JNZ       ??zclGeneral_SendSceneGetMembershipResponse_2
//  857     {
//  858       *pBuf++ = sceneCnt;
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x5
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        MOV       R1,A
//  859       for ( i = 0; i < sceneCnt; i++ )
        MOV       R4,#0x0
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_87:
        SJMP      ??zclGeneral_SendSceneGetMembershipResponse_3
//  860         *pBuf++ = sceneList[i];
??zclGeneral_SendSceneGetMembershipResponse_4:
        MOV       A,R2
        ADD       A,R4
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_172:
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        INC       R4
??zclGeneral_SendSceneGetMembershipResponse_3:
        MOV       A,R4
        CLR       C
        SUBB      A,?V3
        JC        ??zclGeneral_SendSceneGetMembershipResponse_4
//  861     }
//  862 
//  863     stat = zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  864                             COMMAND_SCENE_GET_MEMBERSHIP_RSP, TRUE,
//  865                             ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp, 0, seqNum, len, buf );
??zclGeneral_SendSceneGetMembershipResponse_2:
        ; Setup parameters for call to function zcl_SendCommand
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_66:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        CLR       A
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1e
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_67:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       ?V3,#0x1
        MOV       R0,#?V3
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       R0,#?V3
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       ?V3,#0x6
        MOV       R0,#?V3
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       R4,#0x5
        MOV       R5,#0x0
        MOV       R2,?V6
        MOV       R3,?V7
        MOV       R1,?V2
        LCALL     ??Subroutine106_0 & 0xFFFF
??CrossCallReturnLabel_237:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,R1
        MOV       ?V3,A
//  866     zcl_mem_free( buf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_SendSceneGetMembershipResponse_5
//  867   }
//  868   else
//  869     stat = ZMemError;
??zclGeneral_SendSceneGetMembershipResponse_1:
        MOV       ?V3,#0x10
//  870 
//  871   return ( stat );
??zclGeneral_SendSceneGetMembershipResponse_5:
        MOV       R1,?V3
        MOV       R7,#0xa
        LJMP      ?BANKED_LEAVE_XDATA
//  872 }
          CFI EndBlock cfiBlock194

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond195 Using cfiCommon0
          CFI Function zclGeneral_SendIdentifyEZModeInvoke
          CFI Conditional ??CrossCallReturnLabel_227
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function zclGeneral_SendIdentify
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+-2
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-2
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker198 Using cfiCommon1
          CFI (cfiPicker198) NoFunction
          CFI (cfiPicker198) Picker
        MOV       R4,#0x3
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiPicker198
        REQUIRE ??Subroutine105_0
        ; // Fall through to label ??Subroutine105_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine105_0:
          CFI Block cfiCond199 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
          CFI Conditional ??CrossCallReturnLabel_229
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function zclGeneral_SendSceneRequest
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+-2
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+-2
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function zclGeneral_SendSceneResponse
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond202) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond202) CFA_SP SP+-2
          CFI (cfiCond202) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+-2
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function zclGeneral_SendIdentifyEZModeInvoke
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+-2
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function zclGeneral_SendIdentify
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond205) CFA_SP SP+-2
          CFI (cfiCond205) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond206) CFA_SP SP+-2
          CFI (cfiCond206) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker207 Using cfiCommon1
          CFI (cfiPicker207) NoFunction
          CFI (cfiPicker207) Picker
        MOV       R5,#0x0
        MOV       A,R6
        MOV       R1,A
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiPicker207
        REQUIRE ??Subroutine106_0
        ; // Fall through to label ??Subroutine106_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine106_0:
          CFI Block cfiCond208 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_231
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond209) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond209) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond209) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond209) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond209) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond209) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond209) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond209) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond209) CFA_SP SP+-2
          CFI (cfiCond209) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function zclGeneral_SendGroupViewResponse
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_233
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-2
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_234
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond211) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond211) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond211) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond211) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond211) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond211) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond211) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+-2
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 38)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function zclGeneral_SendIdentifyUpdateCommState
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+-2
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function zclGeneral_SendLevelControlMoveRequest
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+-2
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function zclGeneral_SendGroupRequest
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+-2
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_236
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond215) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond215) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond215) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond215) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond215) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond215) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond215) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond215) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond215) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+-2
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond216) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond216) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond216) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond216) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond216) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+-2
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function zclGeneral_SendLevelControlStopRequest
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+-2
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function zclGeneral_SendGroupResponse
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+-2
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function zclGeneral_SendSceneRequest
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+-2
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond220) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond220) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond220) CFA_SP SP+-2
          CFI (cfiCond220) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function zclGeneral_SendSceneResponse
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+-2
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-2
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function zclGeneral_SendIdentifyEZModeInvoke
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+-2
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function zclGeneral_SendIdentify
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+-2
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function zclGeneral_SendIdentifyQueryResponse
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-2
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker226 Using cfiCommon1
          CFI (cfiPicker226) NoFunction
          CFI (cfiPicker226) Picker
        LCALL     `??zcl_SendCommand::?relay`; Banked call to: zcl_SendCommand
        MOV       A,#0xb
        RET
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiPicker226

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond227 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_72
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond228) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond228) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+-2
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker229 Using cfiCommon1
          CFI (cfiPicker229) NoFunction
          CFI (cfiPicker229) Picker
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_342:
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiPicker229

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond230 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_63
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond231 Using cfiCommon0
          CFI (cfiCond231) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond231) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond231) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond231) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond231) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond231) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond231) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond231) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond231) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond231) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond231) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond231) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond231) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond231) CFA_SP SP+-2
          CFI (cfiCond231) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function zclGeneral_SendGroupGetMembershipRequest
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond232) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond232) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond232) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond232) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond232) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond232) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond232) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond232) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+-2
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond233) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond233) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond233) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+-2
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond234) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond234) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond234) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond234) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond234) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+-2
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker235 Using cfiCommon1
          CFI (cfiPicker235) NoFunction
          CFI (cfiPicker235) Picker
        MOVX      A,@DPTR
        MOV       ?V3,A
        MOV       R0,#?V3
        RET
          CFI EndBlock cfiCond230
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiPicker235
//  873 
//  874 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  875 /*********************************************************************
//  876  * @fn      zclGeneral_SendSceneCopy
//  877  *
//  878  * @brief   Send Scene Copy Request to a device
//  879  *
//  880  * @param   srcEP - sending application's endpoint
//  881  * @param   dstAddr - where to send the request
//  882  * @param   mode - how scene copy is to proceed
//  883  * @param   groupIDFrom - group from which scene to be copied
//  884  * @param   sceneIDFrom - scene from which scene to be copied
//  885  * @param   groupIDTo - group to which scene to be copied
//  886  * @param   sceneIDTo - scene to which scene to be copied
//  887  * @param   disableDefaultRsp - disable Default Response command
//  888  * @param   seqNum - the identification number for the transaction
//  889  *
//  890  * @return  ZStatus_t
//  891  */
//  892 ZStatus_t zclGeneral_SendSceneCopy( uint8 srcEP, afAddrType_t *dstAddr,
//  893                                     uint8 mode, uint16 groupIDFrom, uint8 sceneIDFrom,
//  894                                     uint16 groupIDTo, uint8 sceneIDTo,
//  895                                     uint8 disableDefaultRsp, uint8 seqNum )
//  896 {
//  897   uint8 buf[7];
//  898 
//  899   buf[0] = mode;
//  900   buf[1] = LO_UINT16( groupIDFrom );
//  901   buf[2] = HI_UINT16( groupIDFrom );
//  902   buf[3] = sceneIDFrom;
//  903   buf[4] = LO_UINT16( groupIDTo );
//  904   buf[5] = HI_UINT16( groupIDTo );
//  905   buf[6] = sceneIDTo;
//  906 
//  907   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  908                             COMMAND_SCENE_COPY, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  909                             disableDefaultRsp, 0, seqNum, 7, buf ) );
//  910 }
//  911 
//  912 /*********************************************************************
//  913  * @fn      zclGeneral_SendSceneCopyResponse
//  914  *
//  915  * @brief   Send Scene Copy Response to a device
//  916  *
//  917  * @param   srcEP - sending application's endpoint
//  918  * @param   dstAddr - where to send the request
//  919  * @param   status - status of copy scene attemp
//  920  * @param   groupIDFrom - group from which scene was copied
//  921  * @param   sceneIDFrom - scene from which scene was copied
//  922  * @param   disableDefaultRsp - disable Default Response command
//  923  * @param   seqNum - the identification number for the transaction
//  924  *
//  925  * @return  ZStatus_t
//  926  */
//  927 ZStatus_t zclGeneral_SendSceneCopyResponse( uint8 srcEP, afAddrType_t *dstAddr,
//  928                                             uint8 status, uint16 groupIDFrom, uint8 sceneIDFrom,
//  929                                             uint8 disableDefaultRsp, uint8 seqNum )
//  930 {
//  931   uint8 buf[4];
//  932 
//  933   buf[0] = status;
//  934   buf[1] = LO_UINT16( groupIDFrom );
//  935   buf[2] = HI_UINT16( groupIDFrom );
//  936   buf[3] = sceneIDFrom;
//  937 
//  938   return ( zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_SCENES,
//  939                             COMMAND_SCENE_COPY_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
//  940                             disableDefaultRsp, 0, seqNum, 4, buf ) );
//  941 }
//  942 #endif // ZCL_LIGHT_LINK_ENHANCE
//  943 #endif // ZCL_SCENES
//  944 
//  945 #ifdef ZCL_ON_OFF
//  946 #ifdef ZCL_LIGHT_LINK_ENHANCE
//  947 /*********************************************************************
//  948  * @fn      zclGeneral_SendOnOff_CmdOffWithEffect
//  949  *
//  950  * @brief   Call to send out an Off with Effect Command.
//  951  *
//  952  * @param   srcEP - Sending application's endpoint
//  953  * @param   dstAddr - where you want the message to go
//  954  * @param   effectId - fading effect to use when switching light off
//  955  * @param   effectVariant - which variant of effect to be triggered
//  956  * @param   disableDefaultRsp - whether to disable the Default Response command
//  957  * @param   seqNum - sequence number
//  958  *
//  959  * @return  ZStatus_t
//  960  */
//  961 ZStatus_t zclGeneral_SendOnOff_CmdOffWithEffect( uint8 srcEP, afAddrType_t *dstAddr,
//  962                                                  uint8 effectId, uint8 effectVariant,
//  963                                                  uint8 disableDefaultRsp, uint8 seqNum )
//  964 {
//  965   uint8 buf[2];
//  966 
//  967   buf[0] = effectId;
//  968   buf[1] = effectVariant;
//  969 
//  970   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF,
//  971                           COMMAND_OFF_WITH_EFFECT, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
//  972                           disableDefaultRsp, 0, seqNum, 2, buf );
//  973 }
//  974 
//  975 /*********************************************************************
//  976  * @fn      zclGeneral_SendOnOff_CmdOnWithTimedOff
//  977  *
//  978  * @brief   Call to send out an On with Timed Off Command.
//  979  *
//  980  * @param   srcEP - Sending application's endpoint
//  981  * @param   dstAddr - where you want the message to go
//  982  * @param   onOffCtrl - how the lamp is to be operated
//  983  * @param   onTime - the length of time (in 1/10ths second) that the lamp is to remain on, before automatically turning off
//  984  * @param   offWaitTime - the length of time (in 1/10ths second) that the lamp shall remain off, and guarded to prevent an on command turning the light back on.
//  985  * @param   disableDefaultRsp - whether to disable the Default Response command
//  986  * @param   seqNum - sequence number
//  987  *
//  988  * @return  ZStatus_t
//  989  */
//  990 ZStatus_t zclGeneral_SendOnOff_CmdOnWithTimedOff ( uint8 srcEP, afAddrType_t *dstAddr,
//  991                                                    zclOnOffCtrl_t onOffCtrl, uint16 onTime, uint16 offWaitTime,
//  992                                                    uint8 disableDefaultRsp, uint8 seqNum )
//  993 {
//  994   uint8 buf[5];
//  995 
//  996   buf[0] = onOffCtrl.byte;
//  997   buf[1] = LO_UINT16( onTime );
//  998   buf[2] = HI_UINT16( onTime );
//  999   buf[3] = LO_UINT16( offWaitTime );
// 1000   buf[4] = HI_UINT16( offWaitTime );
// 1001 
// 1002   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ON_OFF,
// 1003                           COMMAND_ON_WITH_TIMED_OFF, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1004                           disableDefaultRsp, 0, seqNum, 5, buf );
// 1005 }
// 1006 #endif // ZCL_LIGHT_LINK_ENHANCE
// 1007 #endif // ZCL_ON_OFF
// 1008 
// 1009 #ifdef ZCL_LEVEL_CTRL
// 1010 /*********************************************************************
// 1011  * @fn      zclGeneral_SendLevelControlMoveToLevelRequest
// 1012  *
// 1013  * @brief   Call to send out a Level Control Request. You can also use
// 1014  *          the appropriate macro.
// 1015  *
// 1016  * @param   srcEP - Sending application's endpoint
// 1017  * @param   dstAddr - where you want the message to go
// 1018  * @param   cmd - one of the following:
// 1019  *              COMMAND_LEVEL_MOVE_TO_LEVEL or
// 1020  *              COMMAND_LEVEL_MOVE_TO_LEVEL_WITH_ON_OFF
// 1021  * @param   level - what level to move to
// 1022  * @param   transitionTime - how long to take to get to the level (in seconds)
// 1023  *
// 1024  * @return  ZStatus_t
// 1025  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1026 ZStatus_t zclGeneral_SendLevelControlMoveToLevelRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendLevelControlMoveToLevelRequest:
          CFI Block cfiBlock236 Using cfiCommon0
          CFI Function zclGeneral_SendLevelControlMoveToLevelRequest
        CODE
// 1027                                                          uint8 cmd, uint8 level, uint16 transTime,
// 1028                                                          uint8 disableDefaultRsp, uint8 seqNum )
// 1029 {
        FUNCALL zclGeneral_SendLevelControlMoveToLevelRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 3
        MOV       A,#-0x3
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       A,R1
        MOV       R6,A
// 1030   uint8 buf[3];
// 1031 
// 1032   buf[0] = level;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R5
        MOVX      @DPTR,A
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine37 & 0xFFFF
// 1033   buf[1] = LO_UINT16( transTime );
??CrossCallReturnLabel_57:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
// 1034   buf[2] = HI_UINT16( transTime );
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine55 & 0xFFFF
// 1035 
// 1036   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1037                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1038                           disableDefaultRsp, 0, seqNum, 3, buf );
??CrossCallReturnLabel_165:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       ?V2,#0x3
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_197:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_198:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,R4
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       R4,#0x8
        LJMP      ?Subroutine8 & 0xFFFF
// 1039 }
          CFI EndBlock cfiBlock236
// 1040 
// 1041 /*********************************************************************
// 1042  * @fn      zclGeneral_SendLevelControlMoveRequest
// 1043  *
// 1044  * @brief   Call to send out a Level Control Request. You can also use
// 1045  *          the appropriate macro.
// 1046  *
// 1047  * @param   srcEP - Sending application's endpoint
// 1048  * @param   dstAddr - where you want the message to go
// 1049  * @param   cmd - one of the following:
// 1050  *              COMMAND_LEVEL_MOVE or
// 1051  *              COMMAND_LEVEL_MOVE_WITH_ON_OFF
// 1052  * @param   moveMode - LEVEL_MOVE_UP or
// 1053  *                     LEVEL_MOVE_DOWN
// 1054  * @param   rate - number of steps to take per second
// 1055  *
// 1056  * @return  ZStatus_t
// 1057  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1058 ZStatus_t zclGeneral_SendLevelControlMoveRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendLevelControlMoveRequest:
          CFI Block cfiBlock237 Using cfiCommon0
          CFI Function zclGeneral_SendLevelControlMoveRequest
        CODE
// 1059                                                   uint8 cmd, uint8 moveMode, uint8 rate,
// 1060                                                   uint8 disableDefaultRsp, uint8 seqNum )
// 1061 {
        FUNCALL zclGeneral_SendLevelControlMoveRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       A,R1
        MOV       R6,A
// 1062   uint8 buf[2];
// 1063 
// 1064   buf[0] = moveMode;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R5
        MOVX      @DPTR,A
// 1065   buf[1] = rate;
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine95_0 & 0xFFFF
// 1066 
// 1067   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1068                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1069                           disableDefaultRsp, 0, seqNum, 2, buf );
??CrossCallReturnLabel_169:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       ?V2,#0x2
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_199:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_200:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,R4
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R4,#0x8
        LJMP      ?Subroutine0 & 0xFFFF
// 1070 }
          CFI EndBlock cfiBlock237
// 1071 
// 1072 /*********************************************************************
// 1073  * @fn      zclGeneral_SendLevelControlStepRequest
// 1074  *
// 1075  * @brief   Call to send out a Level Control Request. You can also use
// 1076  *          the appropriate macro.
// 1077  *
// 1078  * @param   srcEP - Sending application's endpoint
// 1079  * @param   dstAddr - where you want the message to go
// 1080  * @param   cmd - one of the following:
// 1081  *              COMMAND_LEVEL_STEP
// 1082  *              COMMAND_LEVEL_STEP_WITH_ON_OFF
// 1083  * @param   stepMode - LEVEL_STEP_UP or
// 1084  *                     LEVEL_STEP_DOWN
// 1085  * @param   amount - number of levels to step
// 1086  * @param   transitionTime - time, in 1/10ths of a second, to take to perform the step
// 1087  *
// 1088  * @return  ZStatus_t
// 1089  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1090 ZStatus_t zclGeneral_SendLevelControlStepRequest( uint8 srcEP, afAddrType_t *dstAddr,
zclGeneral_SendLevelControlStepRequest:
          CFI Block cfiBlock238 Using cfiCommon0
          CFI Function zclGeneral_SendLevelControlStepRequest
        CODE
// 1091                                                   uint8 cmd, uint8 stepMode, uint8 stepSize, uint16 transTime,
// 1092                                                   uint8 disableDefaultRsp, uint8 seqNum )
// 1093 {
        FUNCALL zclGeneral_SendLevelControlStepRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 4
        MOV       A,#-0x4
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R1
        MOV       R6,A
// 1094   uint8 buf[4];
// 1095 
// 1096   buf[0] = stepMode;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R5
        MOVX      @DPTR,A
// 1097   buf[1] = stepSize;
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine46 & 0xFFFF
// 1098   buf[2] = LO_UINT16( transTime );
??CrossCallReturnLabel_75:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
// 1099   buf[3] = HI_UINT16( transTime );
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine55 & 0xFFFF
// 1100 
// 1101   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1102                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1103                           disableDefaultRsp, 0, seqNum, 4, buf );
??CrossCallReturnLabel_166:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       ?V2,#0x4
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_201:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        CLR       A
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,#0x1a
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_202:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,R4
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       R4,#0x8
        LJMP      ?Subroutine9 & 0xFFFF
// 1104 }
          CFI EndBlock cfiBlock238
// 1105 
// 1106 /*********************************************************************
// 1107  * @fn      zclGeneral_SendLevelControlStepRequest
// 1108  *
// 1109  * @brief   Call to send out a Level Control Request. You can also use
// 1110  *          the appropriate macro.
// 1111  *
// 1112  * @param   srcEP - Sending application's endpoint
// 1113  * @param   dstAddr - where you want the message to go
// 1114  * @param   cmd - one of the following:
// 1115  *              COMMAND_LEVEL_STOP
// 1116  *              COMMAND_LEVEL_STOP_WITH_ON_OFF
// 1117  *
// 1118  * @return  ZStatus_t
// 1119  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1120 ZStatus_t zclGeneral_SendLevelControlStopRequest( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
zclGeneral_SendLevelControlStopRequest:
          CFI Block cfiBlock239 Using cfiCommon0
          CFI Function zclGeneral_SendLevelControlStopRequest
        CODE
// 1121                                                   uint8 disableDefaultRsp, uint8 seqNum )
// 1122 {
        FUNCALL zclGeneral_SendLevelControlStopRequest, zcl_SendCommand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 1123   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
// 1124                           cmd, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1125                           disableDefaultRsp, 0, seqNum, 0, NULL );
        ; Setup parameters for call to function zcl_SendCommand
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_203:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R5
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R4
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R4,#0x8
        MOV       R5,#0x0
        LCALL     ??Subroutine106_0 & 0xFFFF
??CrossCallReturnLabel_238:
        LJMP      ??Subroutine101_0 & 0xFFFF
// 1126 }
          CFI EndBlock cfiBlock239
// 1127 #endif // ZCL_LEVEL_CTRL
// 1128 
// 1129 #ifdef ZCL_ALARMS
// 1130 /*********************************************************************
// 1131  * @fn      zclGeneral_SendAlarm
// 1132  *
// 1133  * @brief   Call to send out an Alarm Request Command
// 1134  *
// 1135  * @param   srcEP - Sending application's endpoint
// 1136  * @param   dstAddr - where you want the message to go
// 1137  * @param   cmd - COMMAND_ALARMS_ALARM
// 1138  * @param   alarmCode - code for the cause of the alarm
// 1139  * @param   clusterID - cluster whose attribute generate the alarm
// 1140  *
// 1141  * @return  ZStatus_t
// 1142  */
// 1143 ZStatus_t zclGeneral_SendAlarm( uint8 srcEP, afAddrType_t *dstAddr,
// 1144                                 uint8 alarmCode, uint16 clusterID,
// 1145                                 uint8 disableDefaultRsp, uint8 seqNum )
// 1146 {
// 1147   uint8 buf[3];
// 1148 
// 1149   buf[0] = alarmCode;
// 1150   buf[1] = LO_UINT16( clusterID );
// 1151   buf[2] = HI_UINT16( clusterID );
// 1152 
// 1153   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1154                           COMMAND_ALARMS_ALARM, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1155                           disableDefaultRsp, 0, seqNum, 3, buf );
// 1156 }
// 1157 
// 1158 /*********************************************************************
// 1159  * @fn      zclGeneral_SendAlarmReset
// 1160  *
// 1161  * @brief   Call to send out an Alarm Reset Command
// 1162  *
// 1163  * @param   srcEP - Sending application's endpoint
// 1164  * @param   dstAddr - where you want the message to go
// 1165  * @param   alarmCode - code for the cause of the alarm
// 1166  * @param   clusterID - cluster whose attribute generate the alarm
// 1167  *
// 1168  * @return  ZStatus_t
// 1169 */
// 1170 ZStatus_t zclGeneral_SendAlarmReset( uint8 srcEP, afAddrType_t *dstAddr,
// 1171                                      uint8 alarmCode, uint16 clusterID,
// 1172                                      uint8 disableDefaultRsp, uint8 seqNum )
// 1173 {
// 1174   uint8 buf[3];
// 1175 
// 1176   buf[0] = alarmCode;
// 1177   buf[1] = LO_UINT16( clusterID );
// 1178   buf[2] = HI_UINT16( clusterID );
// 1179 
// 1180   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1181                           COMMAND_ALARMS_RESET, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1182                           disableDefaultRsp, 0, seqNum, 3, buf );
// 1183 }
// 1184 
// 1185 /*********************************************************************
// 1186  * @fn      zclGeneral_SendAlarmGetResponse
// 1187  *
// 1188  * @brief   Call to send out an Alarm Get Response Command
// 1189  *
// 1190  * @param   srcEP - Sending application's endpoint
// 1191  * @param   dstAddr - where you want the message to go
// 1192  * @param   status - SUCCESS or NOT_FOUND
// 1193  * @param   alarmCode - code for the cause of the alarm
// 1194  * @param   clusterID - cluster whose attribute generate the alarm
// 1195  * @param   timeStamp - time at which the alarm occured
// 1196  *
// 1197  * @return  ZStatus_t
// 1198  */
// 1199 ZStatus_t zclGeneral_SendAlarmGetResponse( uint8 srcEP, afAddrType_t *dstAddr,
// 1200                                            uint8 status, uint8 alarmCode, uint16 clusterID,
// 1201                                            uint32 timeStamp, uint8 disableDefaultRsp, uint8 seqNum )
// 1202 {
// 1203   uint8 buf[8];
// 1204   uint8 len = 1; // Status
// 1205 
// 1206   buf[0] = status;
// 1207   if ( status == ZCL_STATUS_SUCCESS )
// 1208   {
// 1209     len += 1 + 2 + 4; // Alarm code + Cluster ID + Time stamp
// 1210     buf[1] = alarmCode;
// 1211     buf[2] = LO_UINT16( clusterID );
// 1212     buf[3] = HI_UINT16( clusterID );
// 1213     zcl_buffer_uint32( &buf[4], timeStamp );
// 1214   }
// 1215 
// 1216   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1217                           COMMAND_ALARMS_GET_RSP, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1218                           disableDefaultRsp, 0, seqNum, len, buf );
// 1219 }
// 1220 
// 1221 #ifdef SE_UK_EXT
// 1222 /*********************************************************************
// 1223  * @fn      zclGeneral_SendAlarmGetEventLog
// 1224  *
// 1225  * @brief   Call to send out an Alarm Get Event Log Command
// 1226  *
// 1227  * @param   srcEP - Sending application's endpoint
// 1228  * @param   dstAddr - where you want the message to go
// 1229  * @param   pEventLog - pointer to Get Event Log Command
// 1230  * @param   disableDefaultRsp - disable default response
// 1231  * @param   seqNum - ZCL sequence number
// 1232  *
// 1233  * @return  ZStatus_t
// 1234  */
// 1235 ZStatus_t zclGeneral_SendAlarmGetEventLog( uint8 srcEP, afAddrType_t *dstAddr,
// 1236                                            zclGetEventLog_t *pEventLog,
// 1237                                            uint8 disableDefaultRsp, uint8 seqNum )
// 1238 {
// 1239   uint8 buf[10];
// 1240 
// 1241   buf[0] = pEventLog->logID;
// 1242   zcl_buffer_uint32( &buf[1], pEventLog->startTime );
// 1243   zcl_buffer_uint32( &buf[5], pEventLog->endTime );
// 1244   buf[9] = pEventLog->numEvents;
// 1245 
// 1246   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1247                           COMMAND_ALARMS_GET_EVENT_LOG, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1248                           disableDefaultRsp, 0, seqNum, 10, buf );
// 1249 }
// 1250 
// 1251 /*********************************************************************
// 1252  * @fn      zclGeneral_SendAlarmPublishEventLog
// 1253  *
// 1254  * @brief   Call to send out an Alarm Publish Event Log Command
// 1255  *
// 1256  * @param   srcEP - Sending application's endpoint
// 1257  * @param   dstAddr - where you want the message to go
// 1258  * @param   pEventLog - pointer to Publish Event Log Command
// 1259  * @param   disableDefaultRsp - disable default response
// 1260  * @param   seqNum - ZCL sequence number
// 1261  *
// 1262  * @return  ZStatus_t
// 1263  */
// 1264 ZStatus_t zclGeneral_SendAlarmPublishEventLog( uint8 srcEP, afAddrType_t *dstAddr,
// 1265                                                zclPublishEventLog_t *pEventLog,
// 1266                                                uint8 disableDefaultRsp, uint8 seqNum )
// 1267 {
// 1268   uint8 *buf;
// 1269   uint8 *pBuf;
// 1270   uint8 bufLen;
// 1271 
// 1272   // Log ID + Command Index + Total Commands + (numSubLogs * ( Event ID + Event Time))
// 1273   bufLen = 1 + 1 + 1 + (pEventLog->numSubLogs * (1 + 4));
// 1274 
// 1275   buf = zcl_mem_alloc( bufLen );
// 1276   if ( buf == NULL )
// 1277   {
// 1278     return (ZMemError);
// 1279   }
// 1280 
// 1281   pBuf = buf;
// 1282   *pBuf++ = pEventLog->logID;
// 1283   *pBuf++ = pEventLog->cmdIndex;
// 1284   *pBuf++ = pEventLog->totalCmds;
// 1285 
// 1286   for ( uint8 i = 0; i < pEventLog->numSubLogs; i++ )
// 1287   {
// 1288     zclEventLogPayload_t *pLogs = &(pEventLog->pLogs[i]);
// 1289 
// 1290     *pBuf++ = pLogs->eventId;
// 1291     pBuf = zcl_buffer_uint32( pBuf, pLogs->eventTime );
// 1292   }
// 1293 
// 1294   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_ALARMS,
// 1295                           COMMAND_ALARMS_PUBLISH_EVENT_LOG, TRUE, ZCL_FRAME_CLIENT_SERVER_DIR,
// 1296                           disableDefaultRsp, 0, seqNum, bufLen, buf );
// 1297 }
// 1298 #endif // SE_UK_EXT
// 1299 #endif // ZCL_ALARMS
// 1300 
// 1301 #ifdef ZCL_LOCATION
// 1302 /*********************************************************************
// 1303  * @fn      zclGeneral_SendLocationSetAbsolute
// 1304  *
// 1305  * @brief   Call to send out a Set Absolute Location Command
// 1306  *
// 1307  * @param   srcEP - Sending application's endpoint
// 1308  * @param   dstAddr - where you want the message to go
// 1309  * @param   absLoc - absolute location info
// 1310  *
// 1311  * @return  ZStatus_t
// 1312  */
// 1313 ZStatus_t zclGeneral_SendLocationSetAbsolute( uint8 srcEP, afAddrType_t *dstAddr,
// 1314                                               zclLocationAbsolute_t *absLoc,
// 1315                                               uint8 disableDefaultRsp, uint8 seqNum )
// 1316 {
// 1317    uint8 buf[10]; // 5 fields (2 octects each)
// 1318 
// 1319    buf[0] = LO_UINT16( absLoc->coordinate1 );
// 1320    buf[1] = HI_UINT16( absLoc->coordinate1 );
// 1321    buf[2] = LO_UINT16( absLoc->coordinate2 );
// 1322    buf[3] = HI_UINT16( absLoc->coordinate2 );
// 1323    buf[4] = LO_UINT16( absLoc->coordinate3 );
// 1324    buf[5] = HI_UINT16( absLoc->coordinate3 );
// 1325    buf[6] = LO_UINT16( absLoc->power );
// 1326    buf[7] = HI_UINT16( absLoc->power );
// 1327    buf[8] = LO_UINT16( absLoc->pathLossExponent );
// 1328    buf[9] = HI_UINT16( absLoc->pathLossExponent );
// 1329 
// 1330    return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1331                            COMMAND_LOCATION_SET_ABSOLUTE, TRUE,
// 1332                            ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 10, buf );
// 1333 }
// 1334 
// 1335 /*********************************************************************
// 1336  * @fn      zclGeneral_SendLocationSetDevCfg
// 1337  *
// 1338  * @brief   Call to send out a Set Device Configuration Command
// 1339  *
// 1340  * @param   srcEP - Sending application's endpoint
// 1341  * @param   dstAddr - where you want the message to go
// 1342  * @param   devCfg - device configuration info
// 1343  *
// 1344  * @return  ZStatus_t
// 1345  */
// 1346 ZStatus_t zclGeneral_SendLocationSetDevCfg( uint8 srcEP, afAddrType_t *dstAddr,
// 1347                                             zclLocationDevCfg_t *devCfg,
// 1348                                             uint8 disableDefaultRsp, uint8 seqNum )
// 1349 {
// 1350    uint8 buf[9];  // 4 fields (2 octects each) + 1 field with 1 octect
// 1351 
// 1352    buf[0] = LO_UINT16( devCfg->power );
// 1353    buf[1] = HI_UINT16( devCfg->power );
// 1354    buf[2] = LO_UINT16( devCfg->pathLossExponent );
// 1355    buf[3] = HI_UINT16( devCfg->pathLossExponent );
// 1356    buf[4] = LO_UINT16( devCfg->calcPeriod );
// 1357    buf[5] = HI_UINT16( devCfg->calcPeriod );
// 1358    buf[6] = devCfg->numMeasurements;
// 1359    buf[7] = LO_UINT16( devCfg->reportPeriod );
// 1360    buf[8] = HI_UINT16( devCfg->reportPeriod );
// 1361 
// 1362    return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1363                            COMMAND_LOCATION_SET_DEV_CFG, TRUE,
// 1364                            ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 9, buf );
// 1365 }
// 1366 
// 1367 /*********************************************************************
// 1368  * @fn      zclGeneral_SendLocationGetDevCfg
// 1369  *
// 1370  * @brief   Call to send out a Get Device Configuration Command
// 1371  *
// 1372  * @param   srcEP - Sending application's endpoint
// 1373  * @param   dstAddr - where you want the message to go
// 1374  * @param   targetAddr - device for which location parameters are being requested
// 1375  *
// 1376  * @return  ZStatus_t
// 1377  */
// 1378 ZStatus_t zclGeneral_SendLocationGetDevCfg( uint8 srcEP, afAddrType_t *dstAddr,
// 1379                                             uint8 *targetAddr, uint8 disableDefaultRsp, uint8 seqNum )
// 1380 {
// 1381   uint8 buf[8];
// 1382 
// 1383   zcl_memcpy( buf, targetAddr, 8 );
// 1384 
// 1385   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1386                           COMMAND_LOCATION_GET_DEV_CFG, TRUE,
// 1387                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, 8, buf );
// 1388 }
// 1389 
// 1390 /*********************************************************************
// 1391  * @fn      zclGeneral_SendLocationGetData
// 1392  *
// 1393  * @brief   Call to send out a Get Location Data Command
// 1394  *
// 1395  * @param   srcEP - Sending application's endpoint
// 1396  * @param   dstAddr - where you want the message to go
// 1397  * @param   locaData - location information and channel parameters that are requested.
// 1398  *
// 1399  * @return  ZStatus_t
// 1400  */
// 1401 ZStatus_t zclGeneral_SendLocationGetData( uint8 srcEP, afAddrType_t *dstAddr,
// 1402                                           zclLocationGetData_t *locData,
// 1403                                           uint8 disableDefaultRsp, uint8 seqNum )
// 1404 {
// 1405   uint8 buf[10]; // bitmap (1) + number responses (1) + IEEE Address (8)
// 1406   uint8 *pBuf = buf;
// 1407   uint8 len = 2; // bitmap + number responses
// 1408 
// 1409   *pBuf  = locData->absoluteOnly;
// 1410   *pBuf |= locData->recalculate << 1;
// 1411   *pBuf |= locData->brdcastIndicator << 2;
// 1412   *pBuf |= locData->brdcastResponse << 3;
// 1413   *pBuf |= locData->compactResponse << 4;
// 1414   pBuf++;  // move past the bitmap field
// 1415 
// 1416   *pBuf++ = locData->numResponses;
// 1417 
// 1418   if ( locData->brdcastIndicator == 0 )
// 1419   {
// 1420     zcl_memcpy( pBuf, locData->targetAddr, 8 );
// 1421     len += 8; // ieee addr
// 1422   }
// 1423 
// 1424   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1425                           COMMAND_LOCATION_GET_DATA, TRUE,
// 1426                           ZCL_FRAME_CLIENT_SERVER_DIR, disableDefaultRsp, 0, seqNum, len, buf );
// 1427 }
// 1428 
// 1429 /*********************************************************************
// 1430  * @fn      zclGeneral_SendLocationDevCfgResponse
// 1431  *
// 1432  * @brief   Call to send out a Device Configuration Response Command
// 1433  *
// 1434  * @param   srcEP - Sending application's endpoint
// 1435  * @param   dstAddr - where you want the message to go
// 1436  * @param   devCfg - device's location parameters that are requested
// 1437  *
// 1438  * @return  ZStatus_t
// 1439  */
// 1440 ZStatus_t zclGeneral_SendLocationDevCfgResponse( uint8 srcEP, afAddrType_t *dstAddr,
// 1441                                                  zclLocationDevCfgRsp_t *devCfg,
// 1442                                                  uint8 disableDefaultRsp, uint8 seqNum )
// 1443 {
// 1444   uint8 buf[10]; // 4 fields (2 octects each) + 2 fields (1 octect each)
// 1445   uint8 len = 1; // Status
// 1446 
// 1447   buf[0] = devCfg->status;
// 1448   if ( devCfg->status == ZCL_STATUS_SUCCESS )
// 1449   {
// 1450     buf[1] = LO_UINT16( devCfg->data.power );
// 1451     buf[2] = HI_UINT16( devCfg->data.power );
// 1452     buf[3] = LO_UINT16( devCfg->data.pathLossExponent );
// 1453     buf[4] = HI_UINT16( devCfg->data.pathLossExponent );
// 1454     buf[5] = LO_UINT16( devCfg->data.calcPeriod );
// 1455     buf[6] = HI_UINT16( devCfg->data.calcPeriod );
// 1456     buf[7] = devCfg->data.numMeasurements;
// 1457     buf[8] = LO_UINT16( devCfg->data.reportPeriod );
// 1458     buf[9] = HI_UINT16( devCfg->data.reportPeriod );
// 1459     len += 9;
// 1460   }
// 1461 
// 1462   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1463                           COMMAND_LOCATION_DEV_CFG_RSP, TRUE,
// 1464                           ZCL_FRAME_SERVER_CLIENT_DIR, disableDefaultRsp, 0, seqNum, len, buf );
// 1465 }
// 1466 
// 1467 /*********************************************************************
// 1468  * @fn      zclGeneral_SendLocationData
// 1469  *
// 1470  * @brief   Call to send out location data
// 1471  *
// 1472  * @param   srcEP - Sending application's endpoint
// 1473  * @param   dstAddr - where you want the message to go
// 1474  * @param   status - indicates whether response to request was successful or not
// 1475  * @param   locData - location information and channel parameters being sent
// 1476  *
// 1477  * @return  ZStatus_t
// 1478  */
// 1479 ZStatus_t zclGeneral_SendLocationData( uint8 srcEP, afAddrType_t *dstAddr, uint8 cmd,
// 1480                                        uint8 status, zclLocationData_t *locData,
// 1481                                        uint8 disableDefaultRsp, uint8 seqNum )
// 1482 {
// 1483   uint8 buf[16];
// 1484   uint8 *pBuf = buf;
// 1485   uint8 len = 0;
// 1486 
// 1487   if ( cmd == COMMAND_LOCATION_DATA_RSP )
// 1488   {
// 1489     // Only response command includes a status field
// 1490     *pBuf++ = status;
// 1491     len++;
// 1492   }
// 1493 
// 1494   if ( cmd != COMMAND_LOCATION_DATA_RSP || status == ZCL_STATUS_SUCCESS )
// 1495   {
// 1496     // Notification or Response with successful status
// 1497     *pBuf++ = locData->type;
// 1498     *pBuf++ = LO_UINT16( locData->absLoc.coordinate1 );
// 1499     *pBuf++ = HI_UINT16( locData->absLoc.coordinate1 );
// 1500     *pBuf++ = LO_UINT16( locData->absLoc.coordinate2 );
// 1501     *pBuf++ = HI_UINT16( locData->absLoc.coordinate2 );
// 1502     len += 5;
// 1503 
// 1504     if ( locationType2D(locData->type) == 0 )
// 1505     {
// 1506       // 2D location doesn't have coordinate 3
// 1507       *pBuf++ = LO_UINT16( locData->absLoc.coordinate3 );
// 1508       *pBuf++ = HI_UINT16( locData->absLoc.coordinate3 );
// 1509       len += 2;
// 1510     }
// 1511 
// 1512     if ( cmd != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 1513     {
// 1514       // Compact notification doesn't include these fields
// 1515       *pBuf++ = LO_UINT16( locData->absLoc.power );
// 1516       *pBuf++ = HI_UINT16( locData->absLoc.power );
// 1517       *pBuf++ = LO_UINT16( locData->absLoc.pathLossExponent );
// 1518       *pBuf++ = HI_UINT16( locData->absLoc.pathLossExponent );
// 1519       len += 4;
// 1520     }
// 1521 
// 1522     if ( locationTypeAbsolute(locData->type) == 0 )
// 1523     {
// 1524       // Absolute location doesn't include these fields
// 1525       if ( cmd != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 1526       {
// 1527         // Compact notification doesn't include this field
// 1528         *pBuf++ = locData->calcLoc.locationMethod;
// 1529         len++;
// 1530       }
// 1531 
// 1532       *pBuf++ = locData->calcLoc.qualityMeasure;
// 1533       *pBuf++ = LO_UINT16( locData->calcLoc.locationAge );
// 1534       *pBuf++ = HI_UINT16( locData->calcLoc.locationAge );
// 1535       len += 3;
// 1536     }
// 1537   }
// 1538 
// 1539   return zcl_SendCommand( srcEP, dstAddr, ZCL_CLUSTER_ID_GEN_LOCATION,
// 1540                           cmd, TRUE, ZCL_FRAME_SERVER_CLIENT_DIR,
// 1541                           disableDefaultRsp, 0, seqNum, len, buf );
// 1542 }
// 1543 #endif // ZCL_LOCATION
// 1544 
// 1545 /*********************************************************************
// 1546  * @fn      zclGeneral_FindCallbacks
// 1547  *
// 1548  * @brief   Find the callbacks for an endpoint
// 1549  *
// 1550  * @param   endpoint - endpoint to find the application callbacks for
// 1551  *
// 1552  * @return  pointer to the callbacks
// 1553  */
// 1554 static zclGeneral_AppCallbacks_t *zclGeneral_FindCallbacks( uint8 endpoint )
// 1555 {
// 1556   zclGenCBRec_t *pCBs;
// 1557 
// 1558   pCBs = zclGenCBs;
// 1559   while ( pCBs )
// 1560   {
// 1561     if ( pCBs->endpoint == endpoint )
// 1562       return ( pCBs->CBs );
// 1563     pCBs = pCBs->next;
// 1564   }
// 1565   return ( (zclGeneral_AppCallbacks_t *)NULL );
// 1566 }
// 1567 
// 1568 /*********************************************************************
// 1569  * @fn      zclGeneral_HdlIncoming
// 1570  *
// 1571  * @brief   Callback from ZCL to process incoming Commands specific
// 1572  *          to this cluster library or Profile commands for attributes
// 1573  *          that aren't in the attribute list
// 1574  *
// 1575  *
// 1576  * @param   pInMsg - pointer to the incoming message
// 1577  *
// 1578  * @return  ZStatus_t
// 1579  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1580 static ZStatus_t zclGeneral_HdlIncoming( zclIncoming_t *pInMsg )
zclGeneral_HdlIncoming:
          CFI Block cfiBlock240 Using cfiCommon0
          CFI Function zclGeneral_HdlIncoming
        CODE
// 1581 {
        FUNCALL zclGeneral_HdlIncoming, zclGeneral_HdlInSpecificCommands
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1582   ZStatus_t stat = ZSuccess;
// 1583 
// 1584 #if defined ( INTER_PAN )
// 1585   if ( StubAPS_InterPan( pInMsg->msg->srcAddr.panId, pInMsg->msg->srcAddr.endPoint ) )
// 1586     return ( stat ); // Cluster not supported thru Inter-PAN
// 1587 #endif
// 1588   if ( zcl_ClusterCmd( pInMsg->hdr.fc.type ) )
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x7
        XRL       A,#0x1
        JNZ       ??zclGeneral_HdlIncoming_0
// 1589   {
// 1590     // Is this a manufacturer specific command?
// 1591     if ( pInMsg->hdr.fc.manuSpecific == 0 )
// 1592     {
// 1593       stat = zclGeneral_HdlInSpecificCommands( pInMsg );
        ; Setup parameters for call to function zclGeneral_HdlInSpecificCommands
        LCALL     `??zclGeneral_HdlInSpecificCommands::?relay`; Banked call to: zclGeneral_HdlInSpecificCommands
        MOV       A,R1
        MOV       R1,A
        SJMP      ??zclGeneral_HdlIncoming_1
// 1594     }
// 1595     else
// 1596     {
// 1597       // We don't support any manufacturer specific command.
// 1598       stat = ZFailure;
// 1599     }
// 1600   }
// 1601   else
// 1602   {
// 1603     // Handle all the normal (Read, Write...) commands -- should never get here
// 1604     stat = ZFailure;
??zclGeneral_HdlIncoming_0:
        MOV       R1,#0x1
// 1605   }
// 1606   return ( stat );
??zclGeneral_HdlIncoming_1:
        LJMP      ?Subroutine5 & 0xFFFF
// 1607 }
          CFI EndBlock cfiBlock240
// 1608 
// 1609 /*********************************************************************
// 1610  * @fn      zclGeneral_HdlInSpecificCommands
// 1611  *
// 1612  * @brief   Callback from ZCL to process incoming Commands specific
// 1613  *          to this cluster library
// 1614 
// 1615  * @param   pInMsg - pointer to the incoming message
// 1616  *
// 1617  * @return  ZStatus_t
// 1618  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1619 static ZStatus_t zclGeneral_HdlInSpecificCommands( zclIncoming_t *pInMsg )
zclGeneral_HdlInSpecificCommands:
          CFI Block cfiBlock241 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
        CODE
// 1620 {
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInIdentity
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInGroupsServer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInGroupsClient
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInScenesServer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInScenesClient
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_HdlInSpecificCommands, zclGeneral_ProcessInLevelControl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1621   ZStatus_t stat;
// 1622   zclGeneral_AppCallbacks_t *pCBs;
// 1623 
// 1624   // make sure endpoint exists
// 1625   pCBs = zclGeneral_FindCallbacks( pInMsg->msg->endPoint );
        LCALL     ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_240:
        MOV       A,R0
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_132:
        MOV       R4,A
        MOV       DPTR,#zclGenCBs
??zclGeneral_HdlInSpecificCommands_0:
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_256:
        JZ        ??zclGeneral_HdlInSpecificCommands_1
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        JNZ       ??zclGeneral_HdlInSpecificCommands_0
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_141:
        MOV       R5,A
// 1626   if ( pCBs == NULL )
        MOV       A,R4
        ORL       A,R5
        JZ        ??zclGeneral_HdlInSpecificCommands_1
// 1627     return ( ZFailure );
// 1628 
// 1629   switch ( pInMsg->msg->clusterId )
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?US_SWITCH_DENSE
`?<Jumptable for zclGeneral_HdlInSpecificComman_0`:
        DATA
        DATA16
        DATA
        DATA16
        DW        0
        DATA
        DATA8
        DATA
        DATA8
        DB        8
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_3
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_4
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_5
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_6
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_7
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_2
        DATA
        DATA16
        DATA
        DATA16
        DW        ??zclGeneral_HdlInSpecificCommands_8
        CODE
// 1630   {
// 1631 #ifdef ZCL_BASIC
// 1632     case ZCL_CLUSTER_ID_GEN_BASIC:
// 1633       stat = zclGeneral_ProcessInBasic( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_3:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        JNZ       ??zclGeneral_HdlInSpecificCommands_9
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        JZ        ??zclGeneral_HdlInSpecificCommands_10
??zclGeneral_HdlInSpecificCommands_2:
        MOV       R6,#0x1
        LJMP      ??zclGeneral_HdlInSpecificCommands_11 & 0xFFFF
??zclGeneral_HdlInSpecificCommands_1:
        MOV       R1,#0x1
        LJMP      ??zclGeneral_HdlInSpecificCommands_12 & 0xFFFF
??zclGeneral_HdlInSpecificCommands_10:
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_28:
        JZ        ??zclGeneral_HdlInSpecificCommands_9
        ; Setup parameters for indirect call
        LCALL     ?CALL_IND
??zclGeneral_HdlInSpecificCommands_9:
        MOV       R6,#0x0
        SJMP      ??zclGeneral_HdlInSpecificCommands_11
// 1634       break;
// 1635 #endif // ZCL_BASIC
// 1636 
// 1637 #ifdef ZCL_IDENTIFY
// 1638     case ZCL_CLUSTER_ID_GEN_IDENTIFY:
// 1639       stat = zclGeneral_ProcessInIdentity( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_4:
        ; Setup parameters for call to function zclGeneral_ProcessInIdentity
        LCALL     `??zclGeneral_ProcessInIdentity::?relay`; Banked call to: zclGeneral_ProcessInIdentity
        SJMP      ??zclGeneral_HdlInSpecificCommands_13
// 1640       break;
// 1641 #endif // ZCL_IDENTIFY
// 1642 
// 1643 #ifdef ZCL_GROUPS
// 1644     case ZCL_CLUSTER_ID_GEN_GROUPS:
// 1645       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
??zclGeneral_HdlInSpecificCommands_5:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        JNZ       ??zclGeneral_HdlInSpecificCommands_14
// 1646         stat = zclGeneral_ProcessInGroupsServer( pInMsg );
        ; Setup parameters for call to function zclGeneral_ProcessInGroupsServer
        LCALL     `??zclGeneral_ProcessInGroupsServer::?relay`; Banked call to: zclGeneral_ProcessInGroupsServer
        SJMP      ??zclGeneral_HdlInSpecificCommands_13
// 1647       else
// 1648         stat = zclGeneral_ProcessInGroupsClient( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_14:
        ; Setup parameters for call to function zclGeneral_ProcessInGroupsClient
        LCALL     `??zclGeneral_ProcessInGroupsClient::?relay`; Banked call to: zclGeneral_ProcessInGroupsClient
        SJMP      ??zclGeneral_HdlInSpecificCommands_13
// 1649       break;
// 1650 #endif // ZCL_GROUPS
// 1651 
// 1652 #ifdef ZCL_SCENES
// 1653     case ZCL_CLUSTER_ID_GEN_SCENES:
// 1654       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
??zclGeneral_HdlInSpecificCommands_6:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        JNZ       ??zclGeneral_HdlInSpecificCommands_15
// 1655         stat = zclGeneral_ProcessInScenesServer( pInMsg, pCBs );
        ; Setup parameters for call to function zclGeneral_ProcessInScenesServer
        LCALL     `??zclGeneral_ProcessInScenesServer::?relay`; Banked call to: zclGeneral_ProcessInScenesServer
        SJMP      ??zclGeneral_HdlInSpecificCommands_13
// 1656       else
// 1657         stat = zclGeneral_ProcessInScenesClient( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_15:
        ; Setup parameters for call to function zclGeneral_ProcessInScenesClient
        LCALL     `??zclGeneral_ProcessInScenesClient::?relay`; Banked call to: zclGeneral_ProcessInScenesClient
        SJMP      ??zclGeneral_HdlInSpecificCommands_13
// 1658       break;
// 1659 #endif // ZCL_SCENES
// 1660 
// 1661 #ifdef ZCL_ON_OFF
// 1662     case ZCL_CLUSTER_ID_GEN_ON_OFF:
// 1663       stat = zclGeneral_ProcessInOnOff( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_7:
        MOV       R7,#0x0
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        JNZ       ??zclGeneral_HdlInSpecificCommands_16
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        JZ        ??zclGeneral_HdlInSpecificCommands_17
        DEC       A
        JZ        ??zclGeneral_HdlInSpecificCommands_17
        DEC       A
        JNZ       ??zclGeneral_HdlInSpecificCommands_18
??zclGeneral_HdlInSpecificCommands_17:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_29:
        JZ        ??zclGeneral_HdlInSpecificCommands_16
        ; Setup parameters for indirect call
        MOV       A,R2
        MOV       R1,A
        LCALL     ?CALL_IND
        SJMP      ??zclGeneral_HdlInSpecificCommands_16
??zclGeneral_HdlInSpecificCommands_18:
        MOV       R7,#0x1
??zclGeneral_HdlInSpecificCommands_16:
        MOV       A,R7
        SJMP      ??zclGeneral_HdlInSpecificCommands_19
// 1664       //stat = zclGeneral_ProcessInOnOffTest( pInMsg );
// 1665       break;
// 1666 #endif // ZCL_ON_OFF
// 1667 
// 1668 #ifdef ZCL_LEVEL_CTRL
// 1669     case ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL:
// 1670       stat = zclGeneral_ProcessInLevelControl( pInMsg, pCBs );
??zclGeneral_HdlInSpecificCommands_8:
        ; Setup parameters for call to function zclGeneral_ProcessInLevelControl
        LCALL     `??zclGeneral_ProcessInLevelControl::?relay`; Banked call to: zclGeneral_ProcessInLevelControl
??zclGeneral_HdlInSpecificCommands_13:
        MOV       A,R1
??zclGeneral_HdlInSpecificCommands_19:
        MOV       R6,A
// 1671       break;
// 1672 #endif // ZCL_LEVEL_CTRL
// 1673 
// 1674 #ifdef ZCL_ALARMS
// 1675     case ZCL_CLUSTER_ID_GEN_ALARMS:
// 1676       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1677         stat = zclGeneral_ProcessInAlarmsServer( pInMsg, pCBs );
// 1678       else
// 1679         stat = zclGeneral_ProcessInAlarmsClient( pInMsg, pCBs );
// 1680       break;
// 1681 #endif // ZCL_ALARMS
// 1682 
// 1683 #ifdef ZCL_LOCATION
// 1684     case ZCL_CLUSTER_ID_GEN_LOCATION:
// 1685       if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1686         stat = zclGeneral_ProcessInLocationServer( pInMsg, pCBs );
// 1687       else
// 1688         stat = zclGeneral_ProcessInLocationClient( pInMsg, pCBs );
// 1689       break;
// 1690 #endif // ZCL_LOCATION
// 1691 
// 1692     case ZCL_CLUSTER_ID_GEN_POWER_CFG:
// 1693     case ZCL_CLUSTER_ID_GEN_DEVICE_TEMP_CONFIG:
// 1694     case ZCL_CLUSTER_ID_GEN_ON_OFF_SWITCH_CONFIG:
// 1695     case ZCL_CLUSTER_ID_GEN_TIME:
// 1696     default:
// 1697       stat = ZFailure;
// 1698       break;
// 1699   }
// 1700 
// 1701   return ( stat );
??zclGeneral_HdlInSpecificCommands_11:
        MOV       A,R6
        MOV       R1,A
??zclGeneral_HdlInSpecificCommands_12:
        LJMP      ??Subroutine125_0 & 0xFFFF
// 1702 }
          CFI EndBlock cfiBlock241

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond242 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_240
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+-2
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker244 Using cfiCommon1
          CFI (cfiPicker244) NoFunction
          CFI (cfiPicker244) Picker
        MOV       DPL,R2
        MOV       DPH,R3
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiPicker244
        REQUIRE ??Subroutine107_0
        ; // Fall through to label ??Subroutine107_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine107_0:
          CFI Block cfiCond245 Using cfiCommon0
          CFI Function zclGeneral_ReadSceneCountCB
          CFI Conditional ??CrossCallReturnLabel_239
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+-2
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+-2
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker248 Using cfiCommon1
          CFI (cfiPicker248) NoFunction
          CFI (cfiPicker248) Picker
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_344:
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
        RET
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiPicker248
// 1703 
// 1704 #ifdef ZCL_BASIC
// 1705 /*********************************************************************
// 1706  * @fn      zclGeneral_ProcessInBasic
// 1707  *
// 1708  * @brief   Process in the received Basic Command.
// 1709  *
// 1710  * @param   pInMsg - pointer to the incoming message
// 1711  *
// 1712  * @return  ZStatus_t
// 1713  */
// 1714 static ZStatus_t zclGeneral_ProcessInBasic( zclIncoming_t *pInMsg,
// 1715                                             zclGeneral_AppCallbacks_t *pCBs )
// 1716 {
// 1717   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 1718   {
// 1719     if ( pInMsg->hdr.commandID > COMMAND_BASIC_RESET_FACT_DEFAULT )
// 1720       return ( ZFailure );   // Error ignore the command
// 1721 
// 1722     if ( pCBs->pfnBasicReset )
// 1723       pCBs->pfnBasicReset();
// 1724   }
// 1725   // no Client command
// 1726 
// 1727   return ( ZSuccess );
// 1728 }
// 1729 #endif // ZCL_BASIC
// 1730 
// 1731 #ifdef ZCL_IDENTIFY
// 1732 /*********************************************************************
// 1733  * @fn      zclGeneral_ProcessInIdentity
// 1734  *
// 1735  * @brief   Process in the received Identity Command.
// 1736  *
// 1737  * @param   pInMsg - pointer to the incoming message
// 1738  *
// 1739  * @return  ZStatus_t
// 1740  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1741 static ZStatus_t zclGeneral_ProcessInIdentity( zclIncoming_t *pInMsg,
zclGeneral_ProcessInIdentity:
          CFI Block cfiBlock249 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
        CODE
// 1742                                                zclGeneral_AppCallbacks_t *pCBs )
// 1743 {
        FUNCALL zclGeneral_ProcessInIdentity, bdb_ZclIdentifyCmdInd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInIdentity, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInIdentity, zclGeneral_SendIdentifyQueryResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInIdentity, bdb_ZclIdentifyQueryCmdInd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       ?V0,R2
        MOV       ?V1,R3
// 1744   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInIdentity_0 & 0xFFFF
// 1745   {
// 1746     if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY )
        MOV       A,R0
        JNZ       ??zclGeneral_ProcessInIdentity_1
// 1747     {
// 1748       uint16 identifyTime;
// 1749       
// 1750       identifyTime = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
// 1751       
// 1752       bdb_ZclIdentifyCmdInd( identifyTime, pInMsg->msg->endPoint);
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine123_0 & 0xFFFF
// 1753     }
??CrossCallReturnLabel_337:
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        ; Setup parameters for call to function bdb_ZclIdentifyCmdInd
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_242:
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_142:
        MOV       R3,A
        MOV       A,R4
        MOV       R2,A
        LCALL     `??bdb_ZclIdentifyCmdInd::?relay`; Banked call to: bdb_ZclIdentifyCmdInd
        LJMP      ??zclGeneral_ProcessInIdentity_2 & 0xFFFF
// 1754     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_QUERY )
??zclGeneral_ProcessInIdentity_1:
        MOV       A,#0x1
        XRL       A,R0
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInIdentity_3 & 0xFFFF
// 1755     {
// 1756       uint16 identifyTime = 0;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 1757 
// 1758       // Retrieve Identify Time
// 1759       zcl_ReadAttrData( pInMsg->msg->endPoint, pInMsg->msg->clusterId,
// 1760                         ATTRID_IDENTIFY_TIME, (uint8 *)&identifyTime, NULL );
        LCALL     ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_241:
        ; Setup parameters for call to function zcl_ReadAttrData
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_88:
        MOV       A,R6
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_133:
        MOV       R1,A
        LCALL     `??zcl_ReadAttrData::?relay`; Banked call to: zcl_ReadAttrData
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1761 
// 1762       // Is device identifying itself?
// 1763       if ( identifyTime > 0 )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_258:
        JZ        ??zclGeneral_ProcessInIdentity_2
// 1764       {
// 1765         zclGeneral_SendIdentifyQueryResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1766                                               identifyTime, true, pInMsg->hdr.transSeqNum );
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_305:
        ; Setup parameters for call to function zclGeneral_SendIdentifyQueryResponse
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_54:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_26:
        LCALL     `??zclGeneral_SendIdentifyQueryResponse::?relay`; Banked call to: zclGeneral_SendIdentifyQueryResponse
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1767         return ( ZCL_STATUS_CMD_HAS_RSP );
        MOV       R1,#-0x1
        SJMP      ??zclGeneral_ProcessInIdentity_4
// 1768       }
// 1769     }
// 1770 
// 1771 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 1772     else if ( pInMsg->hdr.commandID == COMMAND_IDENTIFY_TRIGGER_EFFECT )
// 1773     {
// 1774       if ( pCBs->pfnIdentifyTriggerEffect )
// 1775       {
// 1776         zclIdentifyTriggerEffect_t cmd;
// 1777 
// 1778         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 1779         cmd.effectId = pInMsg->pData[0];
// 1780         cmd.effectVariant = pInMsg->pData[1];
// 1781 
// 1782         pCBs->pfnIdentifyTriggerEffect( &cmd );
// 1783       }
// 1784     }
// 1785 #endif //ZCL_LIGHT_LINK_ENHANCE
// 1786     else
// 1787     {
// 1788       return ( ZFailure );   // Error ignore the command
// 1789     }
// 1790   }
// 1791   else // Client Command
// 1792   {
// 1793     if ( pInMsg->hdr.commandID > COMMAND_IDENTIFY_QUERY_RSP )
??zclGeneral_ProcessInIdentity_0:
        MOV       A,R0
        JZ        ??zclGeneral_ProcessInIdentity_5
// 1794       return ( ZFailure );   // Error ignore the command
??zclGeneral_ProcessInIdentity_3:
        MOV       R1,#0x1
        SJMP      ??zclGeneral_ProcessInIdentity_4
// 1795 
// 1796     zclIdentifyQueryRsp_t rsp;
// 1797     
// 1798     rsp.srcAddr = &(pInMsg->msg->srcAddr);
??zclGeneral_ProcessInIdentity_5:
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_156:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ?Subroutine64 & 0xFFFF
// 1799     rsp.timeout = BUILD_UINT16( pInMsg->pData[0], pInMsg->pData[1] );
??CrossCallReturnLabel_115:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_101:
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_143:
        MOV       R1,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        LCALL     ??Subroutine115_0 & 0xFFFF
// 1800     
// 1801     bdb_ZclIdentifyQueryCmdInd( &rsp );
??CrossCallReturnLabel_289:
        ; Setup parameters for call to function bdb_ZclIdentifyQueryCmdInd
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??bdb_ZclIdentifyQueryCmdInd::?relay`; Banked call to: bdb_ZclIdentifyQueryCmdInd
// 1802   }
// 1803   return ( ZSuccess );
??zclGeneral_ProcessInIdentity_2:
        MOV       R1,#0x0
??zclGeneral_ProcessInIdentity_4:
        MOV       A,#0x6
        LJMP      ??Subroutine101_0 & 0xFFFF
// 1804 }
          CFI EndBlock cfiBlock249

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond250 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_141
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-2
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_142
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-2
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_143
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-2
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_26
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+-4
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_27
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-4
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_144
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond256) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond256) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond256) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond256) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond256) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond256) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond256) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond256) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond256) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond256) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+-2
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker257 Using cfiCommon1
          CFI (cfiPicker257) NoFunction
          CFI (cfiPicker257) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiPicker257

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond258 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_132
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond259 Using cfiCommon0
          CFI (cfiCond259) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond259) Conditional ??CrossCallReturnLabel_133
          CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond259) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond259) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond259) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond259) CFA_SP SP+-2
          CFI (cfiCond259) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker260 Using cfiCommon1
          CFI (cfiPicker260) NoFunction
          CFI (cfiPicker260) Picker
        LCALL     ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_158:
        RET
          CFI EndBlock cfiCond258
          CFI EndBlock cfiCond259
          CFI EndBlock cfiPicker260

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond261 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_158, ??CrossCallReturnLabel_132
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_158, ??CrossCallReturnLabel_133
          CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond262) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond262) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond262) CFA_SP SP+-4
          CFI (cfiCond262) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond263 Using cfiCommon0
          CFI (cfiCond263) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond263) Conditional ??CrossCallReturnLabel_159, ??CrossCallReturnLabel_154, ??CrossCallReturnLabel_26
          CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond263) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond263) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond263) CFA_SP SP+-6
          CFI (cfiCond263) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond264 Using cfiCommon0
          CFI (cfiCond264) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond264) Conditional ??CrossCallReturnLabel_159, ??CrossCallReturnLabel_154, ??CrossCallReturnLabel_27
          CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond264) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond264) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond264) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond264) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond264) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond264) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond264) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond264) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond264) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond264) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond264) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond264) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond264) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond264) CFA_SP SP+-6
          CFI (cfiCond264) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_159, ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_126
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond265) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond265) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond265) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond265) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond265) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond265) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond265) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+-6
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 79)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_159, ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_127
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond266) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond266) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond266) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond266) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond266) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond266) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+-6
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond267 Using cfiCommon0
          CFI (cfiCond267) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond267) Conditional ??CrossCallReturnLabel_159, ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_128
          CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond267) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond267) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond267) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond267) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond267) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond267) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond267) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond267) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond267) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond267) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond267) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond267) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond267) CFA_SP SP+-6
          CFI (cfiCond267) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_159, ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_129
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+-6
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_159, ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_130
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond269) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond269) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond269) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond269) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond269) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond269) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond269) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+-6
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_159, ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_131
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond270) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond270) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond270) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond270) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond270) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond270) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond270) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond270) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond270) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+-6
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiPicker271 Using cfiCommon1
          CFI (cfiPicker271) NoFunction
          CFI (cfiPicker271) Picker
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiCond263
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiPicker271

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond272 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_114
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_115
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+-2
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker274 Using cfiCommon1
          CFI (cfiPicker274) NoFunction
          CFI (cfiPicker274) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiPicker274

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond275 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_84
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond276 Using cfiCommon0
          CFI (cfiCond276) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond276) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond276) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond276) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond276) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond276) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond276) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond276) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond276) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond276) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond276) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond276) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond276) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond276) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond276) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond276) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond276) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond276) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond276) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond276) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond276) CFA_SP SP+-2
          CFI (cfiCond276) CFA_XSP16 add(XSP16, 38)
          CFI Block cfiCond277 Using cfiCommon0
          CFI (cfiCond277) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond277) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond277) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond277) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond277) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond277) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond277) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond277) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond277) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond277) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond277) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond277) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond277) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond277) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond277) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond277) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond277) CFA_SP SP+-2
          CFI (cfiCond277) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond278) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond278) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond278) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond278) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond278) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond278) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond278) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond278) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond278) CFA_SP SP+-2
          CFI (cfiCond278) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond279 Using cfiCommon0
          CFI (cfiCond279) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond279) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond279) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond279) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond279) CFA_SP SP+-2
          CFI (cfiCond279) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond280) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond280) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond280) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond280) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond280) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond280) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond280) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond280) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond280) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond280) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond280) CFA_SP SP+-2
          CFI (cfiCond280) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function zclGeneral_RemoveScene
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+-2
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+-2
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+-2
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker284 Using cfiCommon1
          CFI (cfiPicker284) NoFunction
          CFI (cfiPicker284) Picker
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_287:
        RET
          CFI EndBlock cfiCond275
          CFI EndBlock cfiCond276
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiPicker284

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond285 Using cfiCommon0
          CFI Function zclGeneral_SendGroupGetMembershipRequest
          CFI Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_84
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_85
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond286) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond286) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond286) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond286) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond286) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond286) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+-4
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 38)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_86
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond287) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond287) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond287) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond287) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond287) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+-4
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_87
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+-4
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_88
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+-4
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_89
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond290) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond290) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond290) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond290) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+-4
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function zclGeneral_RemoveScene
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_90
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-4
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_91
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+-4
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_92
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond293) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+-4
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_282
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+-4
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_283
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-4
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_284
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+-4
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_280
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+-4
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_281
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-4
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function zclGeneral_CountScenes
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_279
          CFI (cfiCond299) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond299) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond299) CFA_SP SP+-9
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_314
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond300) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond300) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond300) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond300) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond300) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond300) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond300) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond300) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond300) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+-4
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_315
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond301) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond301) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond301) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond301) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond301) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond301) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond301) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond301) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond301) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+-4
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_82
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+-4
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_83
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+-4
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker304 Using cfiCommon1
          CFI (cfiPicker304) NoFunction
          CFI (cfiPicker304) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        RET
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiPicker304
// 1805 #endif // ZCL_IDENTIFY
// 1806 
// 1807 #ifdef ZCL_GROUPS
// 1808 
// 1809 /*********************************************************************
// 1810  * @fn      zclGeneral_AddGroup
// 1811  *
// 1812  * @brief   Add a Group.
// 1813  *
// 1814  * @param   endPoint - application endpoint
// 1815  * @param   group - group to be added
// 1816  * @param   pData - pointer to the group info
// 1817  *
// 1818  * @return  ZStatus_t
// 1819  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1820 static ZStatus_t zclGeneral_AddGroup( uint8 endPoint, aps_Group_t *group, uint8 *pData )
zclGeneral_AddGroup:
          CFI Block cfiBlock305 Using cfiCommon0
          CFI Function zclGeneral_AddGroup
        CODE
// 1821 {
        FUNCALL zclGeneral_AddGroup, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_AddGroup, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_AddGroup, aps_AddGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       ?V1,R1
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V2,R4
        MOV       ?V3,R5
// 1822   uint8 nameLen;
// 1823   uint8 nameSupport = FALSE;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
// 1824 
// 1825   pData += 2;   // Move past group ID
// 1826   nameLen = *pData++;
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
// 1827 
// 1828   // Retrieve Name Support attribute
// 1829   zcl_ReadAttrData( endPoint, ZCL_CLUSTER_ID_GEN_GROUPS,
// 1830                     ATTRID_GROUP_NAME_SUPPORT, &nameSupport, NULL );
        ; Setup parameters for call to function zcl_ReadAttrData
        CLR       A
        MOV       ?V4,A
        MOV       ?V5,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V4,R0
        MOV       ?V5,R1
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#0x4
        MOV       R3,#0x0
        MOV       R1,?V1
        LCALL     `??zcl_ReadAttrData::?relay`; Banked call to: zcl_ReadAttrData
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 1831 
// 1832   if ( nameSupport )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        JZ        ??zclGeneral_AddGroup_0
// 1833   {
// 1834     if ( nameLen > (APS_GROUP_NAME_LEN-1) )
        MOV       A,?V0
        CLR       C
        SUBB      A,#0x10
        JC        ??zclGeneral_AddGroup_1
// 1835        nameLen = (APS_GROUP_NAME_LEN-1);
        MOV       ?V0,#0xf
// 1836     group->name[0] = nameLen;
??zclGeneral_AddGroup_1:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOV       A,?V0
        MOVX      @DPTR,A
// 1837     zcl_memcpy( &(group->name[1]), pData, nameLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       R4,?V0
        MOV       R5,#0x0
        MOV       A,R6
        LCALL     ?Subroutine68 & 0xFFFF
// 1838   }
??CrossCallReturnLabel_116:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 1839 
// 1840   return ( aps_AddGroup( endPoint, group ) );
??zclGeneral_AddGroup_0:
        ; Setup parameters for call to function aps_AddGroup
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       R1,?V1
        LCALL     `??aps_AddGroup::?relay`; Banked call to: aps_AddGroup
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock305
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 1841 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock306 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x7
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock306
// 1842 
// 1843 /*********************************************************************
// 1844  * @fn      zclGeneral_ProcessInGroupsServer
// 1845  *
// 1846  * @brief   Process in the received Groups Command.
// 1847  *
// 1848  * @param   pInMsg - pointer to the incoming message
// 1849  *
// 1850  * @return  ZStatus_t
// 1851  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1852 static ZStatus_t zclGeneral_ProcessInGroupsServer( zclIncoming_t *pInMsg )
zclGeneral_ProcessInGroupsServer:
          CFI Block cfiBlock307 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
        CODE
// 1853 {
        FUNCALL zclGeneral_ProcessInGroupsServer, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_AddGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 80, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 80, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupViewResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 79, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 79, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindAllGroupsForEndpoint
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_CountAllGroups
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupGetMembershipRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 83, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 83, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zcl_SendDefaultRspCmd
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 83, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 83, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_RemoveAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_RemoveGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_SendGroupResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 80, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 80, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_FindAllGroupsForEndpoint
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_RemoveAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, aps_RemoveAllGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 80, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 80, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsServer, zclGeneral_AddGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 76, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 76, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 54
        MOV       A,#-0x36
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1854   aps_Group_t group;
// 1855   aps_Group_t *pGroup;
// 1856   uint8 *pData;
// 1857   uint8 status;
// 1858   uint8 grpCnt;
// 1859   uint8 grpRspCnt = 0;
        MOV       ?V4,#0x0
// 1860   uint16 *grpList;
// 1861   uint16 identifyTime = 0;
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 1862   uint8 i;
// 1863   ZStatus_t stat = ZSuccess;
        MOV       ?V0,#0x0
// 1864 
// 1865   zcl_memset( (uint8*)&group, 0, sizeof( aps_Group_t ) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x12
        MOV       R5,A
        MOV       R1,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
// 1866 
// 1867   pData = pInMsg->pData;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine35 & 0xFFFF
// 1868   group.ID = BUILD_UINT16( pData[0], pData[1] );
??CrossCallReturnLabel_49:
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       DPL,?V2
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        LCALL     ??Subroutine104_0 & 0xFFFF
// 1869   switch ( pInMsg->hdr.commandID )
??CrossCallReturnLabel_220:
        MOV       A,R6
        ADD       A,#0x6
        MOV       ?V8,A
        CLR       A
        ADDC      A,R7
        MOV       ?V9,A
        MOV       A,R6
        ADD       A,#0x7
        MOV       ?V6,A
        CLR       A
        ADDC      A,R7
        MOV       ?V7,A
        MOV       DPL,?V6
        MOV       DPH,A
        MOVX      A,@DPTR
        JZ        ??zclGeneral_ProcessInGroupsServer_0
        DEC       A
        JZ        ??zclGeneral_ProcessInGroupsServer_1
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsServer_2 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsServer_3 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsServer_4 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsServer_5 & 0xFFFF
        LJMP      ??zclGeneral_ProcessInGroupsServer_6 & 0xFFFF
// 1870   {
// 1871     case COMMAND_GROUP_ADD:
// 1872       status = zclGeneral_AddGroup( pInMsg->msg->endPoint, &group, pData );
??zclGeneral_ProcessInGroupsServer_0:
        ; Setup parameters for call to function zclGeneral_AddGroup
        MOV       R4,?V2
        MOV       R5,?V3
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_33:
        MOV       A,R1
        MOV       R4,A
// 1873       if ( status != ZSuccess )
        JZ        ??zclGeneral_ProcessInGroupsServer_7
// 1874       {
// 1875         if ( status == ZApsDuplicateEntry )
        MOV       A,#-0x48
        XRL       A,R4
        JNZ       ??zclGeneral_ProcessInGroupsServer_8
// 1876         {
// 1877           status = ZCL_STATUS_DUPLICATE_EXISTS;
        MOV       R4,#-0x76
        SJMP      ??zclGeneral_ProcessInGroupsServer_7
// 1878         }
// 1879         else
// 1880         {
// 1881           status = ZCL_STATUS_INSUFFICIENT_SPACE;
??zclGeneral_ProcessInGroupsServer_8:
        MOV       R4,#-0x77
// 1882         }
// 1883       }
// 1884 #if defined( ZCL_LIGHT_LINK_ENHANCE ) //ZLL allows response to unicast only
// 1885       if ( UNICAST_MSG( pInMsg->msg ) )
// 1886 #endif
// 1887       {
// 1888         zclGeneral_SendGroupAddResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1889                                          status, group.ID, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_7:
        LCALL     ?Subroutine17 & 0xFFFF
// 1890         stat = ZCL_STATUS_CMD_HAS_RSP;
// 1891       }
??CrossCallReturnLabel_19:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 78)
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 80)
        MOV       A,R4
        MOV       R5,A
        MOV       R4,#0x0
        LJMP      ??zclGeneral_ProcessInGroupsServer_9 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 76)
// 1892       break;
// 1893 
// 1894     case COMMAND_GROUP_VIEW:
// 1895 #if defined( ZCL_LIGHT_LINK_ENHANCE ) //ZLL allows response to unicast only
// 1896       if ( UNICAST_MSG( pInMsg->msg ) )
// 1897 #endif
// 1898       {
// 1899         pGroup = aps_FindGroup( pInMsg->msg->endPoint, group.ID );
??zclGeneral_ProcessInGroupsServer_1:
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R2,A
        LCALL     ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_243:
        LCALL     `??aps_FindGroup::?relay`; Banked call to: aps_FindGroup
        MOV       ?V0,R2
        MOV       ?V1,R3
// 1900         if ( pGroup )
        MOV       A,R2
        ORL       A,R3
        JZ        ??zclGeneral_ProcessInGroupsServer_10
// 1901         {
// 1902           status = ZCL_STATUS_SUCCESS;
        MOV       R4,#0x0
        SJMP      ??zclGeneral_ProcessInGroupsServer_11
// 1903         }
// 1904         else
// 1905         {
// 1906           // Group not found
// 1907           status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInGroupsServer_10:
        MOV       R4,#-0x75
// 1908           pGroup = &group;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
// 1909         }
// 1910         zclGeneral_SendGroupViewResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1911                                           status, pGroup, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_11:
        LCALL     ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_41:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 79)
        MOV       R5,#0x1
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_126:
        LCALL     `??zclGeneral_SendGroupViewResponse::?relay`; Banked call to: zclGeneral_SendGroupViewResponse
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 1912         stat = ZCL_STATUS_CMD_HAS_RSP;
        LJMP      ??zclGeneral_ProcessInGroupsServer_12 & 0xFFFF
// 1913       }
// 1914       break;
// 1915 
// 1916     case COMMAND_GROUP_GET_MEMBERSHIP:
// 1917 #if defined( ZCL_LIGHT_LINK_ENHANCE ) //ZLL allows response to unicast only
// 1918       if ( UNICAST_MSG( pInMsg->msg ) )
// 1919 #endif
// 1920       {
// 1921         grpCnt = *pData++;
??zclGeneral_ProcessInGroupsServer_2:
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       ?V10,A
        MOV       ?V2,R0
        MOV       ?V3,R1
// 1922 
// 1923         // Allocate space for the group list
// 1924         grpList = zcl_mem_alloc( sizeof( uint16 ) * APS_MAX_GROUPS );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x20
        MOV       R3,#0x0
        LCALL     ??Subroutine103_0 & 0xFFFF
// 1925         if ( grpList != NULL )
??CrossCallReturnLabel_219:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsServer_13 & 0xFFFF
// 1926         {
// 1927           if ( grpCnt == 0 )
        MOV       A,?V10
        JNZ       ??zclGeneral_ProcessInGroupsServer_14
// 1928           {
// 1929             // Find out all the groups of which the endpoint is a member.
// 1930             grpRspCnt = aps_FindAllGroupsForEndpoint( pInMsg->msg->endPoint, grpList );
        ; Setup parameters for call to function aps_FindAllGroupsForEndpoint
        LCALL     ?Subroutine26 & 0xFFFF
// 1931           }
??CrossCallReturnLabel_35:
        MOV       ?V4,A
        SJMP      ??zclGeneral_ProcessInGroupsServer_15
// 1932           else
// 1933           {
// 1934             // Find out the groups (in the list) of which the endpoint is a member.
// 1935             for ( i = 0; i < grpCnt; i++ )
??zclGeneral_ProcessInGroupsServer_14:
        MOV       ?V5,A
// 1936             {
// 1937               group.ID = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInGroupsServer_16:
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine121_0 & 0xFFFF
??CrossCallReturnLabel_326:
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        LCALL     ??Subroutine115_0 & 0xFFFF
// 1938               pData += 2;
??CrossCallReturnLabel_290:
        MOV       A,?V2
        ADD       A,#0x2
        MOV       ?V2,A
        JNC       ??zclGeneral_ProcessInGroupsServer_17
        INC       ?V3
// 1939 
// 1940               if ( aps_FindGroup( pInMsg->msg->endPoint, group.ID ) )
??zclGeneral_ProcessInGroupsServer_17:
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_0:
        JZ        ??zclGeneral_ProcessInGroupsServer_18
// 1941                 grpList[grpRspCnt++] = group.ID;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine48 & 0xFFFF
// 1942             }
??CrossCallReturnLabel_89:
        MOV       R0,?V4
        MOV       A,R0
        ADD       A,R0
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       A,?V0
        ADD       A,R0
        MOV       DPL,A
        MOV       A,?V1
        ADDC      A,R1
        MOV       DPH,A
        LCALL     ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_224:
        INC       ?V4
??zclGeneral_ProcessInGroupsServer_18:
        DEC       ?V5
        MOV       A,?V5
        JNZ       ??zclGeneral_ProcessInGroupsServer_16
        MOV       A,?V4
        JZ        ??zclGeneral_ProcessInGroupsServer_19
// 1943           }
// 1944 
// 1945           if ( grpCnt == 0 ||  grpRspCnt != 0 )
// 1946           {
// 1947             zclGeneral_SendGroupGetMembershipResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1948                                                        aps_GroupsRemaingCapacity(), grpRspCnt,
// 1949                                                        grpList, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_15:
        ; Setup parameters for call to function aps_CountAllGroups
        LCALL     `??aps_CountAllGroups::?relay`; Banked call to: aps_CountAllGroups
        MOV       A,R1
        MOV       R1,A
        LCALL     ?Subroutine31 & 0xFFFF
// 1950           }
??CrossCallReturnLabel_42:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 78)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 80)
        MOV       A,?V4
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 81)
        MOV       A,#0x10
        CLR       C
        SUBB      A,R1
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 82)
        MOV       ?V2,#0x1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       R5,#0x1
        MOV       R4,#0x2
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_127:
        LCALL     `??zclGeneral_SendGroupGetMembershipRequest::?re`; Banked call to: zclGeneral_SendGroupGetMembershipRequest
        MOV       A,#0x7
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 1951 
// 1952           zcl_mem_free( grpList );
??zclGeneral_ProcessInGroupsServer_19:
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_ProcessInGroupsServer_20
// 1953         }
// 1954         else
// 1955         {
// 1956           // Couldn't allocate space for the group list -- send a Default Response command back.
// 1957           zclDefaultRspCmd_t defaultRspCmd;
// 1958 
// 1959           defaultRspCmd.commandID = pInMsg->hdr.commandID;
??zclGeneral_ProcessInGroupsServer_13:
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOVX      A,@DPTR
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 1960           defaultRspCmd.statusCode = ZCL_STATUS_INSUFFICIENT_SPACE;
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#-0x77
        MOVX      @DPTR,A
// 1961           zcl_SendDefaultRspCmd( pInMsg->msg->endPoint, &(pInMsg->msg->srcAddr),
// 1962                                  pInMsg->msg->clusterId, &defaultRspCmd,
// 1963                                  ZCL_FRAME_SERVER_CLIENT_DIR, true, 0, pInMsg->hdr.transSeqNum );
        LCALL     ?Subroutine17 & 0xFFFF
// 1964         }
??CrossCallReturnLabel_20:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 79)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 80)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 81)
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_27:
        LCALL     `??zcl_SendDefaultRspCmd::?relay`; Banked call to: zcl_SendDefaultRspCmd
        MOV       A,#0x7
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 1965 
// 1966         stat = ZCL_STATUS_CMD_HAS_RSP;
??zclGeneral_ProcessInGroupsServer_20:
        SJMP      ??zclGeneral_ProcessInGroupsServer_12
// 1967       }
// 1968       break;
// 1969 
// 1970     case COMMAND_GROUP_REMOVE:
// 1971 #if defined ( ZCL_SCENES )
// 1972       zclGeneral_RemoveAllScenes( pInMsg->msg->endPoint, group.ID );
??zclGeneral_ProcessInGroupsServer_3:
        ; Setup parameters for call to function zclGeneral_RemoveAllScenes
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R2,A
        LCALL     ??Subroutine120_0 & 0xFFFF
// 1973 #endif
// 1974       if ( aps_RemoveGroup( pInMsg->msg->endPoint, group.ID ) )
??CrossCallReturnLabel_316:
        ; Setup parameters for call to function aps_RemoveGroup
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_16:
        LCALL     `??aps_RemoveGroup::?relay`; Banked call to: aps_RemoveGroup
        MOV       A,R1
        JZ        ??zclGeneral_ProcessInGroupsServer_21
// 1975       {
// 1976         status = ZCL_STATUS_SUCCESS;
        MOV       R4,#0x0
        SJMP      ??zclGeneral_ProcessInGroupsServer_22
// 1977       }
// 1978       else
// 1979       {
// 1980         status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInGroupsServer_21:
        MOV       R4,#-0x75
// 1981       }
// 1982 
// 1983 #if defined( ZCL_LIGHT_LINK_ENHANCE ) //ZLL allows response to unicast only
// 1984       if ( UNICAST_MSG( pInMsg->msg ) )
// 1985 #endif
// 1986       {
// 1987         zclGeneral_SendGroupRemoveResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 1988                                             status, group.ID, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInGroupsServer_22:
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_21:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 77)
        MOV       ?V0,#0x1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 78)
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 80)
        MOV       A,R4
        MOV       R5,A
        MOV       R4,#0x3
??zclGeneral_ProcessInGroupsServer_9:
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_128:
        LCALL     `??zclGeneral_SendGroupResponse::?relay`; Banked call to: zclGeneral_SendGroupResponse
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 1989         stat = ZCL_STATUS_CMD_HAS_RSP;
??zclGeneral_ProcessInGroupsServer_12:
        MOV       ?V0,#-0x1
// 1990       }
// 1991       break;
        SJMP      ??zclGeneral_ProcessInGroupsServer_23
// 1992 
// 1993     case COMMAND_GROUP_REMOVE_ALL:
// 1994       {
// 1995         uint8 numGroups;
// 1996         uint16 groupList[APS_MAX_GROUPS];
// 1997 
// 1998         if ( numGroups = aps_FindAllGroupsForEndpoint( pInMsg->msg->endPoint, groupList ) )
??zclGeneral_ProcessInGroupsServer_4:
        ; Setup parameters for call to function aps_FindAllGroupsForEndpoint
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_36:
        MOV       ?V2,A
        JZ        ??zclGeneral_ProcessInGroupsServer_23
// 1999         {
// 2000           for ( i = 0; i < numGroups; i++ )
        MOV       ?V1,#0x0
// 2001           {
// 2002 #if defined ( ZCL_SCENES )
// 2003             zclGeneral_RemoveAllScenes( pInMsg->msg->endPoint, groupList[i] );
??zclGeneral_ProcessInGroupsServer_24:
        ; Setup parameters for call to function zclGeneral_RemoveAllScenes
        MOV       R0,?V1
        MOV       A,R0
        ADD       A,R0
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOV       A,DPL
        ADD       A,R0
        MOV       DPL,A
        MOV       A,DPH
        ADDC      A,R1
        MOV       DPH,A
        LCALL     ?Subroutine15 & 0xFFFF
// 2004 #endif
// 2005           }
??CrossCallReturnLabel_314:
        INC       ?V1
        MOV       A,?V1
        CLR       C
        SUBB      A,?V2
        JC        ??zclGeneral_ProcessInGroupsServer_24
// 2006 
// 2007           aps_RemoveAllGroup( pInMsg->msg->endPoint );
        ; Setup parameters for call to function aps_RemoveAllGroup
        LCALL     ?Subroutine28 & 0xFFFF
// 2008         }
// 2009       }
??CrossCallReturnLabel_244:
        LCALL     `??aps_RemoveAllGroup::?relay`; Banked call to: aps_RemoveAllGroup
        SJMP      ??zclGeneral_ProcessInGroupsServer_23
// 2010       break;
// 2011 
// 2012     case COMMAND_GROUP_ADD_IF_IDENTIFYING:
// 2013       // Retrieve Identify Time
// 2014       zcl_ReadAttrData( pInMsg->msg->endPoint, ZCL_CLUSTER_ID_GEN_IDENTIFY,
// 2015                         ATTRID_IDENTIFY_TIME, (uint8 *)&identifyTime, NULL );
??zclGeneral_ProcessInGroupsServer_5:
        ; Setup parameters for call to function zcl_ReadAttrData
        CLR       A
        MOV       ?V6,A
        MOV       ?V7,A
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 78)
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V6,R0
        MOV       ?V7,R1
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 80)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#0x3
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_31:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 76)
// 2016 
// 2017       // Is device identifying itself?
// 2018       if ( identifyTime > 0 )
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_259:
        JZ        ??zclGeneral_ProcessInGroupsServer_23
// 2019       {
// 2020         zclGeneral_AddGroup( pInMsg->msg->endPoint, &group, pData );
        ; Setup parameters for call to function zclGeneral_AddGroup
        MOV       R4,?V2
        MOV       R5,?V3
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine25 & 0xFFFF
// 2021       }
??CrossCallReturnLabel_34:
        SJMP      ??zclGeneral_ProcessInGroupsServer_23
// 2022       break;
// 2023 
// 2024     default:
// 2025       stat = ZFailure;
??zclGeneral_ProcessInGroupsServer_6:
        MOV       ?V0,#0x1
// 2026       break;
// 2027   }
// 2028 
// 2029   return ( stat );
??zclGeneral_ProcessInGroupsServer_23:
        MOV       R1,?V0
        MOV       A,#0x36
        LJMP      ?Subroutine3 & 0xFFFF
// 2030 }
          CFI EndBlock cfiBlock307

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond308 Using cfiCommon0
          CFI Function zclGeneral_SendAddGroupRequest
          CFI Conditional ??CrossCallReturnLabel_48
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond309) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond309) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond309) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond309) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond309) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond309) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond309) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond309) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond309) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+-2
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker310 Using cfiCommon1
          CFI (cfiPicker310) NoFunction
          CFI (cfiPicker310) Picker
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
        MOV       DPL,?V2
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiPicker310

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond311 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_41
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond312) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond312) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond312) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond312) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond312) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond312) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond312) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond312) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond312) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond312) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+-2
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker313 Using cfiCommon1
          CFI (cfiPicker313) NoFunction
          CFI (cfiPicker313) Picker
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_139:
        MOV       ?V2,A
        MOV       R0,#?V2
        RET
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiPicker313

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond314 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_243
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond315) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond315) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond315) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond315) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond315) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond315) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond315) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+-2
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker316 Using cfiCommon1
          CFI (cfiPicker316) NoFunction
          CFI (cfiPicker316) Picker
        MOV       DPL,R6
        MOV       DPH,R7
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiPicker316
        REQUIRE ??Subroutine108_0
        ; // Fall through to label ??Subroutine108_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine108_0:
          CFI Block cfiCond317 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_242
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond318) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond318) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond318) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond318) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond318) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond318) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond318) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+-2
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond319) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond319) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond319) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond319) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond319) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond319) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond319) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond319) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond319) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond319) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+-2
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker320 Using cfiCommon1
          CFI (cfiPicker320) NoFunction
          CFI (cfiPicker320) Picker
        LCALL     ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_317:
        RET
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiPicker320

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond321 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond322) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond322) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond322) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond322) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond322) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond322) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond322) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond322) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond322) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond322) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond322) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond322) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond322) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond322) CFA_SP SP+-2
          CFI (cfiCond322) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker323 Using cfiCommon1
          CFI (cfiPicker323) NoFunction
          CFI (cfiPicker323) Picker
        LCALL     ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_320:
        LCALL     `??aps_FindAllGroupsForEndpoint::?relay`; Banked call to: aps_FindAllGroupsForEndpoint
        MOV       A,R1
        RET
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiPicker323

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond324 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond325) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond325) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond325) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond325) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond325) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond325) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond325) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond325) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond325) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+-2
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker326 Using cfiCommon1
          CFI (cfiPicker326) NoFunction
          CFI (cfiPicker326) Picker
        LCALL     ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_319:
        LCALL     `??zclGeneral_AddGroup::?relay`; Banked call to: zclGeneral_AddGroup
        RET
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiPicker326

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond327 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_26
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond328 Using cfiCommon0
          CFI (cfiCond328) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond328) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond328) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond328) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond328) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond328) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond328) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond328) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond328) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond328) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond328) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond328) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond328) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond328) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond328) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond328) CFA_SP SP+-2
          CFI (cfiCond328) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiPicker329 Using cfiCommon1
          CFI (cfiPicker329) NoFunction
          CFI (cfiPicker329) Picker
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_145:
        MOV       R5,A
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_154:
        RET
          CFI EndBlock cfiCond327
          CFI EndBlock cfiCond328
          CFI EndBlock cfiPicker329

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond330 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond331) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond331) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond331) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond331) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond331) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond331) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond331) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond331) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond331) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+-2
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond332) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond332) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond332) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond332) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond332) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+-2
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker333 Using cfiCommon1
          CFI (cfiPicker333) NoFunction
          CFI (cfiPicker333) Picker
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_138:
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiPicker333

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond334 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_41
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_42
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond335) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond335) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond335) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond335) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond335) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond335) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond335) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond335) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond335) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+-4
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_19
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond336) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond336) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond336) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond336) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond336) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+-4
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_20
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond337) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond337) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond337) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond337) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond337) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond337) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond337) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-4
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_21
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-4
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiPicker339 Using cfiCommon1
          CFI (cfiPicker339) NoFunction
          CFI (cfiPicker339) Picker
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_312:
        ; Setup parameters for call to function zclGeneral_SendGroupViewResponse
        ; Setup parameters for call to function zclGeneral_SendGroupGetMembershipRequest
        ; Setup parameters for call to function zclGeneral_SendGroupResponse
        ; Setup parameters for call to function zcl_SendDefaultRspCmd
        ; Setup parameters for call to function zclGeneral_SendGroupResponse
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiPicker339

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond340 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_41
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_42
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond341) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond341) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond341) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond341) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond341) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond341) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond341) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+-6
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_19
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond342) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond342) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-6
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_20
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond343) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond343) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond343) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond343) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond343) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond343) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond343) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond343) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond343) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond343) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+-6
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_21
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond344) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond344) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond344) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond344) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond344) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond344) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond344) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+-6
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_11
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond345) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond345) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond345) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond345) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond345) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond345) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond345) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond345) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond345) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond345) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+-4
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_12
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond346) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond346) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond346) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond346) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond346) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond346) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond346) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond346) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+-4
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond347 Using cfiCommon0
          CFI (cfiCond347) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond347) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_13
          CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond347) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond347) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond347) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond347) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond347) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond347) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond347) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond347) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond347) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond347) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond347) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond347) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond347) CFA_SP SP+-4
          CFI (cfiCond347) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_14
          CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond348) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond348) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond348) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond348) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond348) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond348) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond348) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond348) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond348) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond348) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond348) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond348) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond348) CFA_SP SP+-4
          CFI (cfiCond348) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_15
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond349) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond349) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+-4
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker350 Using cfiCommon1
          CFI (cfiPicker350) NoFunction
          CFI (cfiPicker350) Picker
        MOV       DPL,R6
        MOV       DPH,R7
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiPicker350
        REQUIRE ??Subroutine109_0
        ; // Fall through to label ??Subroutine109_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine109_0:
          CFI Block cfiCond351 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_39
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_310, ??CrossCallReturnLabel_40
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond352) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond352) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond352) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond352) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond352) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond352) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond352) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond352) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+-4
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_308
          CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond353) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond353) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond353) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond353) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond353) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond353) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond353) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond353) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond353) CFA_SP SP+-4
          CFI (cfiCond353) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_309
          CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond354) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond354) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond354) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond354) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond354) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond354) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond354) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond354) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond354) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond354) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond354) CFA_SP SP+-4
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_305
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+-4
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function zclGeneral_FindScene
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_306
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-4
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_307
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond357) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond357) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond357) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond357) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond357) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+-4
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_41
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond358) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond358) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond358) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond358) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond358) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond358) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond358) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond358) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond358) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+-6
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_42
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond359) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond359) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond359) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond359) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond359) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond359) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond359) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond359) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond359) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond359) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_SP SP+-6
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_19
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond360) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond360) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond360) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond360) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond360) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond360) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond360) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond360) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond360) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+-6
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_20
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond361) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond361) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond361) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond361) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond361) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond361) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond361) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond361) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond361) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-6
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_21
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond362) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond362) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-6
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_11
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond363) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond363) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond363) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond363) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond363) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+-4
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_12
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond364) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond364) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond364) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond364) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+-4
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_13
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond365) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond365) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond365) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond365) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond365) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond365) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond365) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond365) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond365) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+-4
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_14
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond366) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond366) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond366) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond366) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond366) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond366) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond366) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond366) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond366) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+-4
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_15
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond367) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond367) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond367) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond367) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond367) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+-4
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker368 Using cfiCommon1
          CFI (cfiPicker368) NoFunction
          CFI (cfiPicker368) Picker
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
        RET
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiPicker368
// 2031 
// 2032 /*********************************************************************
// 2033  * @fn      zclGeneral_ProcessInGroupsClient
// 2034  *
// 2035  * @brief   Process in the received Groups Command.
// 2036  *
// 2037  * @param   pInMsg - pointer to the incoming message
// 2038  *
// 2039  * @return  ZStatus_t
// 2040  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2041 static ZStatus_t zclGeneral_ProcessInGroupsClient( zclIncoming_t *pInMsg,
zclGeneral_ProcessInGroupsClient:
          CFI Block cfiBlock369 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
        CODE
// 2042                                                    zclGeneral_AppCallbacks_t *pCBs )
// 2043 {
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 53, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 53, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInGroupsClient, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 28
        MOV       A,#-0x1c
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 50)
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       ?V0,R4
        MOV       ?V1,R5
// 2044   aps_Group_t group;
// 2045   uint8 *pData = pInMsg->pData;
        LCALL     ?Subroutine42 & 0xFFFF
// 2046   uint8 grpCnt;
// 2047   uint8 nameLen;
// 2048   zclGroupRsp_t rsp;
// 2049   uint8 i;
// 2050   ZStatus_t stat = ZSuccess;
??CrossCallReturnLabel_308:
        MOV       ?V11,#0x0
// 2051 
// 2052   zcl_memset( (uint8*)&group, 0, sizeof( aps_Group_t ) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x12
        MOV       R5,#0x0
        MOV       R1,#0x0
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine77 & 0xFFFF
// 2053   zcl_memset( (uint8*)&rsp, 0, sizeof( zclGroupRsp_t ) );
// 2054 
// 2055   switch ( pInMsg->hdr.commandID )
??CrossCallReturnLabel_134:
        MOV       A,R6
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,?V0
        ADD       A,#0x14
        MOV       ?V0,A
        JNC       ??zclGeneral_ProcessInGroupsClient_0
        INC       ?V1
??zclGeneral_ProcessInGroupsClient_0:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       A,?V6
        ADD       A,#0x7
        MOV       ?V2,A
        CLR       A
        ADDC      A,?V7
        MOV       ?V3,A
        MOV       DPL,?V2
        MOV       DPH,A
        MOVX      A,@DPTR
        JZ        ??zclGeneral_ProcessInGroupsClient_1
        DEC       A
        JZ        ??zclGeneral_ProcessInGroupsClient_1
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsClient_2 & 0xFFFF
        DEC       A
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInGroupsClient_3 & 0xFFFF
// 2056   {
// 2057     case COMMAND_GROUP_ADD_RSP:
// 2058     case COMMAND_GROUP_VIEW_RSP:
// 2059     case COMMAND_GROUP_REMOVE_RSP:
// 2060       rsp.status = *pData++;
??zclGeneral_ProcessInGroupsClient_1:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        MOVX      @DPTR,A
        MOV       A,R1
        MOV       R7,A
// 2061       group.ID = BUILD_UINT16( pData[0], pData[1] );
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V4,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V4
        LCALL     ??Subroutine115_0 & 0xFFFF
// 2062 
// 2063       if ( rsp.status == ZCL_STATUS_SUCCESS && pInMsg->hdr.commandID == COMMAND_GROUP_VIEW_RSP )
??CrossCallReturnLabel_291:
        MOV       A,R4
        JNZ       ??CrossCallReturnLabel_297
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        XRL       A,#0x1
        JNZ       ??CrossCallReturnLabel_297
// 2064       {
// 2065         pData += 2;   // Move past ID
// 2066         nameLen = *pData++;
        MOV       DPL,R0
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R0
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??zclGeneral_ProcessInGroupsClient_4
        INC       R7
// 2067         if ( nameLen > (APS_GROUP_NAME_LEN-1) )
??zclGeneral_ProcessInGroupsClient_4:
        MOV       A,R1
        CLR       C
        SUBB      A,#0x10
        JC        ??zclGeneral_ProcessInGroupsClient_5
// 2068           nameLen = (APS_GROUP_NAME_LEN-1);
        MOV       R1,#0xf
// 2069         group.name[0] = nameLen;
??zclGeneral_ProcessInGroupsClient_5:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R1
        MOVX      @DPTR,A
// 2070         zcl_memcpy( &(group.name[1]), pData, nameLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V8,R6
        MOV       ?V9,R7
        MOV       ?V10,#0x0
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 53)
        MOV       A,R1
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_245:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 50)
// 2071         rsp.grpName = group.name;
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
// 2072       }
// 2073 
// 2074       if ( pCBs->pfnGroupRsp )
??CrossCallReturnLabel_297:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_260:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInGroupsClient_6 & 0xFFFF
// 2075       {
// 2076         rsp.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL     ?Subroutine19 & 0xFFFF
// 2077         rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_22:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2078         rsp.grpCnt = 1;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 2079         rsp.grpList = &group.ID;
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP100_8
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
// 2080         rsp.capacity = 0;
??CrossCallReturnLabel_298:
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine58 & 0xFFFF
// 2081 
// 2082         pCBs->pfnGroupRsp( &rsp );
// 2083       }
??CrossCallReturnLabel_105:
        LCALL     ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_333:
        LCALL     ?CALL_IND
        LJMP      ??zclGeneral_ProcessInGroupsClient_6 & 0xFFFF
// 2084       break;
// 2085 
// 2086     case COMMAND_GROUP_GET_MEMBERSHIP_RSP:
// 2087       {
// 2088         uint16 *grpList = NULL;
??zclGeneral_ProcessInGroupsClient_2:
        MOV       ?V4,#0x0
        MOV       ?V5,#0x0
// 2089         rsp.capacity = *pData++;
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2090         grpCnt = *pData++;
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       ?V8,A
        INC       R6
        INC       R6
        MOV       A,R3
        MOV       R7,A
// 2091 
// 2092         if ( grpCnt > 0 )
        MOV       A,?V8
        JZ        ??zclGeneral_ProcessInGroupsClient_7
// 2093         {
// 2094           // Allocate space for the group list
// 2095           grpList = zcl_mem_alloc( sizeof( uint16 ) * grpCnt );
        ; Setup parameters for call to function osal_mem_alloc
        ADD       A,0xE0 /* A   */
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
        LCALL     ?Subroutine70 & 0xFFFF
// 2096           if ( grpList != NULL )
??CrossCallReturnLabel_120:
        JZ        ??zclGeneral_ProcessInGroupsClient_7
// 2097           {
// 2098             rsp.grpCnt = grpCnt;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V8
        MOVX      @DPTR,A
// 2099             for ( i = 0; i < grpCnt; i++ )
        MOV       R2,#0x0
        SJMP      ??zclGeneral_ProcessInGroupsClient_8
// 2100             {
// 2101               grpList[i] = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInGroupsClient_9:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_144:
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,R4
        ADD       A,R0
        CLR       A
        ADDC      A,R1
        MOV       R5,A
        MOV       A,R2
        ADD       A,0xE0 /* A   */
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       A,?V4
        ADD       A,R0
        MOV       DPL,A
        MOV       A,R3
        ADDC      A,R1
        MOV       DPH,A
        MOV       A,R4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R5
        MOVX      @DPTR,A
// 2102               pData += 2;
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??zclGeneral_ProcessInGroupsClient_10
        INC       R7
// 2103             }
??zclGeneral_ProcessInGroupsClient_10:
        INC       R2
??zclGeneral_ProcessInGroupsClient_8:
        MOV       A,R2
        CLR       C
        SUBB      A,?V8
        JC        ??zclGeneral_ProcessInGroupsClient_9
// 2104           }
// 2105         }
// 2106 
// 2107         if ( pCBs->pfnGroupRsp )
??zclGeneral_ProcessInGroupsClient_7:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_261:
        JZ        ??zclGeneral_ProcessInGroupsClient_11
// 2108         {
// 2109           rsp.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL     ?Subroutine19 & 0xFFFF
// 2110           rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_23:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2111           rsp.grpList = grpList;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V5
        LCALL     ?Subroutine58 & 0xFFFF
// 2112 
// 2113           pCBs->pfnGroupRsp( &rsp );
// 2114         }
??CrossCallReturnLabel_106:
        LCALL     ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_334:
        LCALL     ?CALL_IND
// 2115 
// 2116         if ( grpList != NULL )
??zclGeneral_ProcessInGroupsClient_11:
        MOV       A,?V4
        ORL       A,?V5
        JZ        ??zclGeneral_ProcessInGroupsClient_6
// 2117         {
// 2118           zcl_mem_free( grpList );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V4
        MOV       R3,?V5
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_ProcessInGroupsClient_6
// 2119         }
// 2120       }
// 2121       break;
// 2122 
// 2123     default:
// 2124       stat = ZFailure;
??zclGeneral_ProcessInGroupsClient_3:
        MOV       ?V11,#0x1
// 2125       break;
// 2126   }
// 2127 
// 2128   return ( stat );
??zclGeneral_ProcessInGroupsClient_6:
        MOV       R1,?V11
        MOV       A,#0x1c
        LJMP      ?Subroutine3 & 0xFFFF
// 2129 }
          CFI EndBlock cfiBlock369

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond370 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_245
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 53)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond371) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond371) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond371) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond371) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond371) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+-2
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 85)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+-2
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 85)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+-2
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 90)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-2
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 72)
          CFI Block cfiPicker375 Using cfiCommon1
          CFI (cfiPicker375) NoFunction
          CFI (cfiPicker375) Picker
        MOV       R2,DPL
        MOV       R3,DPH
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiPicker375
        REQUIRE ??Subroutine110_0
        ; // Fall through to label ??Subroutine110_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine110_0:
          CFI Block cfiCond376 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_250
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function zclGeneral_SendAddSceneRequest
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond377) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond377) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond377) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond377) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond377) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond377) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond377) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond377) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+-2
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond378) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond378) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond378) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond378) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond378) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond378) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond378) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond378) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond378) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+-2
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond379) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond379) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond379) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond379) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond379) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-2
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond380) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond380) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond380) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond380) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond380) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+-2
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 85)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond381) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond381) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond381) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond381) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond381) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond381) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond381) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_SP SP+-2
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 85)
          CFI Block cfiCond382 Using cfiCommon0
          CFI (cfiCond382) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond382) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond382) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond382) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond382) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond382) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond382) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond382) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond382) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond382) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond382) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond382) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond382) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond382) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond382) CFA_SP SP+-2
          CFI (cfiCond382) CFA_XSP16 add(XSP16, 53)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond383) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond383) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond383) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond383) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond383) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+-2
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 85)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond384) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond384) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+-2
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 85)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond385) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond385) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond385) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond385) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond385) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond385) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-2
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 90)
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+-2
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 72)
          CFI Block cfiPicker387 Using cfiCommon1
          CFI (cfiPicker387) NoFunction
          CFI (cfiPicker387) Picker
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiPicker387

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond388 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_105
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond389) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond389) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond389) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond389) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond389) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond389) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond389) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+-2
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker390 Using cfiCommon1
          CFI (cfiPicker390) NoFunction
          CFI (cfiPicker390) Picker
        MOVX      @DPTR,A
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        MOV       DPL,?V0
        MOV       DPH,?V1
        RET
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiPicker390

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond391 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond392) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond392) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond392) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond392) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond392) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond392) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond392) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond392) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond392) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond392) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond392) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond392) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond392) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond392) CFA_SP SP+-2
          CFI (cfiCond392) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiPicker393 Using cfiCommon1
          CFI (cfiPicker393) NoFunction
          CFI (cfiPicker393) Picker
        MOV       DPL,?V6
        MOV       DPH,?V7
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_136:
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiPicker393
// 2130 #endif // ZCL_GROUPS
// 2131 
// 2132 #if defined( ZCL_SCENES )
// 2133 #if !defined ( ZCL_STANDALONE )
// 2134 /*********************************************************************
// 2135  * @fn      zclGeneral_AddScene
// 2136  *
// 2137  * @brief   Add a scene for an endpoint
// 2138  *
// 2139  * @param   endpoint -
// 2140  * @param   scene - new scene item
// 2141  *
// 2142  * @return  ZStatus_t
// 2143  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2144 ZStatus_t zclGeneral_AddScene( uint8 endpoint, zclGeneral_Scene_t *scene )
zclGeneral_AddScene:
          CFI Block cfiBlock394 Using cfiCommon0
          CFI Function zclGeneral_AddScene
        CODE
// 2145 {
        FUNCALL zclGeneral_AddScene, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_AddScene, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_AddScene, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        MOV       ?V2,R1
        MOV       ?V0,R2
        MOV       ?V1,R3
// 2146   zclGenSceneItem_t *pNewItem;
// 2147   zclGenSceneItem_t *pLoop;
// 2148 
// 2149   // Fill in the new profile list
// 2150   pNewItem = zcl_mem_alloc( sizeof( zclGenSceneItem_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x3a
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R6,?V4
        MOV       R7,?V5
// 2151   if ( pNewItem == NULL )
        MOV       A,R2
        ORL       A,R7
        JNZ       ??zclGeneral_AddScene_0
// 2152     return ( ZMemError );
        MOV       R1,#0x10
        SJMP      ??zclGeneral_AddScene_1
// 2153 
// 2154   // Fill in the plugin record.
// 2155   pNewItem->next = (zclGenSceneItem_t *)NULL;
??zclGeneral_AddScene_0:
        LCALL     ?Subroutine60 & 0xFFFF
// 2156   pNewItem->endpoint = endpoint;
??CrossCallReturnLabel_110:
        LCALL     ?Subroutine57 & 0xFFFF
// 2157   zcl_memcpy( (uint8*)&(pNewItem->scene), (uint8*)scene, sizeof ( zclGeneral_Scene_t ));
??CrossCallReturnLabel_103:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R4,#0x37
        MOV       R5,#0x0
        MOV       A,R2
        LCALL     ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_117:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 2158 
// 2159   // Find spot in list
// 2160   if (  zclGenSceneTable == NULL )
        MOV       DPTR,#zclGenSceneTable
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_262:
        MOV       DPTR,#zclGenSceneTable
        JZ        ??zclGeneral_AddScene_2
// 2161   {
// 2162     zclGenSceneTable = pNewItem;
// 2163   }
// 2164   else
// 2165   {
// 2166     // Look for end of list
// 2167     pLoop = zclGenSceneTable;
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        SJMP      ??zclGeneral_AddScene_3
// 2168     while ( pLoop->next != NULL )
// 2169       pLoop = pLoop->next;
??zclGeneral_AddScene_4:
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
??zclGeneral_AddScene_3:
        MOV       R3,A
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_263:
        JNZ       ??zclGeneral_AddScene_4
// 2170 
// 2171     // Put new item at end of list
// 2172     pLoop->next = pNewItem;
        MOV       DPL,R2
        MOV       DPH,R3
??zclGeneral_AddScene_2:
        MOV       A,R6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R7
        MOVX      @DPTR,A
// 2173   }
// 2174 
// 2175   // Update NV
// 2176   zclGeneral_ScenesWriteNV();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL     `??zclGeneral_ScenesWriteNV::?relay`; Banked call to: zclGeneral_ScenesWriteNV
// 2177 
// 2178   return ( ZSuccess );
        MOV       R1,#0x0
??zclGeneral_AddScene_1:
        LJMP      ?Subroutine6 & 0xFFFF
// 2179 }
          CFI EndBlock cfiBlock394

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond395 Using cfiCommon0
          CFI Function zclGeneral_AddGroup
          CFI Conditional ??CrossCallReturnLabel_116
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond396 Using cfiCommon0
          CFI (cfiCond396) Function zclGeneral_AddScene
          CFI (cfiCond396) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond396) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond396) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond396) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond396) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond396) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond396) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond396) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond396) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond396) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond396) CFA_SP SP+-2
          CFI (cfiCond396) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker397 Using cfiCommon1
          CFI (cfiPicker397) NoFunction
          CFI (cfiPicker397) Picker
        ADD       A,#0x3
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond395
          CFI EndBlock cfiCond396
          CFI EndBlock cfiPicker397

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond398 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_109
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function zclGeneral_AddScene
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_110
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+-2
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker400 Using cfiCommon1
          CFI (cfiPicker400) NoFunction
          CFI (cfiPicker400) Picker
        MOV       DPL,R2
        MOV       DPH,R3
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiPicker400

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond401 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_274
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond402) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond402) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond402) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond402) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond402) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond402) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond402) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond402) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond402) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond402) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+-2
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond403) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond403) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond403) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond403) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond403) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond403) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond403) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-2
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond404) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond404) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond404) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond404) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond404) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond404) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond404) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond404) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond404) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_SP SP+-2
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond405) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond405) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond405) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond405) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond405) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond405) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond405) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond405) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond405) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond405) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond405) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond405) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond405) CFA_SP SP+-2
          CFI (cfiCond405) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker406 Using cfiCommon1
          CFI (cfiPicker406) NoFunction
          CFI (cfiPicker406) Picker
        MOV       DPL,R6
        MOV       DPH,R7
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiPicker406
        REQUIRE ??Subroutine111_0
        ; // Fall through to label ??Subroutine111_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine111_0:
          CFI Block cfiCond407 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_273
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond408 Using cfiCommon0
          CFI (cfiCond408) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond408) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond408) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond408) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond408) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond408) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond408) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond408) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond408) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond408) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond408) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond408) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond408) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond408) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond408) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond408) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond408) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond408) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond408) CFA_SP SP+-2
          CFI (cfiCond408) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond409 Using cfiCommon0
          CFI (cfiCond409) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond409) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond409) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond409) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond409) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond409) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond409) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond409) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond409) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond409) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond409) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond409) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond409) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond409) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond409) CFA_SP SP+-2
          CFI (cfiCond409) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond410) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond410) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond410) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond410) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond410) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond410) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond410) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+-2
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond411 Using cfiCommon0
          CFI (cfiCond411) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond411) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond411) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond411) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond411) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond411) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond411) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond411) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond411) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond411) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond411) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond411) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond411) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond411) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond411) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond411) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond411) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond411) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond411) CFA_SP SP+-2
          CFI (cfiCond411) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond412) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond412) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond412) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond412) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond412) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond412) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond412) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond412) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond412) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond412) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond412) CFA_SP SP+-2
          CFI (cfiCond412) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker413 Using cfiCommon1
          CFI (cfiPicker413) NoFunction
          CFI (cfiPicker413) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond407
          CFI EndBlock cfiCond408
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiPicker413
        REQUIRE ??Subroutine112_0
        ; // Fall through to label ??Subroutine112_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine112_0:
          CFI Block cfiCond414 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_256
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond415 Using cfiCommon0
          CFI (cfiCond415) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond415) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond415) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond415) CFA_SP SP+-2
          CFI (cfiCond415) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond416) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond416) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond416) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond416) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond416) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond416) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+-2
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond417) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond417) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond417) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond417) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond417) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond417) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond417) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond417) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond417) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+-2
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond418) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond418) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond418) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond418) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond418) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond418) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond418) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond418) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond418) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond418) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+-2
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function zclGeneral_AddScene
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+-2
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function zclGeneral_AddScene
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-2
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function zclGeneral_FindAllScenesForGroup
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+-2
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond422 Using cfiCommon0
          CFI (cfiCond422) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond422) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond422) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond422) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond422) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond422) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond422) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond422) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond422) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond422) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond422) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond422) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond422) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond422) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond422) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond422) CFA_SP SP+-2
          CFI (cfiCond422) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond423) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-2
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond424) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond424) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond424) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond424) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond424) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond424) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond424) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+-2
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond425) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond425) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond425) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond425) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond425) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond425) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond425) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond425) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond425) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond425) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond425) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond425) CFA_SP SP+-2
          CFI (cfiCond425) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_268
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond426) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond426) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond426) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond426) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond426) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+-2
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_269
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond427) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond427) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond427) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond427) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond427) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond427) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond427) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-2
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond428) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond428) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond428) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond428) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond428) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond428) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond428) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+-2
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond429 Using cfiCommon0
          CFI (cfiCond429) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond429) Conditional ??CrossCallReturnLabel_271
          CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond429) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond429) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond429) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond429) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond429) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond429) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond429) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond429) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond429) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond429) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond429) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond429) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond429) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond429) CFA_SP SP+-2
          CFI (cfiCond429) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond430 Using cfiCommon0
          CFI (cfiCond430) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond430) Conditional ??CrossCallReturnLabel_272
          CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond430) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond430) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond430) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond430) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond430) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond430) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond430) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond430) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond430) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond430) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond430) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond430) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond430) CFA_SP SP+-2
          CFI (cfiCond430) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_273
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond431) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond431) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond431) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond431) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond431) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-2
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_274
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond432) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond432) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond432) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond432) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+-2
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond433) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond433) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond433) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond433) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond433) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond433) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond433) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond433) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond433) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+-2
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond434) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond434) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond434) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond434) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond434) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond434) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond434) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+-2
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond435) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond435) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond435) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond435) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond435) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-2
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond436) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond436) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond436) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond436) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond436) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond436) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond436) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond436) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond436) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond436) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+-2
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker437 Using cfiCommon1
          CFI (cfiPicker437) NoFunction
          CFI (cfiPicker437) Picker
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_343:
        ORL       A,R1
        RET
          CFI EndBlock cfiCond414
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiCond429
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiPicker437
// 2180 #endif // ZCL_STANDALONE
// 2181 
// 2182 #if !defined ( ZCL_STANDALONE )
// 2183 /*********************************************************************
// 2184  * @fn      zclGeneral_FindScene
// 2185  *
// 2186  * @brief   Find a scene with endpoint and sceneID
// 2187  *
// 2188  * @param   endpoint -
// 2189  * @param   groupID - what group the scene belongs to
// 2190  * @param   sceneID - ID to look for scene
// 2191  *
// 2192  * @return  a pointer to the scene information, NULL if not found
// 2193  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2194 zclGeneral_Scene_t *zclGeneral_FindScene( uint8 endpoint, uint16 groupID, uint8 sceneID )
zclGeneral_FindScene:
          CFI Block cfiBlock438 Using cfiCommon0
          CFI Function zclGeneral_FindScene
        CODE
// 2195 {
        REQUIRE ?V0
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV       A,R1
        MOV       R5,A
// 2196   zclGenSceneItem_t *pLoop;
// 2197 
// 2198   // Look for end of list
// 2199   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        SJMP      ??zclGeneral_FindScene_0
// 2200   while ( pLoop )
// 2201   {
// 2202     if ( (pLoop->endpoint == endpoint || endpoint == 0xFF)
// 2203         && pLoop->scene.groupID == groupID && pLoop->scene.ID == sceneID )
// 2204     {
// 2205       return ( &(pLoop->scene) );
// 2206     }
// 2207     pLoop = pLoop->next;
??zclGeneral_FindScene_1:
        MOV       DPL,R6
        MOV       DPH,R7
??zclGeneral_FindScene_0:
        LCALL     ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_306:
        MOV       A,R6
        ORL       A,R7
        JZ        ??zclGeneral_FindScene_2
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R5
        JZ        ??zclGeneral_FindScene_3
        MOV       A,#-0x1
        XRL       A,R5
        JNZ       ??zclGeneral_FindScene_1
??zclGeneral_FindScene_3:
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_119:
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??zclGeneral_FindScene_4
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??zclGeneral_FindScene_4:
        JNZ       ??zclGeneral_FindScene_1
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R4
        JNZ       ??zclGeneral_FindScene_1
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        SJMP      ??zclGeneral_FindScene_5
// 2208   }
// 2209 
// 2210   return ( (zclGeneral_Scene_t *)NULL );
??zclGeneral_FindScene_2:
        MOV       R2,#0x0
        MOV       R3,#0x0
??zclGeneral_FindScene_5:
          CFI EndBlock cfiBlock438
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 2211 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock439 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x1
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock439

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond440 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function zclGeneral_FindScene
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-2
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker442 Using cfiCommon1
          CFI (cfiPicker442) NoFunction
          CFI (cfiPicker442) Picker
        MOV       A,R6
        ADD       A,#0x3
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiPicker442
// 2212 #endif // ZCL_STANDALONE
// 2213 
// 2214 #if !defined ( ZCL_STANDALONE )
// 2215 /*********************************************************************
// 2216  * @fn      zclGeneral_FindAllScenesForGroup
// 2217  *
// 2218  * @brief   Find all the scenes with groupID
// 2219  *
// 2220  * @param   endpoint - endpoint to look for
// 2221  * @param   sceneList - List to hold scene IDs (should hold APS_MAX_SCENES entries)
// 2222  *
// 2223  * @return  number of scenes copied to sceneList
// 2224  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2225 uint8 zclGeneral_FindAllScenesForGroup( uint8 endpoint, uint16 groupID, uint8 *sceneList )
zclGeneral_FindAllScenesForGroup:
          CFI Block cfiBlock443 Using cfiCommon0
          CFI Function zclGeneral_FindAllScenesForGroup
        CODE
// 2226 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       A,R1
        MOV       R7,A
// 2227   zclGenSceneItem_t *pLoop;
// 2228   uint8 cnt = 0;
        MOV       R6,#0x0
// 2229 
// 2230   // Look for end of list
// 2231   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        SJMP      ??zclGeneral_FindAllScenesForGroup_0
// 2232   while ( pLoop )
// 2233   {
// 2234     if ( pLoop->endpoint == endpoint && pLoop->scene.groupID == groupID )
??zclGeneral_FindAllScenesForGroup_1:
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R7
        JNZ       ??zclGeneral_FindAllScenesForGroup_2
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??zclGeneral_FindAllScenesForGroup_3
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??zclGeneral_FindAllScenesForGroup_3:
        JNZ       ??zclGeneral_FindAllScenesForGroup_2
// 2235       sceneList[cnt++] = pLoop->scene.ID;
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        ADD       A,R6
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       R6
// 2236     pLoop = pLoop->next;
??zclGeneral_FindAllScenesForGroup_2:
        MOV       DPL,R0
        MOV       DPH,R1
// 2237   }
??zclGeneral_FindAllScenesForGroup_0:
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_257:
        JNZ       ??zclGeneral_FindAllScenesForGroup_1
// 2238   return ( cnt );
        MOV       A,R6
        MOV       R1,A
        LJMP      ??Subroutine125_0 & 0xFFFF
// 2239 }
          CFI EndBlock cfiBlock443
// 2240 #endif // ZCL_STANDALONE
// 2241 
// 2242 #if !defined ( ZCL_STANDALONE )
// 2243 /*********************************************************************
// 2244  * @fn      zclGeneral_RemoveScene
// 2245  *
// 2246  * @brief   Remove a scene with endpoint and sceneID
// 2247  *
// 2248  * @param   endpoint -
// 2249  * @param   groupID - what group the scene belongs to
// 2250  * @param   sceneID - ID to look for scene
// 2251  *
// 2252  * @return  TRUE if removed, FALSE if not found
// 2253  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2254 uint8 zclGeneral_RemoveScene( uint8 endpoint, uint16 groupID, uint8 sceneID )
zclGeneral_RemoveScene:
          CFI Block cfiBlock444 Using cfiCommon0
          CFI Function zclGeneral_RemoveScene
        CODE
// 2255 {
        FUNCALL zclGeneral_RemoveScene, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RemoveScene, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV       A,R1
        MOV       R6,A
        MOV       A,R4
        MOV       R7,A
// 2256   zclGenSceneItem_t *pLoop;
// 2257   zclGenSceneItem_t *pPrev;
// 2258 
// 2259   // Look for end of list
// 2260   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        LCALL     ?Subroutine46 & 0xFFFF
// 2261   pPrev = NULL;
??CrossCallReturnLabel_76:
        MOV       R4,#0x0
        MOV       R5,#0x0
        SJMP      ??CrossCallReturnLabel_77
// 2262   while ( pLoop )
// 2263   {
// 2264     if ( pLoop->endpoint == endpoint
// 2265         && pLoop->scene.groupID == groupID && pLoop->scene.ID == sceneID )
// 2266     {
// 2267       if ( pPrev == NULL )
// 2268         zclGenSceneTable = pLoop->next;
// 2269       else
// 2270         pPrev->next = pLoop->next;
// 2271 
// 2272       // Free the memory
// 2273       zcl_mem_free( pLoop );
// 2274 
// 2275       // Update NV
// 2276       zclGeneral_ScenesWriteNV();
// 2277 
// 2278       return ( TRUE );
// 2279     }
// 2280     pPrev = pLoop;
??zclGeneral_RemoveScene_0:
        MOV       A,R0
        MOV       R4,A
        MOV       A,R1
        MOV       R5,A
// 2281     pLoop = pLoop->next;
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_77:
        MOV       A,R0
        ORL       A,R1
        JZ        ??zclGeneral_RemoveScene_1
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R6
        JNZ       ??zclGeneral_RemoveScene_0
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??zclGeneral_RemoveScene_2
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??zclGeneral_RemoveScene_2:
        JNZ       ??zclGeneral_RemoveScene_0
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R7
        JNZ       ??zclGeneral_RemoveScene_0
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_90:
        MOV       A,R4
        ORL       A,R5
        JNZ       ??zclGeneral_RemoveScene_3
        MOV       DPTR,#zclGenSceneTable
        SJMP      ??zclGeneral_RemoveScene_4
??zclGeneral_RemoveScene_3:
        MOV       DPL,R4
        MOV       DPH,R5
??zclGeneral_RemoveScene_4:
        LCALL     ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_225:
        ; Setup parameters for call to function osal_mem_free
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL     `??zclGeneral_ScenesWriteNV::?relay`; Banked call to: zclGeneral_ScenesWriteNV
        MOV       R1,#0x1
        SJMP      ??zclGeneral_RemoveScene_5
// 2282   }
// 2283 
// 2284   return ( FALSE );
??zclGeneral_RemoveScene_1:
        MOV       R1,#0x0
??zclGeneral_RemoveScene_5:
        LJMP      ?Subroutine7 & 0xFFFF
// 2285 }
          CFI EndBlock cfiBlock444
// 2286 #endif // ZCL_STANDALONE
// 2287 
// 2288 #if !defined ( ZCL_STANDALONE )
// 2289 /*********************************************************************
// 2290  * @fn      zclGeneral_RemoveAllScenes
// 2291  *
// 2292  * @brief   Remove all scenes with endpoint and group Id
// 2293  *
// 2294  * @param   endpoint -
// 2295  * @param   groupID - ID to look for group
// 2296  *
// 2297  * @return  none
// 2298  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2299 void zclGeneral_RemoveAllScenes( uint8 endpoint, uint16 groupID )
zclGeneral_RemoveAllScenes:
          CFI Block cfiBlock445 Using cfiCommon0
          CFI Function zclGeneral_RemoveAllScenes
        CODE
// 2300 {
        FUNCALL zclGeneral_RemoveAllScenes, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_RemoveAllScenes, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        MOV       A,#-0xd
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 0
        MOV       ?V4,R1
        MOV       ?V0,R2
        MOV       ?V1,R3
// 2301   zclGenSceneItem_t *pLoop;
// 2302   zclGenSceneItem_t *pPrev;
// 2303   zclGenSceneItem_t *pNext;
// 2304 
// 2305   // Look for end of list
// 2306   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        LCALL     ?Subroutine48 & 0xFFFF
// 2307   pPrev = NULL;
??CrossCallReturnLabel_91:
        MOV       R6,#0x0
        MOV       R7,#0x0
        SJMP      ??zclGeneral_RemoveAllScenes_0
// 2308   while ( pLoop )
// 2309   {
// 2310     if ( pLoop->endpoint == endpoint && pLoop->scene.groupID == groupID )
// 2311     {
// 2312       if ( pPrev == NULL )
// 2313         zclGenSceneTable = pLoop->next;
// 2314       else
// 2315         pPrev->next = pLoop->next;
??zclGeneral_RemoveAllScenes_1:
        MOV       DPL,R6
        MOV       DPH,R7
??zclGeneral_RemoveAllScenes_2:
        LCALL     ?Subroutine65 & 0xFFFF
// 2316       pNext = pLoop->next;
??CrossCallReturnLabel_299:
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
// 2317 
// 2318       // Free the memory
// 2319       zcl_mem_free( pLoop );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2320       pLoop = pNext;
        MOV       R2,?V2
        MOV       R3,?V3
??zclGeneral_RemoveAllScenes_0:
        MOV       A,R2
        ORL       A,R3
        JZ        ??zclGeneral_RemoveAllScenes_3
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V4
        JNZ       ??zclGeneral_RemoveAllScenes_4
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V0
        JNZ       ??zclGeneral_RemoveAllScenes_5
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V1
??zclGeneral_RemoveAllScenes_5:
        JNZ       ??zclGeneral_RemoveAllScenes_4
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_78:
        MOV       A,R6
        ORL       A,R7
        JNZ       ??zclGeneral_RemoveAllScenes_1
        MOV       DPTR,#zclGenSceneTable
        SJMP      ??zclGeneral_RemoveAllScenes_2
// 2321     }
// 2322     else
// 2323     {
// 2324       pPrev = pLoop;
??zclGeneral_RemoveAllScenes_4:
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 2325       pLoop = pLoop->next;
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine48 & 0xFFFF
// 2326     }
// 2327   }
??CrossCallReturnLabel_92:
        SJMP      ??zclGeneral_RemoveAllScenes_0
// 2328 
// 2329   // Update NV
// 2330   zclGeneral_ScenesWriteNV();
??zclGeneral_RemoveAllScenes_3:
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL     `??zclGeneral_ScenesWriteNV::?relay`; Banked call to: zclGeneral_ScenesWriteNV
// 2331 }
        MOV       R7,#0x5
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock445

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond446 Using cfiCommon0
          CFI Function zclGeneral_SendSceneViewRsp
          CFI Conditional ??CrossCallReturnLabel_74
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+-2
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function zclGeneral_RemoveScene
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+-2
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function zclGeneral_RemoveScene
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+-2
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+-2
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond451) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond451) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond451) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond451) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond451) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond451) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond451) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond451) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond451) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond451) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+-2
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond452) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond452) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond452) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond452) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond452) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond452) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond452) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond452) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond452) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond452) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond452) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond452) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond452) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond452) CFA_SP SP+-2
          CFI (cfiCond452) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function zclGeneral_ScenesInit
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_81
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-2
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 68)
          CFI Block cfiPicker454 Using cfiCommon1
          CFI (cfiPicker454) NoFunction
          CFI (cfiPicker454) Picker
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_348:
        MOV       R1,A
        RET
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiPicker454
// 2332 #endif // ZCL_STANDALONE
// 2333 
// 2334 #if !defined ( ZCL_STANDALONE )
// 2335 /*********************************************************************
// 2336  * @fn      zclGeneral_CountScenes
// 2337  *
// 2338  * @brief   Count the number of scenes for an endpoint
// 2339  *
// 2340  * @param   endpoint -
// 2341  *
// 2342  * @return  number of scenes assigned to an endpoint
// 2343  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2344 uint8 zclGeneral_CountScenes( uint8 endpoint )
zclGeneral_CountScenes:
          CFI Block cfiBlock455 Using cfiCommon0
          CFI Function zclGeneral_CountScenes
        CODE
// 2345 {
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
        MOV       A,R1
        MOV       R0,A
// 2346   zclGenSceneItem_t *pLoop;
// 2347   uint8 cnt = 0;
        MOV       R1,#0x0
// 2348 
// 2349   // Look for end of list
// 2350   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        SJMP      ??zclGeneral_CountScenes_0
// 2351   while ( pLoop )
// 2352   {
// 2353     if ( pLoop->endpoint == endpoint  )
??zclGeneral_CountScenes_1:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R0
        JNZ       ??zclGeneral_CountScenes_2
// 2354       cnt++;
        INC       R1
// 2355     pLoop = pLoop->next;
??zclGeneral_CountScenes_2:
        MOV       DPL,R2
        MOV       DPH,R3
// 2356   }
??zclGeneral_CountScenes_0:
        LCALL     ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_279:
        JNZ       ??zclGeneral_CountScenes_1
// 2357   return ( cnt );
        SJMP      ?Subroutine5
// 2358 }
          CFI EndBlock cfiBlock455

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond456 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_282
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+-2
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+-2
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker459 Using cfiCommon1
          CFI (cfiPicker459) NoFunction
          CFI (cfiPicker459) Picker
        MOV       R2,A
        CLR       A
        ADDC      A,R5
        MOV       R3,A
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       DPL,R2
        MOV       DPH,A
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiPicker459
        REQUIRE ??Subroutine113_0
        ; // Fall through to label ??Subroutine113_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine113_0:
          CFI Block cfiCond460 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_280
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-2
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function zclGeneral_CountScenes
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond462) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond462) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond462) CFA_SP SP+-7
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-2
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+-2
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+-2
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker466 Using cfiCommon1
          CFI (cfiPicker466) NoFunction
          CFI (cfiPicker466) Picker
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_288:
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiPicker466
// 2359 #endif
// 2360 
// 2361 #if !defined ( ZCL_STANDALONE )
// 2362 /*********************************************************************
// 2363  * @fn      zclGeneral_CountAllScenes
// 2364  *
// 2365  * @brief   Count the total number of scenes
// 2366  *
// 2367  * @param   none
// 2368  *
// 2369  * @return  number of scenes
// 2370  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2371 uint8 zclGeneral_CountAllScenes( void )
zclGeneral_CountAllScenes:
          CFI Block cfiBlock467 Using cfiCommon0
          CFI Function zclGeneral_CountAllScenes
        CODE
// 2372 {
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2373   zclGenSceneItem_t *pLoop;
// 2374   uint8 cnt = 0;
        MOV       R1,#0x0
// 2375 
// 2376   // Look for end of list
// 2377   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        SJMP      ??zclGeneral_CountAllScenes_0
// 2378   while ( pLoop )
// 2379   {
// 2380     cnt++;
??zclGeneral_CountAllScenes_1:
        INC       R1
// 2381     pLoop = pLoop->next;
// 2382   }
??zclGeneral_CountAllScenes_0:
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_102:
        MOV       A,DPL
        ORL       A,DPH
        JNZ       ??zclGeneral_CountAllScenes_1
// 2383   return ( cnt );
          CFI EndBlock cfiBlock467
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
// 2384 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock468 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP       DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP       DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP      ?BRET
          CFI EndBlock cfiBlock468

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond469 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function zclGeneral_CountAllScenes
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_102
          CFI (cfiCond470) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond470) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond470) CFA_SP SP+-7
          CFI Block cfiPicker471 Using cfiCommon1
          CFI (cfiPicker471) NoFunction
          CFI (cfiPicker471) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiPicker471
// 2385 #endif // ZCL_STANDALONE
// 2386 
// 2387 /*********************************************************************
// 2388  * @fn      zclGeneral_ReadSceneCountCB
// 2389  *
// 2390  * @brief   Read the number of scenes currently in the device's
// 2391  *          scene table (i.e., the Scene Count attribute).
// 2392  *
// 2393  *          Note: This function gets called only when the pointer
// 2394  *                'dataPtr' to the Scene Count attribute value is
// 2395  *                NULL in the attribute database registered with
// 2396  *                the ZCL.
// 2397  *
// 2398  * @param   clusterId - cluster that attribute belongs to
// 2399  * @param   attrId - attribute to be read or written
// 2400  * @param   oper - ZCL_OPER_LEN, ZCL_OPER_READ, or ZCL_OPER_WRITE
// 2401  * @param   pValue - pointer to attribute value
// 2402  * @param   pLen - pointer to length of attribute value read
// 2403  *
// 2404  * @return  status
// 2405  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2406 ZStatus_t zclGeneral_ReadSceneCountCB( uint16 clusterId, uint16 attrId,
zclGeneral_ReadSceneCountCB:
          CFI Block cfiBlock472 Using cfiCommon0
          CFI Function zclGeneral_ReadSceneCountCB
        CODE
// 2407                                        uint8 oper, uint8 *pValue, uint16 *pLen )
// 2408 {
        FUNCALL zclGeneral_ReadSceneCountCB, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       ?V1,R1
// 2409   ZStatus_t status = ZCL_STATUS_SUCCESS;
        MOV       ?V0,#0x0
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine107_0 & 0xFFFF
// 2410 
// 2411   // This callback function should only be called for the Scene Count attribute
// 2412   switch ( oper )
??CrossCallReturnLabel_239:
        MOV       A,?V1
        JZ        ??zclGeneral_ReadSceneCountCB_0
        DEC       A
        JNZ       ??zclGeneral_ReadSceneCountCB_1
// 2413   {
// 2414     case ZCL_OPER_LEN:
// 2415       *pLen = 1; // uint8
// 2416       break;
// 2417 
// 2418     case ZCL_OPER_READ:
// 2419       *pValue = zclGeneral_CountAllScenes();
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL     `??zclGeneral_CountAllScenes::?relay`; Banked call to: zclGeneral_CountAllScenes
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_335:
        MOV       A,R1
        MOVX      @DPTR,A
// 2420 
// 2421       if ( pLen != NULL )
        MOV       A,R6
        ORL       A,R7
        JZ        ??zclGeneral_ReadSceneCountCB_2
// 2422       {
// 2423         *pLen = 1;
??zclGeneral_ReadSceneCountCB_0:
        MOV       DPL,R6
        MOV       DPH,R7
        MOV       A,#0x1
        MOVX      @DPTR,A
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
        SJMP      ??zclGeneral_ReadSceneCountCB_2
// 2424       }
// 2425       break;
// 2426 
// 2427     case ZCL_OPER_WRITE:
// 2428       // Fall through
// 2429 
// 2430     default:
// 2431       status = ZCL_STATUS_SOFTWARE_FAILURE; // should never get here!
??zclGeneral_ReadSceneCountCB_1:
        MOV       ?V0,#-0x3f
// 2432       break;
// 2433   }
// 2434 
// 2435   return ( status );
??zclGeneral_ReadSceneCountCB_2:
        MOV       R1,?V0
        LJMP      ??Subroutine125_0 & 0xFFFF
// 2436 }
          CFI EndBlock cfiBlock472
// 2437 
// 2438 /*********************************************************************
// 2439  * @fn      zclGeneral_ProcessInScenesServer
// 2440  *
// 2441  * @brief   Process in the received Scenes Command.
// 2442  *
// 2443  * @param   pInMsg - pointer to the incoming message
// 2444  *
// 2445  * @return  ZStatus_t
// 2446  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2447 static ZStatus_t zclGeneral_ProcessInScenesServer( zclIncoming_t *pInMsg,
zclGeneral_ProcessInScenesServer:
          CFI Block cfiBlock473 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
        CODE
// 2448                                                    zclGeneral_AppCallbacks_t *pCBs )
// 2449 {
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zcl_ReadAttrData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 86, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 85, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 85, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 85, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 85, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 85, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 85, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 85, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 85, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_AddScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneViewRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 86, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_RemoveScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_RemoveAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_AddScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, aps_FindGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_FindAllScenesForGroup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_CountAllScenes
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, zclGeneral_SendSceneGetMembershipResponse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 89, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 89, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesServer, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 82, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 82, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 60
        MOV       A,#-0x3c
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V6,R4
        MOV       ?V7,R5
// 2450   zclGeneral_Scene_t scene;
// 2451   zclGeneral_Scene_t *pScene;
// 2452   uint8 *pData = pInMsg->pData;
        MOV       A,R2
        ADD       A,#0x8
        MOV       ?V8,A
        CLR       A
        ADDC      A,R7
        MOV       ?V9,A
        MOV       DPL,?V8
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
// 2453   uint8 nameLen;
// 2454   uint8 status;
// 2455   uint8 sceneCnt = 0;
        MOV       ?V5,#0x0
// 2456   uint8 *sceneList = NULL;
        MOV       ?V2,#0x0
        MOV       ?V3,#0x0
// 2457   uint8 sendRsp = TRUE;
// 2458   uint8 nameSupport = FALSE;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
// 2459   ZStatus_t stat = ZSuccess;
        MOV       ?V4,#0x0
// 2460 
// 2461   zcl_memset( (uint8*)&scene, 0, sizeof( zclGeneral_Scene_t ) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x37
        MOV       R5,A
        MOV       R1,A
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
// 2462 
// 2463   scene.groupID = BUILD_UINT16( pData[0], pData[1] );
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_329:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        LCALL     ??Subroutine115_0 & 0xFFFF
// 2464   pData += 2;   // Move past group ID
// 2465   scene.ID = *pData++;
??CrossCallReturnLabel_292:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        MOVX      @DPTR,A
        MOV       A,?V0
        ADD       A,#0x3
        MOV       ?V0,A
        JNC       ??zclGeneral_ProcessInScenesServer_0
        INC       ?V1
// 2466 
// 2467   switch ( pInMsg->hdr.commandID )
??zclGeneral_ProcessInScenesServer_0:
        MOV       A,R6
        ADD       A,#0x6
        MOV       ?V12,A
        CLR       A
        ADDC      A,R7
        MOV       ?V13,A
        MOV       A,R6
        ADD       A,#0x7
        MOV       ?V10,A
        CLR       A
        ADDC      A,R7
        MOV       ?V11,A
        MOV       DPL,?V10
        MOV       DPH,A
        MOVX      A,@DPTR
        JZ        ??zclGeneral_ProcessInScenesServer_1
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_2 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_3 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_4 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_5 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_6 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_7 & 0xFFFF
        LJMP      ??zclGeneral_ProcessInScenesServer_8 & 0xFFFF
// 2468   {
// 2469     case COMMAND_SCENE_ADD:
// 2470 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2471     case COMMAND_SCENE_ENHANCED_ADD:
// 2472 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2473       // Parse the rest of the incoming message
// 2474       scene.transTime = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInScenesServer_1:
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_330:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        LCALL     ??Subroutine115_0 & 0xFFFF
// 2475       pData += 2;
// 2476 
// 2477       if ( pInMsg->hdr.commandID == COMMAND_SCENE_ENHANCED_ADD )
??CrossCallReturnLabel_293:
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        XRL       A,#0x40
        JNZ       ??CrossCallReturnLabel_300
// 2478       {
// 2479         // Received transition time is in 1/10 second
// 2480         scene.transTime100ms = scene.transTime % 10;
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       R2,#0xa
        MOV       R3,#0x0
        LCALL     ?US_DIV_MOD
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine62 & 0xFFFF
// 2481         scene.transTime /= 10;
??CrossCallReturnLabel_226:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine46 & 0xFFFF
// 2482       }
??CrossCallReturnLabel_79:
        MOV       R2,#0xa
        MOV       R3,#0x0
        LCALL     ?US_DIV_MOD
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine65 & 0xFFFF
// 2483 
// 2484       nameLen= *pData++; // Name length
??CrossCallReturnLabel_300:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       A,?V0
        ADD       A,#0x3
        MOV       ?V0,A
        JNC       ??zclGeneral_ProcessInScenesServer_9
        INC       ?V1
// 2485 
// 2486       // Retrieve Name Support attribute
// 2487       zcl_ReadAttrData( pInMsg->msg->endPoint, ZCL_CLUSTER_ID_GEN_SCENES,
// 2488                         ATTRID_SCENES_NAME_SUPPORT, &nameSupport, NULL );
??zclGeneral_ProcessInScenesServer_9:
        ; Setup parameters for call to function zcl_ReadAttrData
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V4,R0
        MOV       ?V5,R1
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 86)
        MOV       R4,#0x4
        MOV       R5,#0x0
        MOV       R2,#0x5
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_32:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2489 
// 2490       if ( nameSupport )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        JZ        ??zclGeneral_ProcessInScenesServer_10
// 2491       {
// 2492         if ( nameLen > (ZCL_GEN_SCENE_NAME_LEN-1) )
        MOV       A,?V2
        CLR       C
        SUBB      A,#0x10
        JC        ??zclGeneral_ProcessInScenesServer_11
// 2493           nameLen = (ZCL_GEN_SCENE_NAME_LEN-1);
        MOV       ?V2,#0xf
// 2494         scene.name[0] = nameLen;
??zclGeneral_ProcessInScenesServer_11:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine57 & 0xFFFF
// 2495         zcl_memcpy( &(scene.name[1]), pData, nameLen );
// 2496       }
??CrossCallReturnLabel_104:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       R4,?V2
        MOV       R5,#0x0
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_246:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2497 
// 2498       pData += nameLen; // move past name, use original length
??zclGeneral_ProcessInScenesServer_10:
        MOV       R0,?V2
        MOV       A,?V0
        ADD       A,R0
        MOV       ?V0,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V1,A
// 2499 
// 2500       scene.extLen = pInMsg->pDataLen - ( (uint16)( pData - pInMsg->pData ) );
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       R1,?V0
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,R1
        ADD       A,R0
        MOV       R0,A
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
// 2501       if ( scene.extLen > 0 )
        JZ        ??zclGeneral_ProcessInScenesServer_12
// 2502       {
// 2503         // Copy the extention field(s)
// 2504         if ( scene.extLen > ZCL_GEN_SCENE_EXT_LEN )
        CLR       C
        SUBB      A,#0x20
        JC        ??zclGeneral_ProcessInScenesServer_13
// 2505         {
// 2506           scene.extLen = ZCL_GEN_SCENE_EXT_LEN;
        MOV       A,#0x1f
        MOVX      @DPTR,A
// 2507         }
// 2508         zcl_memcpy( scene.extField, pData, scene.extLen );
??zclGeneral_ProcessInScenesServer_13:
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       A,#0x1f
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,#0x20
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine72 & 0xFFFF
// 2509       }
??CrossCallReturnLabel_247:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2510 
// 2511       if ( scene.groupID == 0x0000 ||
// 2512            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_12:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_264:
        JZ        ??zclGeneral_ProcessInScenesServer_14
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_1:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_15 & 0xFFFF
// 2513       {
// 2514         // Either the Scene doesn't belong to a Group (Group ID = 0x0000) or it
// 2515         // does and the corresponding Group exits
// 2516         pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_14:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine11 & 0xFFFF
// 2517         if ( pScene || ( zclGeneral_CountAllScenes() < ZCL_GEN_MAX_SCENES ) )
??CrossCallReturnLabel_7:
        JNZ       ??zclGeneral_ProcessInScenesServer_16
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL     `??zclGeneral_CountAllScenes::?relay`; Banked call to: zclGeneral_CountAllScenes
        MOV       A,R1
        CLR       C
        SUBB      A,#0x10
        JC        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_17 & 0xFFFF
// 2518         {
// 2519           status = ZCL_STATUS_SUCCESS;
??zclGeneral_ProcessInScenesServer_16:
        MOV       ?V0,#0x0
// 2520           if ( pScene != NULL )
        MOV       A,?V2
        ORL       A,?V3
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_18 & 0xFFFF
// 2521           {
// 2522             // The Scene already exists so update it
// 2523             pScene->transTime = scene.transTime;
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_80:
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine65 & 0xFFFF
// 2524             zcl_memcpy( pScene->name, scene.name, ZCL_GEN_SCENE_NAME_LEN );
??CrossCallReturnLabel_301:
        ; Setup parameters for call to function osal_memcpy
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       R4,#0x10
        MOV       R5,#0x0
        MOV       A,?V2
        ADD       A,#0x7
        MOV       R2,A
        CLR       A
        ADDC      A,?V3
        MOV       R3,A
        LCALL     ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_254:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2525 
// 2526             // Use the new extention field(s)
// 2527             zcl_memcpy( pScene->extField, scene.extField, scene.extLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       A,#0x1f
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,?V2
        ADD       A,#0x18
        MOV       R2,A
        CLR       A
        ADDC      A,?V3
        MOV       R3,A
        LCALL     ??Subroutine110_0 & 0xFFFF
??CrossCallReturnLabel_255:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2528             pScene->extLen = scene.extLen;
        MOV       A,#0x1c
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V2
        ADD       A,#0x17
        MOV       DPL,A
        CLR       A
        ADDC      A,?V3
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2529 
// 2530             // Save Scenes
// 2531             zclGeneral_ScenesSave();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL     `??zclGeneral_ScenesWriteNV::?relay`; Banked call to: zclGeneral_ScenesWriteNV
// 2532           }
        SJMP      ??zclGeneral_ProcessInScenesServer_19
// 2533           else
// 2534           {
// 2535             // The Scene doesn't exist so add it
// 2536             zclGeneral_AddScene( pInMsg->msg->endPoint, &scene );
??zclGeneral_ProcessInScenesServer_18:
        ; Setup parameters for call to function zclGeneral_AddScene
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine27 & 0xFFFF
// 2537           }
// 2538         }
??CrossCallReturnLabel_37:
        SJMP      ??zclGeneral_ProcessInScenesServer_19
// 2539         else
// 2540         {
// 2541           status = ZCL_STATUS_INSUFFICIENT_SPACE; // The Scene Table is full
??zclGeneral_ProcessInScenesServer_17:
        MOV       ?V0,#-0x77
        SJMP      ??zclGeneral_ProcessInScenesServer_19
// 2542         }
// 2543       }
// 2544       else
// 2545       {
// 2546         status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
??zclGeneral_ProcessInScenesServer_15:
        MOV       ?V0,#-0x7b
// 2547       }
// 2548 
// 2549       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_19:
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_11:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL     ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_274:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2550       {
// 2551         if ( pInMsg->hdr.commandID == COMMAND_SCENE_ADD )
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2552         {
// 2553           zclGeneral_SendSceneAddResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2554                                           status, scene.groupID, scene.ID,
// 2555                                           true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL     ?Subroutine13 & 0xFFFF
// 2556         }
// 2557 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2558         else // COMMAND_SCENE_ENHANCED_ADD
// 2559         {
// 2560           zclGeneral_SendSceneEnhancedAddResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2561                                                   status, scene.groupID, scene.ID,
// 2562                                                   true, pInMsg->hdr.transSeqNum );
// 2563         }
// 2564 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2565       }
??CrossCallReturnLabel_207:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_204:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 87)
        MOV       R5,?V0
        MOV       R4,#0x0
        LJMP      ??zclGeneral_ProcessInScenesServer_21 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 82)
// 2566       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2567 
// 2568       break;
// 2569 
// 2570     case COMMAND_SCENE_VIEW:
// 2571 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2572     case COMMAND_SCENE_ENHANCED_VIEW:
// 2573 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2574       pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_2:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine11 & 0xFFFF
// 2575       if ( pScene != NULL )
??CrossCallReturnLabel_8:
        JZ        ??zclGeneral_ProcessInScenesServer_22
// 2576       {
// 2577         status = ZCL_STATUS_SUCCESS;
        MOV       ?V0,#0x0
        SJMP      ??zclGeneral_ProcessInScenesServer_23
// 2578       }
// 2579       else
// 2580       {
// 2581         // Scene not found
// 2582         if ( scene.groupID != 0x0000 &&
// 2583              aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) == NULL )
??zclGeneral_ProcessInScenesServer_22:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_265:
        JZ        ??zclGeneral_ProcessInScenesServer_24
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_2:
        JNZ       ??zclGeneral_ProcessInScenesServer_24
// 2584         {
// 2585           status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
        MOV       ?V0,#-0x7b
        SJMP      ??zclGeneral_ProcessInScenesServer_25
// 2586         }
// 2587         else
// 2588         {
// 2589           status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInScenesServer_24:
        MOV       ?V0,#-0x75
// 2590         }
// 2591         pScene = &scene;
??zclGeneral_ProcessInScenesServer_25:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
// 2592       }
// 2593 
// 2594       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_23:
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_12:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL     ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_275:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2595       {
// 2596         if ( pInMsg->hdr.commandID == COMMAND_SCENE_VIEW )
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        XRL       A,#0x1
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2597         {
// 2598           zclGeneral_SendSceneViewResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2599                                            status, pScene, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneViewRsp
        LCALL     ?Subroutine13 & 0xFFFF
// 2600         }
// 2601 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2602         else
// 2603         {
// 2604           zclGeneral_SendSceneEnhancedViewResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2605                                                    status, pScene, true, pInMsg->hdr.transSeqNum );
// 2606         }
// 2607 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2608       }
??CrossCallReturnLabel_208:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 86)
        MOV       R5,?V0
        MOV       R4,#0x1
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_129:
        LCALL     `??zclGeneral_SendSceneViewRsp::?relay`; Banked call to: zclGeneral_SendSceneViewRsp
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2609       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2610       break;
// 2611 
// 2612     case COMMAND_SCENE_REMOVE:
// 2613       if ( zclGeneral_RemoveScene( pInMsg->msg->endPoint, scene.groupID, scene.ID ) )
??zclGeneral_ProcessInScenesServer_3:
        ; Setup parameters for call to function zclGeneral_RemoveScene
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_17:
        LCALL     `??zclGeneral_RemoveScene::?relay`; Banked call to: zclGeneral_RemoveScene
        MOV       A,R1
        JZ        ??zclGeneral_ProcessInScenesServer_26
// 2614       {
// 2615         status = ZCL_STATUS_SUCCESS;
        MOV       ?V0,#0x0
        SJMP      ??zclGeneral_ProcessInScenesServer_27
// 2616       }
// 2617       else
// 2618       {
// 2619         // Scene not found
// 2620         if ( aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) == NULL )
??zclGeneral_ProcessInScenesServer_26:
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_3:
        JNZ       ??zclGeneral_ProcessInScenesServer_28
// 2621         {
// 2622           // The Group is not in the Group Table
// 2623           status = ZCL_STATUS_INVALID_FIELD;
        MOV       ?V0,#-0x7b
        SJMP      ??zclGeneral_ProcessInScenesServer_27
// 2624         }
// 2625         else
// 2626         {
// 2627           status = ZCL_STATUS_NOT_FOUND;
??zclGeneral_ProcessInScenesServer_28:
        MOV       ?V0,#-0x75
// 2628         }
// 2629       }
// 2630 
// 2631       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_27:
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_13:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL     ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_276:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2632       {
// 2633         // Addressed to this device (not to a group) - send a response back
// 2634         zclGeneral_SendSceneRemoveResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2635                                             status, scene.groupID,
// 2636                                             scene.ID, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL     ?Subroutine13 & 0xFFFF
// 2637       }
??CrossCallReturnLabel_209:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_205:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 87)
        MOV       R5,?V0
        MOV       R4,#0x2
        LJMP      ??zclGeneral_ProcessInScenesServer_21 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 82)
// 2638       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2639       break;
// 2640 
// 2641     case COMMAND_SCENE_REMOVE_ALL:
// 2642       if ( scene.groupID == 0x0000 ||
// 2643            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_4:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_266:
        JZ        ??zclGeneral_ProcessInScenesServer_29
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_4:
        JZ        ??zclGeneral_ProcessInScenesServer_30
// 2644       {
// 2645         zclGeneral_RemoveAllScenes( pInMsg->msg->endPoint, scene.groupID );
??zclGeneral_ProcessInScenesServer_29:
        ; Setup parameters for call to function zclGeneral_RemoveAllScenes
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine15 & 0xFFFF
// 2646         status = ZCL_STATUS_SUCCESS;
??CrossCallReturnLabel_315:
        MOV       ?V0,#0x0
        SJMP      ??zclGeneral_ProcessInScenesServer_31
// 2647       }
// 2648       else
// 2649       {
// 2650         status = ZCL_STATUS_INVALID_FIELD;
??zclGeneral_ProcessInScenesServer_30:
        MOV       ?V0,#-0x7b
// 2651       }
// 2652 
// 2653       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_31:
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_14:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL     ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_277:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2654       {
// 2655         // Addressed to this device (not to a group) - send a response back
// 2656         zclGeneral_SendSceneRemoveAllResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2657                                                status, scene.groupID, true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL     ?Subroutine13 & 0xFFFF
// 2658       }
??CrossCallReturnLabel_210:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 87)
        MOV       R5,?V0
        MOV       R4,#0x3
        LJMP      ??zclGeneral_ProcessInScenesServer_21 & 0xFFFF
          CFI CFA_XSP16 add(XSP16, 82)
// 2659       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2660       break;
// 2661 
// 2662     case COMMAND_SCENE_STORE:
// 2663       if ( scene.groupID == 0x0000 ||
// 2664            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_5:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_267:
        JZ        ??zclGeneral_ProcessInScenesServer_32
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_5:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_33 & 0xFFFF
// 2665       {
// 2666         // Either the Scene doesn't belong to a Group (Group ID = 0x0000) or it
// 2667         // does and the corresponding Group exits
// 2668         pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_32:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine11 & 0xFFFF
// 2669         if ( pScene || ( zclGeneral_CountAllScenes() < ZCL_GEN_MAX_SCENES ) )
??CrossCallReturnLabel_9:
        JNZ       ??zclGeneral_ProcessInScenesServer_34
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL     `??zclGeneral_CountAllScenes::?relay`; Banked call to: zclGeneral_CountAllScenes
        MOV       A,R1
        CLR       C
        SUBB      A,#0x10
        JNC       ??zclGeneral_ProcessInScenesServer_35
// 2670         {
// 2671           uint8 sceneChanged = FALSE;
??zclGeneral_ProcessInScenesServer_34:
        CLR       ?VB.0
// 2672 
// 2673           status = ZCL_STATUS_SUCCESS;
        MOV       ?V0,#0x0
// 2674           if ( pScene == NULL )
        MOV       A,?V2
        ORL       A,?V3
        JNZ       ??zclGeneral_ProcessInScenesServer_36
// 2675           {
// 2676             // Haven't been added yet
// 2677             pScene = &scene;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
// 2678           }
// 2679 
// 2680           if ( pCBs->pfnSceneStoreReq )
??zclGeneral_ProcessInScenesServer_36:
        MOV       A,?V6
        ADD       A,#0x16
        MOV       DPL,A
        CLR       A
        ADDC      A,?V7
        MOV       DPH,A
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_268:
        JZ        ??zclGeneral_ProcessInScenesServer_37
// 2681           {
// 2682             zclSceneReq_t req;
// 2683 
// 2684             req.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL     ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_70:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine61 & 0xFFFF
// 2685             req.scene = pScene;
??CrossCallReturnLabel_302:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
// 2686 
// 2687             // Get the latest Scene info
// 2688             if ( pCBs->pfnSceneStoreReq( &req ) )
        ; Setup parameters for indirect call
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP101_8
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?CALL_IND
        MOV       A,R1
        JZ        ??zclGeneral_ProcessInScenesServer_37
// 2689             {
// 2690               sceneChanged = TRUE;
        SETB      ?VB.0
// 2691             }
// 2692           }
// 2693 
// 2694           if ( pScene == &scene )
??zclGeneral_ProcessInScenesServer_37:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP100_8
        MOV       A,?V2
        XRL       A,R0
        JNZ       ??zclGeneral_ProcessInScenesServer_38
        MOV       A,?V3
        XRL       A,R1
??zclGeneral_ProcessInScenesServer_38:
        JNZ       ??zclGeneral_ProcessInScenesServer_39
// 2695           {
// 2696             // The Scene doesn't exist so add it
// 2697             zclGeneral_AddScene( pInMsg->msg->endPoint, &scene );
        ; Setup parameters for call to function zclGeneral_AddScene
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine27 & 0xFFFF
// 2698           }
??CrossCallReturnLabel_38:
        SJMP      ??zclGeneral_ProcessInScenesServer_40
// 2699           else if ( sceneChanged )
??zclGeneral_ProcessInScenesServer_39:
        MOV       C,?VB.0
        JNC       ??zclGeneral_ProcessInScenesServer_40
// 2700           {
// 2701             // The Scene already exists so update only NV
// 2702             zclGeneral_ScenesSave();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL     `??zclGeneral_ScenesWriteNV::?relay`; Banked call to: zclGeneral_ScenesWriteNV
// 2703           }
// 2704         }
        SJMP      ??zclGeneral_ProcessInScenesServer_40
// 2705         else
// 2706         {
// 2707           status = ZCL_STATUS_INSUFFICIENT_SPACE; // The Scene Table is full
??zclGeneral_ProcessInScenesServer_35:
        MOV       ?V0,#-0x77
        SJMP      ??zclGeneral_ProcessInScenesServer_40
// 2708         }
// 2709       }
// 2710       else
// 2711       {
// 2712         status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
??zclGeneral_ProcessInScenesServer_33:
        MOV       ?V0,#-0x7b
// 2713       }
// 2714 
// 2715       if ( UNICAST_MSG( pInMsg->msg ) )
??zclGeneral_ProcessInScenesServer_40:
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_15:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
        LCALL     ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_278:
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2716       {
// 2717         // Addressed to this device (not to a group) - send a response back
// 2718         zclGeneral_SendSceneStoreResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2719                                            status, scene.groupID, scene.ID,
// 2720                                            true, pInMsg->hdr.transSeqNum );
        ; Setup parameters for call to function zclGeneral_SendSceneResponse
        LCALL     ?Subroutine13 & 0xFFFF
// 2721       }
??CrossCallReturnLabel_211:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine99_0 & 0xFFFF
??CrossCallReturnLabel_206:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 85)
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 87)
        MOV       R5,?V0
        MOV       R4,#0x4
??zclGeneral_ProcessInScenesServer_21:
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_130:
        LCALL     `??zclGeneral_SendSceneResponse::?relay`; Banked call to: zclGeneral_SendSceneResponse
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
        LJMP      ??zclGeneral_ProcessInScenesServer_20 & 0xFFFF
// 2722       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2723       break;
// 2724 
// 2725     case COMMAND_SCENE_RECALL:
// 2726       pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, scene.groupID, scene.ID );
??zclGeneral_ProcessInScenesServer_6:
        ; Setup parameters for call to function zclGeneral_FindScene
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine11 & 0xFFFF
// 2727       if ( pScene && pCBs->pfnSceneRecallReq )
??CrossCallReturnLabel_10:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_41 & 0xFFFF
        MOV       A,?V6
        ADD       A,#0x18
        MOV       DPL,A
        CLR       A
        ADDC      A,?V7
        MOV       DPH,A
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_269:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesServer_41 & 0xFFFF
// 2728       {
// 2729         zclSceneReq_t req;
// 2730 
// 2731         req.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL     ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_71:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine61 & 0xFFFF
// 2732         req.scene = pScene;
??CrossCallReturnLabel_303:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
// 2733 
// 2734         pCBs->pfnSceneRecallReq( &req );
        ; Setup parameters for indirect call
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP101_8
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?CALL_IND
        LJMP      ??zclGeneral_ProcessInScenesServer_41 & 0xFFFF
// 2735       }
// 2736       // No response
// 2737       break;
// 2738 
// 2739     case COMMAND_SCENE_GET_MEMBERSHIP:
// 2740       // Find all the Scenes corresponding to the Group ID
// 2741       if ( scene.groupID == 0x0000 ||
// 2742            aps_FindGroup( pInMsg->msg->endPoint, scene.groupID ) != NULL )
??zclGeneral_ProcessInScenesServer_7:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_270:
        JZ        ??zclGeneral_ProcessInScenesServer_42
        ; Setup parameters for call to function aps_FindGroup
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_6:
        JZ        ??zclGeneral_ProcessInScenesServer_43
// 2743       {
// 2744         // Allocate space for the scene list
// 2745         sceneList = zcl_mem_alloc( ZCL_GEN_MAX_SCENES );
??zclGeneral_ProcessInScenesServer_42:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x10
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
// 2746         if ( sceneList != NULL )
        MOV       A,R2
        ORL       A,R3
        JZ        ??zclGeneral_ProcessInScenesServer_44
// 2747         {
// 2748           sceneCnt = zclGeneral_FindAllScenesForGroup( pInMsg->msg->endPoint,
// 2749                                                        scene.groupID, sceneList );
        ; Setup parameters for call to function zclGeneral_FindAllScenesForGroup
        MOV       R4,?V2
        MOV       R5,?V3
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_18:
        LCALL     `??zclGeneral_FindAllScenesForGroup::?relay`; Banked call to: zclGeneral_FindAllScenesForGroup
        MOV       A,R1
        MOV       ?V5,A
// 2750           status = ZCL_STATUS_SUCCESS;
        MOV       ?V0,#0x0
// 2751           if ( ! UNICAST_MSG( pInMsg->msg ) )
        LCALL     ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_339:
        ADD       A,#0x15
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        JNZ       ??zclGeneral_ProcessInScenesServer_45
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine111_0 & 0xFFFF
??CrossCallReturnLabel_273:
        JZ        ??zclGeneral_ProcessInScenesServer_46
// 2752           {
// 2753             // Addressed to the Group - ONLY send a response if an entry within the
// 2754             // Scene Table corresponds to the Group ID
// 2755             if ( sceneCnt == 0 )
??zclGeneral_ProcessInScenesServer_45:
        MOV       A,?V5
        JNZ       ??zclGeneral_ProcessInScenesServer_46
        SJMP      ??zclGeneral_ProcessInScenesServer_47
// 2756             {
// 2757               sendRsp = FALSE;
// 2758             }
// 2759           }
// 2760         }
// 2761         else
// 2762         {
// 2763           // Couldn't allocate space for the scene list!
// 2764           status = ZCL_STATUS_INSUFFICIENT_SPACE;
??zclGeneral_ProcessInScenesServer_44:
        MOV       ?V0,#-0x77
        SJMP      ??zclGeneral_ProcessInScenesServer_46
// 2765         }
// 2766       }
// 2767       else
// 2768       {
// 2769         // The Group is not in the Group Table - send a response back
// 2770         status = ZCL_STATUS_INVALID_FIELD;
??zclGeneral_ProcessInScenesServer_43:
        MOV       ?V0,#-0x7b
// 2771       }
// 2772 
// 2773 #ifdef ZCL_LIGHT_LINK_ENHANCE //ZLL allows response to unicast only
// 2774       if ( sendRsp && UNICAST_MSG( pInMsg->msg ) )
// 2775 #else
// 2776       if ( sendRsp )
// 2777 #endif //ZCL_LIGHT_LINK_ENHANCE
// 2778       {
// 2779         zclGeneral_SendSceneGetMembershipResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2780                                     status, zclGeneral_ScenesRemaingCapacity(), sceneCnt, sceneList,
// 2781                                     scene.groupID, true, pInMsg->hdr.transSeqNum );
??zclGeneral_ProcessInScenesServer_46:
        ; Setup parameters for call to function zclGeneral_CountAllScenes
        LCALL     `??zclGeneral_CountAllScenes::?relay`; Banked call to: zclGeneral_CountAllScenes
        MOV       A,R1
        MOV       R1,A
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine117_0 & 0xFFFF
// 2782       }
??CrossCallReturnLabel_307:
        ; Setup parameters for call to function zclGeneral_SendSceneGetMembershipResponse
        LCALL     ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_212:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 83)
        MOV       ?V1,#0x1
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 84)
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 86)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 88)
        MOV       A,?V5
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 89)
        MOV       A,#0x10
        CLR       C
        SUBB      A,R1
        MOV       R5,A
        MOV       R4,?V0
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_131:
        LCALL     `??zclGeneral_SendSceneGetMembershipResponse::?r`; Banked call to: zclGeneral_SendSceneGetMembershipResponse
        MOV       A,#0x7
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 82)
// 2783 
// 2784       if ( sceneList != NULL )
        MOV       A,?V2
        ORL       A,?V3
        JZ        ??zclGeneral_ProcessInScenesServer_20
// 2785         zcl_mem_free( sceneList );
??zclGeneral_ProcessInScenesServer_47:
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V2
        MOV       R3,?V3
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2786 
// 2787       stat = ZCL_STATUS_CMD_HAS_RSP;
??zclGeneral_ProcessInScenesServer_20:
        MOV       ?V4,#-0x1
// 2788       break;
        SJMP      ??zclGeneral_ProcessInScenesServer_41
// 2789 
// 2790 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 2791     case COMMAND_SCENE_COPY:
// 2792       {
// 2793         uint8 mode;
// 2794         uint16 groupIDFrom, groupIDTo;
// 2795         uint8 sceneIDFrom, sceneIDTo;
// 2796 
// 2797         pData = pInMsg->pData; // different payload format
// 2798 
// 2799         mode = *pData++;
// 2800         groupIDFrom = BUILD_UINT16( pData[0], pData[1] ); // from group ID
// 2801         pData += 2;
// 2802         sceneIDFrom = *pData++; // from scene ID
// 2803         groupIDTo = BUILD_UINT16( pData[0], pData[1] ); // to group ID
// 2804         pData += 2;
// 2805         if ( (mode & SCENE_COPY_MODE_ALL_BIT) == 0 )
// 2806         {
// 2807           sceneIDTo = *pData++; // to scene ID
// 2808         }
// 2809 
// 2810         // Make sure the groups exist
// 2811         if ( ( aps_FindGroup( pInMsg->msg->endPoint, groupIDFrom ) != NULL ) &&
// 2812              ( aps_FindGroup( pInMsg->msg->endPoint, groupIDTo ) != NULL ) )
// 2813         {
// 2814           // Allocate space for the scene list
// 2815           sceneList = zcl_mem_alloc( (mode & SCENE_COPY_MODE_ALL_BIT) ? ZCL_GEN_MAX_SCENES : 1 );
// 2816           if ( sceneList == NULL )
// 2817           {
// 2818             status = ZCL_STATUS_INSUFFICIENT_SPACE; // Couldn't allocate space for the scene list!
// 2819           }
// 2820           else
// 2821           {
// 2822             status = ZCL_STATUS_SUCCESS;
// 2823             if ( mode & SCENE_COPY_MODE_ALL_BIT ) // Copy all scenes
// 2824             {
// 2825               sceneCnt = zclGeneral_FindAllScenesForGroup( pInMsg->msg->endPoint,
// 2826                                                            groupIDFrom, sceneList );
// 2827             }
// 2828             else // Copy single scene
// 2829             {
// 2830               // Make sure the scene exists
// 2831               pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDFrom, sceneIDFrom );
// 2832               if ( pScene != NULL )
// 2833               {
// 2834                 sceneList[0] = sceneIDFrom;
// 2835                 sceneCnt = 1;
// 2836               }
// 2837               else
// 2838               {
// 2839                 status = ZCL_STATUS_INVALID_FIELD; // Scene not found
// 2840               }
// 2841             }
// 2842           }
// 2843 
// 2844           if ( status == ZCL_STATUS_SUCCESS )
// 2845           {
// 2846             uint8 numScenesToAdd = 0;
// 2847             uint8 i;
// 2848             for ( i = 0; i < sceneCnt; i++ )
// 2849             {
// 2850               if ( zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDTo, sceneList[i] ) == NULL )
// 2851               {
// 2852                 numScenesToAdd++;
// 2853               }
// 2854             }
// 2855             if ( zclGeneral_ScenesRemaingCapacity() >= numScenesToAdd )
// 2856             {
// 2857               // Copy the scenes
// 2858               for ( i = 0; i < sceneCnt; i++ )
// 2859               {
// 2860                 // Ignore scene ID from and scene ID to fields
// 2861                 pScene = zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDFrom, sceneList[i] );
// 2862                 if ( pScene != NULL )
// 2863                 {
// 2864                   zclGeneral_Scene_t *pToScene;
// 2865                   scene = *pScene;
// 2866                   scene.groupID = groupIDTo;
// 2867                   scene.ID = ( (mode & SCENE_COPY_MODE_ALL_BIT) ? sceneList[i] : sceneIDTo );
// 2868 
// 2869                   pToScene = zclGeneral_FindScene( pInMsg->msg->endPoint, groupIDTo, scene.ID );
// 2870                   if( pToScene != NULL )
// 2871                   {
// 2872                     zclGeneral_RemoveScene( pInMsg->msg->endPoint, groupIDTo, scene.ID );
// 2873                   }
// 2874                   // Add the scene
// 2875                   zclGeneral_AddScene( pInMsg->msg->endPoint, &scene );
// 2876                 }
// 2877               }
// 2878             }
// 2879             else
// 2880             {
// 2881               status = ZCL_STATUS_INSUFFICIENT_SPACE; // The Scene Table is full
// 2882             }
// 2883           }
// 2884         }
// 2885         else
// 2886         {
// 2887           status = ZCL_STATUS_INVALID_FIELD; // The Group is not in the Group Table
// 2888         }
// 2889 
// 2890         if ( UNICAST_MSG( pInMsg->msg ) )
// 2891         {
// 2892           if ( pScene == NULL )
// 2893           {
// 2894             pScene = &scene;
// 2895           }
// 2896           // Addressed to this device (not to a group) - send a response back
// 2897           zclGeneral_SendSceneCopyResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 2898                                             status, pScene->groupID, pScene->ID,
// 2899                                             true, pInMsg->hdr.transSeqNum );
// 2900         }
// 2901 
// 2902         if ( sceneList != NULL )
// 2903         {
// 2904           zcl_mem_free( sceneList );
// 2905         }
// 2906       }
// 2907 
// 2908       stat = ZCL_STATUS_CMD_HAS_RSP;
// 2909       break;
// 2910 #endif // ZCL_LIGHT_LINK_ENHANCE
// 2911 
// 2912     default:
// 2913       stat = ZFailure;
??zclGeneral_ProcessInScenesServer_8:
        MOV       ?V4,#0x1
// 2914     break;
// 2915   }
// 2916 
// 2917   return ( stat );
??zclGeneral_ProcessInScenesServer_41:
        MOV       R1,?V4
        MOV       A,#0x3c
          CFI EndBlock cfiBlock473
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
// 2918 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock474 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 76)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock474
        REQUIRE ??Subroutine114_0
        ; // Fall through to label ??Subroutine114_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine114_0:
          CFI Block cfiBlock475 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xe
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock475

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond476 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_126
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 79)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_127
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond477) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond477) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond477) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond477) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+-2
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond478) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond478) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond478) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond478) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond478) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond478) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond478) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond478) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond478) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond478) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+-2
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_129
          CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond479) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond479) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond479) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond479) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond479) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond479) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond479) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond479) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond479) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond479) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond479) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond479) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond479) CFA_SP SP+-2
          CFI (cfiCond479) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_130
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond480) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond480) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond480) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond480) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond480) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+-2
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_131
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond481) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond481) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond481) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond481) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond481) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond481) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-2
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiPicker482 Using cfiCommon1
          CFI (cfiPicker482) NoFunction
          CFI (cfiPicker482) Picker
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_155:
        RET
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiPicker482

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond483 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_154, ??CrossCallReturnLabel_26
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond484 Using cfiCommon0
          CFI (cfiCond484) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond484) Conditional ??CrossCallReturnLabel_154, ??CrossCallReturnLabel_27
          CFI (cfiCond484) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond484) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond484) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond484) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond484) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond484) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond484) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond484) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond484) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond484) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond484) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond484) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond484) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond484) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond484) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond484) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond484) CFA_SP SP+-4
          CFI (cfiCond484) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_126
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond485) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond485) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond485) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond485) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond485) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond485) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond485) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond485) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+-4
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 79)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_127
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond486) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond486) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond486) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond486) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond486) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond486) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond486) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond486) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond486) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+-4
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 83)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_128
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond487) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond487) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond487) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-4
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_129
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond488) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond488) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond488) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond488) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+-4
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_130
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond489) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond489) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond489) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond489) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond489) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond489) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond489) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond489) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond489) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+-4
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_131
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond490) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond490) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond490) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond490) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond490) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-4
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 89)
          CFI Block cfiPicker491 Using cfiCommon1
          CFI (cfiPicker491) NoFunction
          CFI (cfiPicker491) Picker
        MOV       A,R6
        ADD       A,#0x6
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        LCALL     ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_159:
        MOV       R1,A
        RET
          CFI EndBlock cfiCond483
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiPicker491

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond492 Using cfiCommon0
          CFI Function zclGeneral_RegisterCmdCallbacks
          CFI Conditional ??CrossCallReturnLabel_296
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond493 Using cfiCommon0
          CFI (cfiCond493) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond493) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond493) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond493) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond493) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond493) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond493) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond493) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond493) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond493) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond493) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond493) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond493) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond493) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond493) CFA_SP SP+-2
          CFI (cfiCond493) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond494) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond494) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond494) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond494) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond494) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond494) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond494) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond494) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+-2
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+-2
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_300
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond496) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond496) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond496) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond496) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond496) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond496) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond496) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond496) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond496) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond496) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+-2
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_301
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond497) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond497) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond497) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-2
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker498 Using cfiCommon1
          CFI (cfiPicker498) NoFunction
          CFI (cfiPicker498) Picker
        MOV       A,R0
          CFI EndBlock cfiCond492
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiPicker498
        REQUIRE ??Subroutine115_0
        ; // Fall through to label ??Subroutine115_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine115_0:
          CFI Block cfiCond499 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_289
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond500) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond500) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond500) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond500) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond500) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond500) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond500) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond500) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond500) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond500) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond500) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond500) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond500) CFA_SP SP+-2
          CFI (cfiCond500) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond501 Using cfiCommon0
          CFI (cfiCond501) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond501) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond501) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond501) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond501) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond501) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond501) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond501) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond501) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond501) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond501) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond501) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond501) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond501) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond501) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond501) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond501) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond501) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond501) CFA_SP SP+-2
          CFI (cfiCond501) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-2
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond503) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond503) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond503) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond503) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond503) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond503) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond503) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond503) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+-2
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond504) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond504) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond504) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond504) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond504) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond504) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond504) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond504) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond504) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond504) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond504) CFA_SP SP+-2
          CFI (cfiCond504) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond505) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond505) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond505) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond505) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond505) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond505) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond505) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+-2
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function zclGeneral_RegisterCmdCallbacks
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_SP SP+-2
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond507 Using cfiCommon0
          CFI (cfiCond507) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond507) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond507) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond507) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond507) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond507) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond507) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond507) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond507) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond507) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond507) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond507) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond507) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond507) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond507) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond507) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond507) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond507) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond507) CFA_SP SP+-2
          CFI (cfiCond507) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond508) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond508) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond508) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond508) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond508) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond508) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond508) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond508) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond508) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond508) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond508) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond508) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond508) CFA_SP SP+-2
          CFI (cfiCond508) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+-2
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_300
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond510) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond510) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond510) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond510) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond510) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond510) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond510) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+-2
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_301
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond511) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond511) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond511) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-2
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker512 Using cfiCommon1
          CFI (cfiPicker512) NoFunction
          CFI (cfiPicker512) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiPicker512

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond513 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_302
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_303
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond514) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond514) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond514) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond514) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond514) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond514) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond514) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond514) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond514) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+-2
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker515 Using cfiCommon1
          CFI (cfiPicker515) NoFunction
          CFI (cfiPicker515) Picker
        MOV       A,R2
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiPicker515
        REQUIRE ??Subroutine116_0
        ; // Fall through to label ??Subroutine116_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine116_0:
          CFI Block cfiCond516 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_304
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond517) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond517) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond517) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond517) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond517) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond517) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond517) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond517) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+-2
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_303
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond518) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-2
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker519 Using cfiCommon1
          CFI (cfiPicker519) NoFunction
          CFI (cfiPicker519) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiPicker519

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond520 Using cfiCommon0
          CFI Function zclGeneral_AddScene
          CFI Conditional ??CrossCallReturnLabel_103
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond521) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+-2
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker522 Using cfiCommon1
          CFI (cfiPicker522) NoFunction
          CFI (cfiPicker522) Picker
        MOV       A,?V2
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V4,?V0
        MOV       ?V5,?V1
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiPicker522

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond523 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_70
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond524) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond524) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond524) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-2
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker525 Using cfiCommon1
          CFI (cfiPicker525) NoFunction
          CFI (cfiPicker525) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ADD       A,#0x6
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiPicker525

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond526 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_308
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond527) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond527) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond527) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond527) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond527) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond527) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond527) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond527) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond527) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond527) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+-2
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker528 Using cfiCommon1
          CFI (cfiPicker528) NoFunction
          CFI (cfiPicker528) Picker
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiPicker528
        REQUIRE ??Subroutine117_0
        ; // Fall through to label ??Subroutine117_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine117_0:
          CFI Block cfiCond529 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_305
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function zclGeneral_FindScene
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-2
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_307
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-2
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond532) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond532) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond532) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond532) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond532) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+-2
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond533) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond533) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-2
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker534 Using cfiCommon1
          CFI (cfiPicker534) NoFunction
          CFI (cfiPicker534) Picker
        LCALL     ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_313:
        RET
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiPicker534

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond535 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond536) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond536) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond536) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond536) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond536) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+-2
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker537 Using cfiCommon1
          CFI (cfiPicker537) NoFunction
          CFI (cfiPicker537) Picker
        LCALL     ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_321:
        LCALL     `??zclGeneral_AddScene::?relay`; Banked call to: zclGeneral_AddScene
        RET
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiPicker537

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond538 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond539) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond539) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond539) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond539) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond539) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-2
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiPicker540 Using cfiCommon1
          CFI (cfiPicker540) NoFunction
          CFI (cfiPicker540) Picker
        MOV       R3,#0x0
        LCALL     ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_318:
        LCALL     `??zcl_ReadAttrData::?relay`; Banked call to: zcl_ReadAttrData
        MOV       A,#0x4
        RET
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiPicker540

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond541 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond542) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond542) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond542) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond542) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond542) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond542) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond542) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+-2
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond543) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond543) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond543) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond543) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond543) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond543) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond543) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-2
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker544 Using cfiCommon1
          CFI (cfiPicker544) NoFunction
          CFI (cfiPicker544) Picker
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_324:
        RET
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiPicker544

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond545 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_17
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-4
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_18
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond547) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond547) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond547) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond547) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond547) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+-4
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_7
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond548) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond548) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond548) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond548) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond548) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+-4
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_8
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-4
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond550 Using cfiCommon0
          CFI (cfiCond550) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond550) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_9
          CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond550) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond550) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond550) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond550) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond550) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond550) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond550) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond550) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond550) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond550) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond550) CFA_SP SP+-4
          CFI (cfiCond550) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_10
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond551) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond551) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond551) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond551) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+-4
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_0
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond552) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond552) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond552) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond552) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond552) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond552) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond552) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-4
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_1
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond553) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond553) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond553) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond553) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond553) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond553) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond553) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-4
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_2
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond554) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond554) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond554) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-4
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_3
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond555) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond555) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond555) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond555) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond555) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+-4
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_4
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond556) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond556) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond556) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond556) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond556) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond556) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond556) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond556) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+-4
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_5
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond557) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond557) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond557) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond557) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond557) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond557) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+-4
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_6
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond558) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond558) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond558) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond558) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-4
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker559 Using cfiCommon1
          CFI (cfiPicker559) NoFunction
          CFI (cfiPicker559) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiPicker559
        REQUIRE ??Subroutine118_0
        ; // Fall through to label ??Subroutine118_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine118_0:
          CFI Block cfiCond560 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_36
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-4
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_33
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond562) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond562) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond562) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-4
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_34
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond563) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond563) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond563) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond563) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond563) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond563) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond563) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond563) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond563) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+-4
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_37
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-4
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_38
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond565) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-4
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_31
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond566) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond566) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond566) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond566) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond566) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-4
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_32
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-4
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_314
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond568) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond568) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond568) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond568) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond568) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond568) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond568) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-4
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_315
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond569) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond569) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond569) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond569) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond569) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond569) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_SP SP+-4
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_316
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond570) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond570) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond570) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond570) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond570) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond570) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_SP SP+-4
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_16
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond571) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond571) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond571) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond571) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond571) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond571) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond571) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond571) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond571) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond571) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+-4
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_17
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond572) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond572) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond572) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond572) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond572) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond572) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond572) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond572) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+-4
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_18
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond573) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond573) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond573) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond573) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond573) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond573) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-4
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond574 Using cfiCommon0
          CFI (cfiCond574) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond574) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_7
          CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond574) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond574) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond574) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond574) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond574) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond574) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond574) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond574) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond574) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond574) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond574) CFA_SP SP+-4
          CFI (cfiCond574) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_8
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond575) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond575) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond575) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond575) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+-4
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_9
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-4
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_10
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond577) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond577) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-4
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_0
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond578) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond578) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond578) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+-4
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_1
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond579) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond579) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond579) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond579) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond579) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond579) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-4
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_2
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond580) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-4
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_3
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond581) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond581) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond581) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+-4
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_4
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond582) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond582) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond582) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond582) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond582) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond582) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond582) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond582) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+-4
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_5
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond583) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond583) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond583) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond583) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond583) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond583) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond583) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond583) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond583) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond583) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-4
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_6
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond584) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond584) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond584) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond584) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-4
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker585 Using cfiCommon1
          CFI (cfiPicker585) NoFunction
          CFI (cfiPicker585) Picker
        MOV       DPL,R6
        MOV       DPH,R7
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiPicker585
        REQUIRE ??Subroutine119_0
        ; // Fall through to label ??Subroutine119_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine119_0:
          CFI Block cfiCond586 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_243
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_244
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond587) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond587) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond587) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond587) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond587) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond587) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond587) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond587) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond587) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+-4
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_242
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-4
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_35
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond589) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond589) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond589) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond589) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond589) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond589) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond589) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond589) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+-4
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_36
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond590) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond590) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond590) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond590) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-4
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_33
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond591) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond591) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond591) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond591) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond591) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond591) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond591) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+-4
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_34
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond592) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond592) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond592) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond592) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond592) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond592) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond592) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond592) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond592) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-4
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_37
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond593) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond593) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond593) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond593) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond593) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-4
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_38
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond594) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond594) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond594) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-4
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_31
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond595) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond595) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond595) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond595) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-4
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_32
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond596) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond596) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond596) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond596) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond596) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond596) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond596) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond596) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond596) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+-4
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_314
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond597) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond597) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond597) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond597) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond597) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+-4
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_315
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond598) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond598) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond598) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond598) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond598) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond598) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond598) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-4
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond599 Using cfiCommon0
          CFI (cfiCond599) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond599) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_316
          CFI (cfiCond599) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond599) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond599) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond599) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond599) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond599) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond599) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond599) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond599) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond599) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond599) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond599) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond599) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond599) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond599) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond599) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond599) CFA_SP SP+-4
          CFI (cfiCond599) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_16
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond600) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond600) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond600) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond600) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond600) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond600) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond600) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond600) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond600) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond600) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+-4
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_17
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond601) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond601) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond601) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond601) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond601) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond601) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond601) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-4
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_18
          CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond602) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond602) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond602) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond602) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond602) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond602) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond602) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond602) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond602) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond602) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond602) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond602) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond602) CFA_SP SP+-4
          CFI (cfiCond602) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_7
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond603) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond603) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond603) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond603) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond603) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond603) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+-4
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_8
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond604) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond604) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond604) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond604) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond604) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-4
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_9
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond605) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond605) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond605) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond605) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond605) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond605) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond605) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond605) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-4
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_10
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond606) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond606) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond606) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond606) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond606) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond606) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond606) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond606) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond606) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-4
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_0
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond607) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond607) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond607) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond607) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond607) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+-4
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_1
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond608) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond608) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond608) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond608) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond608) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond608) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-4
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_2
          CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond609) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond609) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond609) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond609) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond609) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond609) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond609) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond609) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond609) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond609) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond609) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond609) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond609) CFA_SP SP+-4
          CFI (cfiCond609) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_3
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond610) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond610) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond610) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond610) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-4
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_4
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond611) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-4
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_5
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond612) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond612) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond612) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond612) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond612) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond612) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond612) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-4
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_6
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond613) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond613) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond613) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-4
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker614 Using cfiCommon1
          CFI (cfiPicker614) NoFunction
          CFI (cfiPicker614) Picker
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_349:
        XCH       A,R0
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        RET
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiPicker614

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond615 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_314
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond616) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond616) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond616) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond616) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond616) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond616) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond616) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond616) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond616) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond616) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond616) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond616) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond616) CFA_SP SP+-2
          CFI (cfiCond616) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker617 Using cfiCommon1
          CFI (cfiPicker617) NoFunction
          CFI (cfiPicker617) Picker
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_285:
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiPicker617
        REQUIRE ??Subroutine120_0
        ; // Fall through to label ??Subroutine120_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine120_0:
          CFI Block cfiCond618 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_316
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond619) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond619) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond619) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond619) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+-2
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond620) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond620) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond620) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond620) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond620) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond620) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond620) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond620) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond620) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond620) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_SP SP+-2
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker621 Using cfiCommon1
          CFI (cfiPicker621) NoFunction
          CFI (cfiPicker621) Picker
        LCALL     ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_325:
        LCALL     `??zclGeneral_RemoveAllScenes::?relay`; Banked call to: zclGeneral_RemoveAllScenes
        RET
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiPicker621

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond622 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond623 Using cfiCommon0
          CFI (cfiCond623) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond623) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond623) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond623) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond623) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond623) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond623) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond623) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond623) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond623) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond623) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond623) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond623) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond623) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond623) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond623) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond623) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond623) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond623) CFA_SP SP+-2
          CFI (cfiCond623) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond624) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond624) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond624) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond624) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond624) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond624) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond624) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond624) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond624) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond624) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-2
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond625) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond625) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond625) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond625) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond625) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond625) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond625) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond625) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond625) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond625) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond625) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond625) CFA_SP SP+-2
          CFI (cfiCond625) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond626) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond626) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond626) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond626) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond626) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond626) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond626) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond626) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+-2
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker627 Using cfiCommon1
          CFI (cfiPicker627) NoFunction
          CFI (cfiPicker627) Picker
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_311:
        MOV       A,R6
        ADD       A,#0x15
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond622
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiPicker627

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond628 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_7
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond629 Using cfiCommon0
          CFI (cfiCond629) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond629) Conditional ??CrossCallReturnLabel_8
          CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond629) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond629) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond629) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond629) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond629) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond629) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond629) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond629) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond629) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond629) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond629) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond629) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond629) CFA_SP SP+-2
          CFI (cfiCond629) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond630) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond630) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond630) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond630) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond630) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond630) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond630) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond630) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+-2
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond631) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond631) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond631) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond631) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond631) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond631) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-2
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker632 Using cfiCommon1
          CFI (cfiPicker632) NoFunction
          CFI (cfiPicker632) Picker
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_323:
        LCALL     `??zclGeneral_FindScene::?relay`; Banked call to: zclGeneral_FindScene
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond628
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiPicker632

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond633 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond634) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond634) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond634) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond634) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond634) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond634) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond634) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond634) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+-2
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond635) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond635) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond635) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond635) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond635) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond635) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond635) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+-2
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond636) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond636) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond636) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond636) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond636) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond636) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond636) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond636) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond636) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond636) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_SP SP+-2
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_4
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond637) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond637) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond637) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond637) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond637) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond637) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond637) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond637) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+-2
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond638) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond638) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond638) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond638) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond638) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond638) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond638) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond638) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond638) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond638) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond638) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond638) CFA_SP SP+-2
          CFI (cfiCond638) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_6
          CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond639) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond639) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond639) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond639) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond639) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond639) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond639) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond639) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond639) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond639) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond639) CFA_SP SP+-2
          CFI (cfiCond639) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker640 Using cfiCommon1
          CFI (cfiPicker640) NoFunction
          CFI (cfiPicker640) Picker
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_322:
        LCALL     `??aps_FindGroup::?relay`; Banked call to: aps_FindGroup
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiPicker640
// 2919 
// 2920 /*********************************************************************
// 2921  * @fn      zclGeneral_ProcessInScenesClient
// 2922  *
// 2923  * @brief   Process in the received Scenes Command.
// 2924  *
// 2925  * @param   pInMsg - pointer to the incoming message
// 2926  *
// 2927  * @return  ZStatus_t
// 2928  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2929 static ZStatus_t zclGeneral_ProcessInScenesClient( zclIncoming_t *pInMsg,
zclGeneral_ProcessInScenesClient:
          CFI Block cfiBlock641 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
        CODE
// 2930                                                    zclGeneral_AppCallbacks_t *pCBs )
// 2931 {
        FUNCALL zclGeneral_ProcessInScenesClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 90, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 90, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ProcessInScenesClient, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 87, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 87, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 65
        MOV       A,#-0x41
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
        MOV       ?V8,R2
        MOV       ?V9,R3
        MOV       ?V2,R4
        MOV       ?V3,R5
// 2932   zclGeneral_Scene_t scene;
// 2933   uint8 *pData = pInMsg->pData;
        LCALL     ?Subroutine42 & 0xFFFF
// 2934   uint8 nameLen;
// 2935   zclSceneRsp_t rsp;
// 2936   uint8 i;
// 2937   ZStatus_t stat = ZSuccess;
??CrossCallReturnLabel_309:
        MOV       ?V10,#0x0
// 2938 
// 2939   zcl_memset( (uint8*)&scene, 0, sizeof( zclGeneral_Scene_t ) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x37
        MOV       R5,#0x0
        MOV       R1,#0x0
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine77 & 0xFFFF
// 2940   zcl_memset( (uint8*)&rsp, 0, sizeof( zclSceneRsp_t ) );
// 2941 
// 2942   // Get the status field first
// 2943   rsp.status = *pData++;
??CrossCallReturnLabel_135:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine59 & 0xFFFF
// 2944 
// 2945   if ( pInMsg->hdr.commandID == COMMAND_SCENE_GET_MEMBERSHIP_RSP )
??CrossCallReturnLabel_107:
        MOV       A,?V8
        ADD       A,#0x7
        MOV       ?V0,A
        CLR       A
        ADDC      A,?V9
        MOV       ?V1,A
        MOV       DPL,?V0
        MOV       DPH,A
        MOVX      A,@DPTR
        XRL       A,#0x6
        JNZ       ??zclGeneral_ProcessInScenesClient_0
// 2946   {
// 2947     rsp.capacity = *pData++;
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine63 & 0xFFFF
// 2948   }
??CrossCallReturnLabel_113:
        INC       R6
        MOV       R7,DPH
// 2949 
// 2950   scene.groupID = BUILD_UINT16( pData[0], pData[1] );
??zclGeneral_ProcessInScenesClient_0:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine121_0 & 0xFFFF
??CrossCallReturnLabel_327:
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        LCALL     ??Subroutine115_0 & 0xFFFF
// 2951   pData += 2;   // Move past group ID
??CrossCallReturnLabel_294:
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??zclGeneral_ProcessInScenesClient_1
        INC       R7
// 2952 
// 2953   switch ( pInMsg->hdr.commandID )
??zclGeneral_ProcessInScenesClient_1:
        MOV       DPL,A
        MOV       DPH,R7
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       A,?V2
        ADD       A,#0x1a
        MOV       ?V2,A
        JNC       ??zclGeneral_ProcessInScenesClient_2
        INC       ?V3
??zclGeneral_ProcessInScenesClient_2:
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        JZ        ??zclGeneral_ProcessInScenesClient_3
        DEC       A
        JZ        ??zclGeneral_ProcessInScenesClient_4
        DEC       A
        JZ        ??zclGeneral_ProcessInScenesClient_3
        DEC       A
        JZ        ??zclGeneral_ProcessInScenesClient_3
        DEC       A
        JZ        ??zclGeneral_ProcessInScenesClient_3
        ADD       A,#-0x2
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesClient_5 & 0xFFFF
        LJMP      ??zclGeneral_ProcessInScenesClient_6 & 0xFFFF
// 2954   {
// 2955     case COMMAND_SCENE_VIEW_RSP:
// 2956       // Parse the rest of the incoming message
// 2957       scene.ID = *pData++; // Not applicable to Remove All Response command
??zclGeneral_ProcessInScenesClient_4:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,R1
        MOV       R7,A
// 2958       scene.transTime = BUILD_UINT16( pData[0], pData[1] );
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ??Subroutine121_0 & 0xFFFF
??CrossCallReturnLabel_328:
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        LCALL     ??Subroutine115_0 & 0xFFFF
// 2959       pData += 2;
// 2960       nameLen = *pData++; // Name length
??CrossCallReturnLabel_295:
        MOV       DPL,R0
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V7,A
        MOV       A,R0
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??zclGeneral_ProcessInScenesClient_7
        INC       R7
// 2961       if ( nameLen > (ZCL_GEN_SCENE_NAME_LEN-1) )
??zclGeneral_ProcessInScenesClient_7:
        MOV       A,?V7
        CLR       C
        SUBB      A,#0x10
        JC        ??zclGeneral_ProcessInScenesClient_8
// 2962         nameLen = (ZCL_GEN_SCENE_NAME_LEN-1);
        MOV       ?V7,#0xf
// 2963 
// 2964       scene.name[0] = nameLen;
??zclGeneral_ProcessInScenesClient_8:
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V7
        MOVX      @DPTR,A
// 2965       zcl_memcpy( &(scene.name[1]), pData, nameLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V4,R6
        MOV       ?V5,R7
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 90)
        MOV       R4,?V7
        MOV       R5,#0x0
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_248:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 87)
// 2966 
// 2967       pData += nameLen; // move past name, use original length
        MOV       R0,?V7
        MOV       A,R6
        ADD       A,R0
        MOV       R6,A
        CLR       A
        ADDC      A,R7
        MOV       R7,A
// 2968 
// 2969       //*** Do something with the extension field(s)
// 2970 
// 2971       // Fall through to callback - break is left off intentionally
// 2972 
// 2973     case COMMAND_SCENE_ADD_RSP:
// 2974     case COMMAND_SCENE_REMOVE_RSP:
// 2975     case COMMAND_SCENE_REMOVE_ALL_RSP:
// 2976     case COMMAND_SCENE_STORE_RSP:
// 2977       if ( pCBs->pfnSceneRsp )
??zclGeneral_ProcessInScenesClient_3:
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_271:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInScenesClient_9 & 0xFFFF
// 2978       {
// 2979         if ( pInMsg->hdr.commandID != COMMAND_SCENE_REMOVE_ALL_RSP )
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        XRL       A,#0x3
        JZ        ??zclGeneral_ProcessInScenesClient_10
// 2980         {
// 2981           scene.ID = *pData++;
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2982         }
// 2983         rsp.srcAddr = &(pInMsg->msg->srcAddr);
??zclGeneral_ProcessInScenesClient_10:
        LCALL     ?Subroutine20 & 0xFFFF
// 2984         rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_24:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2985         rsp.scene = &scene;
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP100_8
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
// 2986 
// 2987         pCBs->pfnSceneRsp( &rsp );
// 2988       }
??CrossCallReturnLabel_331:
        LCALL     ?CALL_IND
        LJMP      ??zclGeneral_ProcessInScenesClient_9 & 0xFFFF
// 2989       break;
// 2990 
// 2991     case COMMAND_SCENE_GET_MEMBERSHIP_RSP:
// 2992       {
// 2993         uint8 *sceneList = NULL;
??zclGeneral_ProcessInScenesClient_5:
        MOV       ?V4,#0x0
        MOV       ?V5,#0x0
// 2994 
// 2995         if ( rsp.status == ZCL_STATUS_SUCCESS )
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        JNZ       ??zclGeneral_ProcessInScenesClient_11
// 2996         {
// 2997           uint8 sceneCnt = *pData++;
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       ?V6,A
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
// 2998 
// 2999           if ( sceneCnt > 0 )
        MOV       A,?V6
        JZ        ??zclGeneral_ProcessInScenesClient_11
// 3000           {
// 3001             // Allocate space for the scene list
// 3002             sceneList = zcl_mem_alloc( sceneCnt );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     ?Subroutine70 & 0xFFFF
// 3003             if ( sceneList != NULL )
??CrossCallReturnLabel_121:
        JZ        ??zclGeneral_ProcessInScenesClient_11
// 3004             {
// 3005               rsp.sceneCnt = sceneCnt;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V6
        MOVX      @DPTR,A
// 3006               for ( i = 0; i < sceneCnt; i++ )
        MOV       R0,#0x0
        SJMP      ??zclGeneral_ProcessInScenesClient_12
// 3007                 sceneList[i] = *pData++;
??zclGeneral_ProcessInScenesClient_13:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R0
        MOV       R2,A
        MOV       A,?V4
        ADD       A,R2
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_108:
        INC       R0
??zclGeneral_ProcessInScenesClient_12:
        MOV       A,R0
        CLR       C
        SUBB      A,?V6
        JC        ??zclGeneral_ProcessInScenesClient_13
// 3008             }
// 3009           }
// 3010         }
// 3011 
// 3012         if ( pCBs->pfnSceneRsp )
??zclGeneral_ProcessInScenesClient_11:
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_272:
        JZ        ??zclGeneral_ProcessInScenesClient_14
// 3013         {
// 3014           rsp.srcAddr = &(pInMsg->msg->srcAddr);
        LCALL     ?Subroutine20 & 0xFFFF
// 3015           rsp.cmdID = pInMsg->hdr.commandID;
??CrossCallReturnLabel_25:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3016           rsp.sceneList = sceneList;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V5
        MOVX      @DPTR,A
// 3017           rsp.scene = &scene;
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP100_8
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
// 3018 
// 3019           pCBs->pfnSceneRsp( &rsp);
// 3020         }
??CrossCallReturnLabel_332:
        LCALL     ?CALL_IND
// 3021 
// 3022         if ( sceneList != NULL )
??zclGeneral_ProcessInScenesClient_14:
        MOV       A,?V4
        ORL       A,?V5
        JZ        ??zclGeneral_ProcessInScenesClient_9
// 3023         {
// 3024           zcl_mem_free( sceneList );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V4
        MOV       R3,?V5
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zclGeneral_ProcessInScenesClient_9
// 3025         }
// 3026       }
// 3027       break;
// 3028 
// 3029     default:
// 3030       stat = ZFailure;
??zclGeneral_ProcessInScenesClient_6:
        MOV       ?V10,#0x1
// 3031       break;
// 3032   }
// 3033 
// 3034   return ( stat );
??zclGeneral_ProcessInScenesClient_9:
        MOV       R1,?V10
        MOV       A,#0x41
        LJMP      ?Subroutine3 & 0xFFFF
// 3035 }
          CFI EndBlock cfiBlock641

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond642 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_134
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond643) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond643) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond643) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond643) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond643) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond643) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond643) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond643) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond643) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond643) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond643) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond643) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond643) CFA_SP SP+-2
          CFI (cfiCond643) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker644 Using cfiCommon1
          CFI (cfiPicker644) NoFunction
          CFI (cfiPicker644) Picker
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
        ; Setup parameters for call to function osal_memset
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0xa
        MOV       R5,#0x0
        MOV       R1,#0x0
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
        RET
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiPicker644

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond645 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond646 Using cfiCommon0
          CFI (cfiCond646) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond646) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond646) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond646) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond646) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond646) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond646) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond646) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond646) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond646) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond646) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond646) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond646) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond646) CFA_SP SP+-2
          CFI (cfiCond646) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker647 Using cfiCommon1
          CFI (cfiPicker647) NoFunction
          CFI (cfiPicker647) Picker
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond645
          CFI EndBlock cfiCond646
          CFI EndBlock cfiPicker647

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond648 Using cfiCommon0
          CFI Function zclGeneral_SendAddSceneRequest
          CFI Conditional ??CrossCallReturnLabel_111
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond649) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond649) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond649) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond649) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond649) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond649) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond649) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond649) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond649) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+-2
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond650 Using cfiCommon0
          CFI (cfiCond650) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond650) Conditional ??CrossCallReturnLabel_112
          CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond650) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond650) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond650) CFA_SP SP+-2
          CFI (cfiCond650) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiPicker651 Using cfiCommon1
          CFI (cfiPicker651) NoFunction
          CFI (cfiPicker651) Picker
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_152:
        INC       DPTR
        RET
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiCond650
          CFI EndBlock cfiPicker651

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond652 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_107
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_108
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond653) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond653) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond653) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond653) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond653) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond653) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond653) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond653) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond653) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+-2
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker654 Using cfiCommon1
          CFI (cfiPicker654) NoFunction
          CFI (cfiPicker654) Picker
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_153:
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
        RET
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiPicker654

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond655 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_329
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond656 Using cfiCommon0
          CFI (cfiCond656) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond656) Conditional ??CrossCallReturnLabel_330
          CFI (cfiCond656) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond656) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond656) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond656) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond656) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond656) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond656) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond656) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond656) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond656) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond656) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond656) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond656) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond656) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond656) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond656) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond656) CFA_SP SP+-2
          CFI (cfiCond656) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker657 Using cfiCommon1
          CFI (cfiPicker657) NoFunction
          CFI (cfiPicker657) Picker
        MOV       DPL,?V0
        MOV       DPH,?V1
          CFI EndBlock cfiCond655
          CFI EndBlock cfiCond656
          CFI EndBlock cfiPicker657
        REQUIRE ??Subroutine121_0
        ; // Fall through to label ??Subroutine121_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine121_0:
          CFI Block cfiCond658 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsServer
          CFI Conditional ??CrossCallReturnLabel_326
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond659) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond659) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond659) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond659) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond659) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond659) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond659) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond659) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+-2
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond660) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond660) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond660) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond660) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond660) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond660) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond660) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond660) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond660) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond660) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond660) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+-2
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond661) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond661) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond661) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond661) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond661) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond661) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond661) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond661) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond661) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond661) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond661) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond661) CFA_SP SP+-2
          CFI (cfiCond661) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_330
          CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond662) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond662) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond662) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond662) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond662) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond662) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond662) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond662) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond662) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond662) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond662) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond662) CFA_SP SP+-2
          CFI (cfiCond662) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiPicker663 Using cfiCommon1
          CFI (cfiPicker663) NoFunction
          CFI (cfiPicker663) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        RET
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiPicker663

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond664 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_24
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond665 Using cfiCommon0
          CFI (cfiCond665) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond665) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond665) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond665) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond665) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond665) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond665) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond665) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond665) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond665) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond665) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond665) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond665) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond665) CFA_SP SP+-2
          CFI (cfiCond665) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker666 Using cfiCommon1
          CFI (cfiPicker666) NoFunction
          CFI (cfiPicker666) Picker
        MOV       DPL,?V8
        MOV       DPH,?V9
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_137:
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond664
          CFI EndBlock cfiCond665
          CFI EndBlock cfiPicker666

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond667 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_23
          CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond668) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond668) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond668) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond668) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond668) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond668) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond668) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond668) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond668) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond668) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond668) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond668) CFA_SP SP+-4
          CFI (cfiCond668) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond669 Using cfiCommon0
          CFI (cfiCond669) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond669) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_24
          CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond669) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond669) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond669) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond669) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond669) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond669) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond669) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond669) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond669) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond669) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond669) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond669) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond669) CFA_SP SP+-4
          CFI (cfiCond669) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond670 Using cfiCommon0
          CFI (cfiCond670) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond670) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_25
          CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond670) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond670) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond670) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond670) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond670) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond670) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond670) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond670) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond670) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond670) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond670) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond670) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond670) CFA_SP SP+-4
          CFI (cfiCond670) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker671 Using cfiCommon1
          CFI (cfiPicker671) NoFunction
          CFI (cfiPicker671) Picker
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_157:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiCond669
          CFI EndBlock cfiCond670
          CFI EndBlock cfiPicker671

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond672 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_156
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond673 Using cfiCommon0
          CFI (cfiCond673) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond673) Conditional ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_22
          CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond673) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond673) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond673) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond673) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond673) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond673) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond673) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond673) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond673) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond673) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond673) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond673) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond673) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond673) CFA_SP SP+-6
          CFI (cfiCond673) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond674 Using cfiCommon0
          CFI (cfiCond674) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond674) Conditional ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_23
          CFI (cfiCond674) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond674) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond674) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond674) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond674) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond674) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond674) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond674) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond674) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond674) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond674) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond674) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond674) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond674) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond674) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond674) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond674) CFA_SP SP+-6
          CFI (cfiCond674) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond675 Using cfiCommon0
          CFI (cfiCond675) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond675) Conditional ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_24
          CFI (cfiCond675) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond675) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond675) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond675) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond675) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond675) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond675) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond675) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond675) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond675) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond675) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond675) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond675) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond675) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond675) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond675) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond675) CFA_SP SP+-6
          CFI (cfiCond675) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond676 Using cfiCommon0
          CFI (cfiCond676) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond676) Conditional ??CrossCallReturnLabel_157, ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_25
          CFI (cfiCond676) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond676) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond676) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond676) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond676) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond676) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond676) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond676) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond676) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond676) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond676) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond676) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond676) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond676) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond676) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond676) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond676) CFA_SP SP+-6
          CFI (cfiCond676) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker677 Using cfiCommon1
          CFI (cfiPicker677) NoFunction
          CFI (cfiPicker677) Picker
        MOVX      A,@DPTR
        ADD       A,#0x6
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R1,A
        RET
          CFI EndBlock cfiCond672
          CFI EndBlock cfiCond673
          CFI EndBlock cfiCond674
          CFI EndBlock cfiCond675
          CFI EndBlock cfiCond676
          CFI EndBlock cfiPicker677
// 3036 #endif // ZCL_SCENES
// 3037 
// 3038 #ifdef ZCL_ON_OFF
// 3039 /*********************************************************************
// 3040  * @fn      zclGeneral_ProcessInCmdOnOff
// 3041  *
// 3042  * @brief   Process in the received On/Off Command.
// 3043  *
// 3044  * @param   pInMsg - pointer to the incoming message
// 3045  *
// 3046  * @return  ZStatus_t
// 3047  */
// 3048 static ZStatus_t zclGeneral_ProcessInOnOff( zclIncoming_t *pInMsg,
// 3049                                             zclGeneral_AppCallbacks_t *pCBs )
// 3050 {
// 3051   ZStatus_t stat = ZSuccess;
// 3052 
// 3053   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
// 3054   {
// 3055     switch ( pInMsg->hdr.commandID )
// 3056     {
// 3057       case COMMAND_OFF:
// 3058       case COMMAND_ON:
// 3059       case COMMAND_TOGGLE:
// 3060         if ( pCBs->pfnOnOff )
// 3061         {
// 3062           pCBs->pfnOnOff( pInMsg->hdr.commandID );
// 3063         }
// 3064         break;
// 3065 
// 3066 #ifdef ZCL_LIGHT_LINK_ENHANCE
// 3067       case COMMAND_OFF_WITH_EFFECT:
// 3068         if ( pCBs->pfnOnOff_OffWithEffect )
// 3069         {
// 3070           zclOffWithEffect_t cmd;
// 3071 
// 3072           cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3073           cmd.effectId = pInMsg->pData[0];
// 3074           cmd.effectVariant = pInMsg->pData[1];
// 3075 
// 3076           pCBs->pfnOnOff_OffWithEffect( &cmd );
// 3077         }
// 3078         break;
// 3079 
// 3080       case COMMAND_ON_WITH_RECALL_GLOBAL_SCENE:
// 3081         if ( pCBs->pfnOnOff_OnWithRecallGlobalScene )
// 3082         {
// 3083           pCBs->pfnOnOff_OnWithRecallGlobalScene();
// 3084         }
// 3085         break;
// 3086 
// 3087       case COMMAND_ON_WITH_TIMED_OFF:
// 3088         if ( pCBs->pfnOnOff_OnWithTimedOff )
// 3089         {
// 3090           zclOnWithTimedOff_t cmd;
// 3091 
// 3092           cmd.onOffCtrl.byte = pInMsg->pData[0];
// 3093           cmd.onTime = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
// 3094           cmd.offWaitTime = BUILD_UINT16( pInMsg->pData[3], pInMsg->pData[4] );
// 3095           pCBs->pfnOnOff_OnWithTimedOff( &cmd );
// 3096         }
// 3097         break;
// 3098 #endif // ZCL_LIGHT_LINK_ENHANCE
// 3099 
// 3100       default:
// 3101         stat = ZFailure;
// 3102         break;
// 3103     }
// 3104   }
// 3105   // no Client command
// 3106 
// 3107   return ( stat );
// 3108 }
// 3109 
// 3110 //static ZStatus_t zclGeneral_ProcessInOnOffTest( zclIncoming_t *pInMsg )
// 3111 //{
// 3112 //  ZStatus_t stat = ZSuccess;
// 3113 //  int8 cmdID;
// 3114 //
// 3115 //  cmdID = pInMsg->hdr.commandID;
// 3116 //  
// 3117 //  switch ( cmdID )				
// 3118 //  {
// 3119 //
// 3120 //    default:
// 3121 //      stat = ZFailure;
// 3122 //      break;
// 3123 //  }
// 3124 //  // no Client command
// 3125 //
// 3126 //  return ( stat );
// 3127 //}
// 3128 #endif // ZCL_ON_OFF
// 3129 
// 3130 #ifdef ZCL_LEVEL_CTRL
// 3131 /*********************************************************************
// 3132  * @fn      zclGeneral_ProcessInLevelControl
// 3133  *
// 3134  * @brief   Process in the received Level Control Command.
// 3135  *
// 3136  * @param   pInMsg - pointer to the incoming message
// 3137  *
// 3138  * @return  ZStatus_t
// 3139  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3140 static ZStatus_t zclGeneral_ProcessInLevelControl( zclIncoming_t *pInMsg,
zclGeneral_ProcessInLevelControl:
          CFI Block cfiBlock678 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
        CODE
// 3141                                                    zclGeneral_AppCallbacks_t *pCBs )
// 3142 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 12
        MOV       A,#-0xc
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
// 3143   uint8 withOnOff = FALSE;
        MOV       R0,#0x0
// 3144   ZStatus_t stat = ZSuccess;
        MOV       R6,#0x0
// 3145 
// 3146   if ( zcl_ServerCmd( pInMsg->hdr.fc.direction ) )
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x8
        JZ        $+5
        LJMP      ??zclGeneral_ProcessInLevelControl_0 & 0xFFFF
// 3147   {
// 3148     switch ( pInMsg->hdr.commandID )
        MOV       A,R2
        ADD       A,#0x8
        MOV       ?V0,A
        CLR       A
        ADDC      A,R3
        MOV       ?V1,A
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        JZ        ??zclGeneral_ProcessInLevelControl_1
        DEC       A
        JZ        ??zclGeneral_ProcessInLevelControl_2
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInLevelControl_3 & 0xFFFF
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInLevelControl_4 & 0xFFFF
        DEC       A
        JZ        ??zclGeneral_ProcessInLevelControl_5
        DEC       A
        JZ        ??zclGeneral_ProcessInLevelControl_6
        DEC       A
        JZ        ??zclGeneral_ProcessInLevelControl_7
        DEC       A
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInLevelControl_4 & 0xFFFF
        LJMP      ??zclGeneral_ProcessInLevelControl_8 & 0xFFFF
// 3149     {
// 3150       case COMMAND_LEVEL_MOVE_TO_LEVEL_WITH_ON_OFF:
// 3151         withOnOff = TRUE;
??zclGeneral_ProcessInLevelControl_5:
        MOV       R0,#0x1
// 3152         // fall through
// 3153       case COMMAND_LEVEL_MOVE_TO_LEVEL:
// 3154         if ( pCBs->pfnLevelControlMoveToLevel )
??zclGeneral_ProcessInLevelControl_1:
        MOV       A,R4
        ADD       A,#0xc
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_282:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInLevelControl_0 & 0xFFFF
// 3155         {
// 3156           zclLCMoveToLevel_t cmd;
// 3157 
// 3158           cmd.level = pInMsg->pData[0];
        LCALL     ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_45:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 3159 
// 3160           if ( ( cmd.level >= ATTR_LEVEL_MIN_LEVEL ) &&
// 3161                ( cmd.level <= ATTR_LEVEL_MAX_LEVEL ) )
        JZ        ??zclGeneral_ProcessInLevelControl_9
        CPL       A
        JZ        ??zclGeneral_ProcessInLevelControl_9
// 3162           {
// 3163             cmd.transitionTime = BUILD_UINT16( pInMsg->pData[1], pInMsg->pData[2] );
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_82:
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_99:
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        LCALL     ??Subroutine116_0 & 0xFFFF
// 3164             cmd.withOnOff = withOnOff;
??CrossCallReturnLabel_304:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
// 3165 
// 3166             pCBs->pfnLevelControlMoveToLevel( &cmd );
        ; Setup parameters for indirect call
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        SJMP      ??zclGeneral_ProcessInLevelControl_10
// 3167           }
// 3168           else
// 3169           {
// 3170             // level range requested is invalid
// 3171             stat = ZCL_STATUS_INVALID_VALUE;
??zclGeneral_ProcessInLevelControl_9:
        MOV       R6,#-0x79
        LJMP      ??zclGeneral_ProcessInLevelControl_0 & 0xFFFF
// 3172           }
// 3173         }
// 3174         break;
// 3175 
// 3176       case COMMAND_LEVEL_MOVE_WITH_ON_OFF:
// 3177         withOnOff = TRUE;
??zclGeneral_ProcessInLevelControl_6:
        MOV       R0,#0x1
// 3178         // fall through
// 3179       case COMMAND_LEVEL_MOVE:
// 3180         if ( pCBs->pfnLevelControlMove )
??zclGeneral_ProcessInLevelControl_2:
        MOV       A,R4
        ADD       A,#0xe
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_283:
        JNZ       $+5
        LJMP      ??zclGeneral_ProcessInLevelControl_0 & 0xFFFF
// 3181         {
// 3182           zclLCMove_t cmd;
// 3183 
// 3184           cmd.moveMode = pInMsg->pData[0];
        LCALL     ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_46:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine49 & 0xFFFF
// 3185           cmd.rate = pInMsg->pData[1];
??CrossCallReturnLabel_93:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3186           cmd.withOnOff = withOnOff;
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
// 3187 
// 3188           pCBs->pfnLevelControlMove( &cmd );
        ; Setup parameters for indirect call
        MOV       A,#0x4
        SJMP      ??zclGeneral_ProcessInLevelControl_11
// 3189         }
// 3190         break;
// 3191 
// 3192       case COMMAND_LEVEL_STEP_WITH_ON_OFF:
// 3193         withOnOff = TRUE;
??zclGeneral_ProcessInLevelControl_7:
        MOV       R0,#0x1
// 3194         // fall through
// 3195       case COMMAND_LEVEL_STEP:
// 3196         if ( pCBs->pfnLevelControlStep )
??zclGeneral_ProcessInLevelControl_3:
        MOV       A,R4
        ADD       A,#0x10
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_284:
        JZ        ??zclGeneral_ProcessInLevelControl_0
// 3197         {
// 3198           zclLCStep_t cmd;
// 3199 
// 3200           cmd.stepMode = pInMsg->pData[0];
        LCALL     ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_47:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine49 & 0xFFFF
// 3201           cmd.amount =  pInMsg->pData[1];
??CrossCallReturnLabel_94:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3202           cmd.transitionTime = BUILD_UINT16( pInMsg->pData[2], pInMsg->pData[3] );
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_83:
        INC       DPTR
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_100:
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        LCALL     ??Subroutine104_0 & 0xFFFF
// 3203           cmd.withOnOff = withOnOff;
??CrossCallReturnLabel_221:
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
// 3204 
// 3205           pCBs->pfnLevelControlStep( &cmd );
        ; Setup parameters for indirect call
        MOV       A,#0x7
??zclGeneral_ProcessInLevelControl_11:
        LCALL     ?XSTACK_DISP101_8
??zclGeneral_ProcessInLevelControl_10:
        MOV       DPL,R4
        MOV       DPH,R5
// 3206         }
        LCALL     ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_336:
        SJMP      ??zclGeneral_ProcessInLevelControl_12
// 3207         break;
// 3208 
// 3209       case COMMAND_LEVEL_STOP:
// 3210       case COMMAND_LEVEL_STOP_WITH_ON_OFF:
// 3211         // Both Stop commands are identical
// 3212         if ( pCBs->pfnLevelControlStop )
??zclGeneral_ProcessInLevelControl_4:
        MOV       A,R4
        ADD       A,#0x12
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        LCALL     ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_30:
        JZ        ??zclGeneral_ProcessInLevelControl_0
// 3213         {
// 3214           pCBs->pfnLevelControlStop();
        ; Setup parameters for indirect call
??zclGeneral_ProcessInLevelControl_12:
        LCALL     ?CALL_IND
        SJMP      ??zclGeneral_ProcessInLevelControl_0
// 3215         }
// 3216         break;
// 3217 
// 3218       default:
// 3219         stat = ZFailure;
??zclGeneral_ProcessInLevelControl_8:
        MOV       R6,#0x1
// 3220         break;
// 3221     }
// 3222   }
// 3223   // no Client command
// 3224 
// 3225   return ( stat );
??zclGeneral_ProcessInLevelControl_0:
        MOV       A,R6
        MOV       R1,A
        MOV       A,#0xc
        LJMP      ??Subroutine124_0 & 0xFFFF
// 3226 }
          CFI EndBlock cfiBlock678

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond679 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_99
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond680 Using cfiCommon0
          CFI (cfiCond680) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond680) Conditional ??CrossCallReturnLabel_100
          CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond680) CFA_SP SP+-2
          CFI (cfiCond680) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker681 Using cfiCommon1
          CFI (cfiPicker681) NoFunction
          CFI (cfiPicker681) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond679
          CFI EndBlock cfiCond680
          CFI EndBlock cfiPicker681

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond682 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_93
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond683 Using cfiCommon0
          CFI (cfiCond683) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond683) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond683) CFA_SP SP+-2
          CFI (cfiCond683) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker684 Using cfiCommon1
          CFI (cfiPicker684) NoFunction
          CFI (cfiPicker684) Picker
        MOVX      @DPTR,A
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_149:
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond682
          CFI EndBlock cfiCond683
          CFI EndBlock cfiPicker684

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond685 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_82
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_83
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+-2
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker687 Using cfiCommon1
          CFI (cfiPicker687) NoFunction
          CFI (cfiPicker687) Picker
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_286:
        MOV       DPL,R2
        MOV       DPH,A
        INC       DPTR
        RET
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiPicker687

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond688 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_45
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+-2
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+-2
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker691 Using cfiCommon1
          CFI (cfiPicker691) NoFunction
          CFI (cfiPicker691) Picker
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_148:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiPicker691

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond692 Using cfiCommon0
          CFI Function zclGeneral_ProcessInLevelControl
          CFI Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_93
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond693 Using cfiCommon0
          CFI (cfiCond693) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond693) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_94
          CFI (cfiCond693) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond693) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond693) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond693) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond693) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond693) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond693) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond693) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond693) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond693) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond693) CFA_SP SP+-4
          CFI (cfiCond693) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond694 Using cfiCommon0
          CFI (cfiCond694) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond694) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_45
          CFI (cfiCond694) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond694) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond694) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond694) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond694) CFA_SP SP+-4
          CFI (cfiCond694) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_46
          CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond695) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond695) CFA_SP SP+-4
          CFI (cfiCond695) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_47
          CFI (cfiCond696) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond696) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond696) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond696) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond696) CFA_SP SP+-4
          CFI (cfiCond696) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker697 Using cfiCommon1
          CFI (cfiPicker697) NoFunction
          CFI (cfiPicker697) Picker
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        MOV       R1,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R1
        RET
          CFI EndBlock cfiCond692
          CFI EndBlock cfiCond693
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiPicker697

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond698 Using cfiCommon0
          CFI Function zclGeneral_HdlInSpecificCommands
          CFI Conditional ??CrossCallReturnLabel_28
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+-2
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+-2
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker701 Using cfiCommon1
          CFI (cfiPicker701) NoFunction
          CFI (cfiPicker701) Picker
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_346:
        MOV       DPL,R0
        MOV       DPH,A
        MOV       A,DPL
        ORL       A,DPH
        RET
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiPicker701

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond702 Using cfiCommon0
          CFI Function zclGeneral_SendGroupResponse
          CFI Conditional ??CrossCallReturnLabel_347, ??CrossCallReturnLabel_55
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond703 Using cfiCommon0
          CFI (cfiCond703) Function zclGeneral_SendSceneResponse
          CFI (cfiCond703) Conditional ??CrossCallReturnLabel_347, ??CrossCallReturnLabel_56
          CFI (cfiCond703) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond703) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond703) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond703) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond703) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond703) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond703) CFA_SP SP+-4
          CFI (cfiCond703) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond704 Using cfiCommon0
          CFI (cfiCond704) Function zclGeneral_SendLevelControlMoveToLevelRequest
          CFI (cfiCond704) Conditional ??CrossCallReturnLabel_347, ??CrossCallReturnLabel_57
          CFI (cfiCond704) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond704) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond704) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond704) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond704) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond704) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond704) CFA_SP SP+-4
          CFI (cfiCond704) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond705 Using cfiCommon0
          CFI (cfiCond705) Function zclGeneral_SendSceneViewRsp
          CFI (cfiCond705) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_74
          CFI (cfiCond705) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond705) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond705) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond705) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond705) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond705) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond705) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond705) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond705) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond705) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond705) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond705) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond705) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond705) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond705) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond705) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond705) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond705) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond705) CFA_SP SP+-4
          CFI (cfiCond705) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond706 Using cfiCommon0
          CFI (cfiCond706) Function zclGeneral_SendLevelControlStepRequest
          CFI (cfiCond706) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_75
          CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond706) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond706) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond706) CFA_SP SP+-4
          CFI (cfiCond706) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function zclGeneral_RemoveScene
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_76
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+-4
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function zclGeneral_RemoveScene
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_77
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+-4
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond709 Using cfiCommon0
          CFI (cfiCond709) Function zclGeneral_RemoveAllScenes
          CFI (cfiCond709) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_78
          CFI (cfiCond709) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond709) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond709) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond709) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond709) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond709) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond709) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond709) CFA_SP SP+-4
          CFI (cfiCond709) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond710 Using cfiCommon0
          CFI (cfiCond710) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond710) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_79
          CFI (cfiCond710) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond710) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond710) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond710) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond710) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond710) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond710) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond710) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond710) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond710) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond710) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond710) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond710) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond710) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond710) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond710) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond710) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond710) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond710) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond710) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond710) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond710) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond710) CFA_SP SP+-4
          CFI (cfiCond710) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_80
          CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond711) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond711) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond711) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond711) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond711) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond711) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond711) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond711) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond711) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond711) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond711) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond711) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond711) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond711) CFA_SP SP+-4
          CFI (cfiCond711) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function zclGeneral_ScenesInit
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_348, ??CrossCallReturnLabel_81
          CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond712) CFA_SP SP+-4
          CFI (cfiCond712) CFA_XSP16 add(XSP16, 68)
          CFI Block cfiCond713 Using cfiCommon0
          CFI (cfiCond713) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond713) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_16
          CFI (cfiCond713) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond713) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond713) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond713) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond713) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond713) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond713) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond713) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond713) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond713) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond713) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond713) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond713) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond713) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond713) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond713) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond713) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond713) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond713) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond713) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond713) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond713) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond713) CFA_SP SP+-6
          CFI (cfiCond713) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond714 Using cfiCommon0
          CFI (cfiCond714) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond714) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_17
          CFI (cfiCond714) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond714) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond714) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond714) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond714) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond714) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond714) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond714) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond714) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond714) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond714) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond714) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond714) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond714) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond714) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond714) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond714) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond714) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond714) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond714) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond714) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond714) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond714) CFA_SP SP+-6
          CFI (cfiCond714) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond715 Using cfiCommon0
          CFI (cfiCond715) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond715) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_18
          CFI (cfiCond715) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond715) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond715) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond715) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond715) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond715) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond715) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond715) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond715) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond715) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond715) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond715) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond715) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond715) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond715) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond715) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond715) CFA_SP SP+-6
          CFI (cfiCond715) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_7
          CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond716) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond716) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond716) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond716) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond716) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond716) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond716) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond716) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond716) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond716) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond716) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond716) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond716) CFA_SP SP+-6
          CFI (cfiCond716) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond717 Using cfiCommon0
          CFI (cfiCond717) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond717) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_8
          CFI (cfiCond717) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond717) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond717) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond717) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond717) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond717) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond717) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond717) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond717) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond717) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond717) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond717) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond717) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond717) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond717) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond717) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond717) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond717) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond717) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond717) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond717) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond717) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond717) CFA_SP SP+-6
          CFI (cfiCond717) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond718 Using cfiCommon0
          CFI (cfiCond718) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond718) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_9
          CFI (cfiCond718) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond718) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond718) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond718) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond718) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond718) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond718) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond718) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond718) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond718) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond718) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond718) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond718) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond718) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond718) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond718) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond718) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond718) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond718) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond718) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond718) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond718) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond718) CFA_SP SP+-6
          CFI (cfiCond718) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond719 Using cfiCommon0
          CFI (cfiCond719) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond719) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_10
          CFI (cfiCond719) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond719) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond719) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond719) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond719) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond719) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond719) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond719) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond719) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond719) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond719) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond719) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond719) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond719) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond719) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond719) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond719) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond719) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond719) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond719) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond719) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond719) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond719) CFA_SP SP+-6
          CFI (cfiCond719) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond720 Using cfiCommon0
          CFI (cfiCond720) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond720) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_0
          CFI (cfiCond720) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond720) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond720) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond720) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond720) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond720) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond720) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond720) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond720) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond720) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond720) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond720) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond720) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond720) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond720) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond720) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond720) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond720) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond720) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond720) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond720) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond720) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond720) CFA_SP SP+-6
          CFI (cfiCond720) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond721 Using cfiCommon0
          CFI (cfiCond721) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond721) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_1
          CFI (cfiCond721) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond721) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond721) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond721) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond721) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond721) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond721) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond721) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond721) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond721) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond721) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond721) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond721) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond721) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond721) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond721) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond721) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond721) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond721) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond721) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond721) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond721) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond721) CFA_SP SP+-6
          CFI (cfiCond721) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond722 Using cfiCommon0
          CFI (cfiCond722) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond722) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_2
          CFI (cfiCond722) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond722) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond722) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond722) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond722) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond722) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond722) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond722) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond722) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond722) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond722) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond722) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond722) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond722) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond722) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond722) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond722) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond722) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond722) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond722) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond722) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond722) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond722) CFA_SP SP+-6
          CFI (cfiCond722) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond723 Using cfiCommon0
          CFI (cfiCond723) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond723) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_3
          CFI (cfiCond723) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond723) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond723) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond723) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond723) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond723) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond723) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond723) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond723) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond723) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond723) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond723) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond723) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond723) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond723) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond723) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond723) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond723) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond723) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond723) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond723) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond723) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond723) CFA_SP SP+-6
          CFI (cfiCond723) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond724 Using cfiCommon0
          CFI (cfiCond724) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond724) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_4
          CFI (cfiCond724) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond724) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond724) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond724) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond724) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond724) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond724) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond724) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond724) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond724) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond724) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond724) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond724) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond724) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond724) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond724) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond724) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond724) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond724) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond724) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond724) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond724) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond724) CFA_SP SP+-6
          CFI (cfiCond724) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_5
          CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond725) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond725) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond725) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond725) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond725) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond725) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond725) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond725) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond725) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond725) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond725) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond725) CFA_SP SP+-6
          CFI (cfiCond725) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond726 Using cfiCommon0
          CFI (cfiCond726) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond726) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_6
          CFI (cfiCond726) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond726) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond726) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond726) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond726) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond726) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond726) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond726) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond726) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond726) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond726) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond726) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond726) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond726) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond726) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond726) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond726) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond726) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond726) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond726) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond726) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond726) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond726) CFA_SP SP+-6
          CFI (cfiCond726) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond727 Using cfiCommon0
          CFI (cfiCond727) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond727) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_35
          CFI (cfiCond727) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond727) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond727) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond727) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond727) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond727) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond727) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond727) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond727) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond727) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond727) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond727) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond727) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond727) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond727) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond727) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond727) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond727) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond727) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond727) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond727) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond727) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond727) CFA_SP SP+-6
          CFI (cfiCond727) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond728 Using cfiCommon0
          CFI (cfiCond728) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond728) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_36
          CFI (cfiCond728) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond728) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond728) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond728) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond728) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond728) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond728) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond728) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond728) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond728) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond728) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond728) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond728) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond728) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond728) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond728) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond728) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond728) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond728) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond728) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond728) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond728) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond728) CFA_SP SP+-6
          CFI (cfiCond728) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_33
          CFI (cfiCond729) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond729) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond729) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond729) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond729) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond729) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond729) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond729) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond729) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond729) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond729) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond729) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond729) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond729) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond729) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond729) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond729) CFA_SP SP+-6
          CFI (cfiCond729) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond730 Using cfiCommon0
          CFI (cfiCond730) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond730) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_34
          CFI (cfiCond730) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond730) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond730) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond730) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond730) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond730) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond730) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond730) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond730) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond730) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond730) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond730) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond730) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond730) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond730) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond730) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond730) CFA_SP SP+-6
          CFI (cfiCond730) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond731 Using cfiCommon0
          CFI (cfiCond731) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond731) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_37
          CFI (cfiCond731) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond731) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond731) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond731) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond731) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond731) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond731) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond731) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond731) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond731) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond731) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond731) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond731) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond731) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond731) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond731) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond731) CFA_SP SP+-6
          CFI (cfiCond731) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond732 Using cfiCommon0
          CFI (cfiCond732) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond732) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_38
          CFI (cfiCond732) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond732) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond732) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond732) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond732) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond732) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond732) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond732) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond732) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond732) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond732) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond732) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond732) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond732) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond732) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond732) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond732) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond732) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond732) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond732) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond732) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond732) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond732) CFA_SP SP+-6
          CFI (cfiCond732) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_31
          CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond733) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond733) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond733) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond733) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond733) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond733) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond733) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond733) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond733) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond733) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond733) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond733) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond733) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond733) CFA_SP SP+-6
          CFI (cfiCond733) CFA_XSP16 add(XSP16, 80)
          CFI Block cfiCond734 Using cfiCommon0
          CFI (cfiCond734) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond734) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_32
          CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond734) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond734) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond734) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond734) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond734) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond734) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond734) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond734) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond734) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond734) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond734) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond734) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond734) CFA_SP SP+-6
          CFI (cfiCond734) CFA_XSP16 add(XSP16, 86)
          CFI Block cfiCond735 Using cfiCommon0
          CFI (cfiCond735) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond735) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_314
          CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond735) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond735) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond735) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond735) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond735) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond735) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond735) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond735) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond735) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond735) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond735) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond735) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond735) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond735) CFA_SP SP+-6
          CFI (cfiCond735) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_315
          CFI (cfiCond736) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond736) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond736) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond736) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond736) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond736) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond736) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond736) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond736) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond736) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond736) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond736) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond736) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond736) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond736) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond736) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond736) CFA_SP SP+-6
          CFI (cfiCond736) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond737 Using cfiCommon0
          CFI (cfiCond737) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond737) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_316
          CFI (cfiCond737) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond737) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond737) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond737) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond737) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond737) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond737) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond737) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond737) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond737) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond737) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond737) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond737) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond737) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond737) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond737) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond737) CFA_SP SP+-6
          CFI (cfiCond737) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_243
          CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond738) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond738) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond738) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond738) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond738) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond738) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond738) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond738) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond738) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond738) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond738) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond738) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond738) CFA_SP SP+-6
          CFI (cfiCond738) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_244
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond739) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond739) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond739) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond739) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+-6
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_349, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_242
          CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond740) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond740) CFA_SP SP+-6
          CFI (cfiCond740) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_346, ??CrossCallReturnLabel_28
          CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond741) CFA_SP SP+-4
          CFI (cfiCond741) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_346, ??CrossCallReturnLabel_29
          CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond742) CFA_SP SP+-4
          CFI (cfiCond742) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_346, ??CrossCallReturnLabel_30
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+-4
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_350, ??CrossCallReturnLabel_331
          CFI (cfiCond744) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond744) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond744) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond744) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond744) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond744) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond744) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond744) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond744) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond744) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond744) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond744) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond744) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond744) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond744) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond744) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond744) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond744) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond744) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond744) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond744) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond744) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond744) CFA_SP SP+-4
          CFI (cfiCond744) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_350, ??CrossCallReturnLabel_332
          CFI (cfiCond745) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond745) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond745) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond745) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond745) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond745) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond745) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond745) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond745) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond745) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond745) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond745) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond745) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond745) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond745) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond745) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond745) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond745) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond745) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond745) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond745) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond745) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond745) CFA_SP SP+-4
          CFI (cfiCond745) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_350, ??CrossCallReturnLabel_333
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond746) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond746) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond746) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond746) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond746) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond746) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond746) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond746) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond746) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+-4
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_350, ??CrossCallReturnLabel_334
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond747) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond747) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond747) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond747) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond747) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond747) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond747) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond747) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond747) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond747) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond747) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_SP SP+-4
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_350, ??CrossCallReturnLabel_335
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+-4
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_350, ??CrossCallReturnLabel_336
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+-4
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function zclGeneral_SendGroupRequest
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_43
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_SP SP+-6
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond751 Using cfiCommon0
          CFI (cfiCond751) Function zclGeneral_SendSceneRequest
          CFI (cfiCond751) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_44
          CFI (cfiCond751) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond751) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond751) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond751) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond751) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond751) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond751) CFA_SP SP+-6
          CFI (cfiCond751) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_72
          CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond752) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond752) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond752) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond752) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond752) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond752) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond752) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond752) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond752) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond752) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond752) CFA_SP SP+-6
          CFI (cfiCond752) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_73
          CFI (cfiCond753) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond753) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond753) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond753) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond753) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond753) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond753) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond753) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond753) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond753) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond753) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond753) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond753) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond753) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond753) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond753) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond753) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond753) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond753) CFA_SP SP+-6
          CFI (cfiCond753) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond754 Using cfiCommon0
          CFI (cfiCond754) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond754) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_240
          CFI (cfiCond754) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond754) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond754) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond754) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond754) CFA_SP SP+-6
          CFI (cfiCond754) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_241
          CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond755) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond755) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond755) CFA_SP SP+-6
          CFI (cfiCond755) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_239
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_SP SP+-6
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond757 Using cfiCommon0
          CFI (cfiCond757) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond757) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_274
          CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond757) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond757) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond757) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond757) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond757) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond757) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond757) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond757) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond757) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond757) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond757) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond757) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond757) CFA_SP SP+-6
          CFI (cfiCond757) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond758 Using cfiCommon0
          CFI (cfiCond758) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond758) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_275
          CFI (cfiCond758) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond758) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond758) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond758) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond758) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond758) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond758) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond758) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond758) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond758) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond758) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond758) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond758) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond758) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond758) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond758) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond758) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond758) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond758) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond758) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond758) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond758) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond758) CFA_SP SP+-6
          CFI (cfiCond758) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond759 Using cfiCommon0
          CFI (cfiCond759) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond759) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_276
          CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond759) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond759) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond759) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond759) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond759) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond759) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond759) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond759) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond759) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond759) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond759) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond759) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond759) CFA_SP SP+-6
          CFI (cfiCond759) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_277
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond760) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond760) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond760) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond760) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond760) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond760) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond760) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond760) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond760) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+-6
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond761 Using cfiCommon0
          CFI (cfiCond761) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond761) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_278
          CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond761) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond761) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond761) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond761) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond761) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond761) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond761) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond761) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond761) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond761) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond761) CFA_SP SP+-6
          CFI (cfiCond761) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_273
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond762) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond762) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond762) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond762) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond762) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond762) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond762) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond762) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond762) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond762) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+-6
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_256
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+-6
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond764 Using cfiCommon0
          CFI (cfiCond764) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond764) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_258
          CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond764) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond764) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond764) CFA_SP SP+-6
          CFI (cfiCond764) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond765 Using cfiCommon0
          CFI (cfiCond765) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond765) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_259
          CFI (cfiCond765) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond765) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond765) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond765) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond765) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond765) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond765) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond765) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond765) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond765) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond765) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond765) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond765) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond765) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond765) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond765) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond765) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond765) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond765) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond765) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond765) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond765) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond765) CFA_SP SP+-6
          CFI (cfiCond765) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_260
          CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond766) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond766) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond766) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond766) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond766) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond766) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond766) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond766) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond766) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond766) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond766) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond766) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond766) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond766) CFA_SP SP+-6
          CFI (cfiCond766) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_261
          CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond767) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond767) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond767) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond767) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond767) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond767) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond767) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond767) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond767) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond767) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond767) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond767) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond767) CFA_SP SP+-6
          CFI (cfiCond767) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond768 Using cfiCommon0
          CFI (cfiCond768) Function zclGeneral_AddScene
          CFI (cfiCond768) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_262
          CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond768) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond768) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond768) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond768) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond768) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond768) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond768) CFA_SP SP+-6
          CFI (cfiCond768) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond769 Using cfiCommon0
          CFI (cfiCond769) Function zclGeneral_AddScene
          CFI (cfiCond769) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_263
          CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond769) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond769) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond769) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond769) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond769) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond769) CFA_SP SP+-6
          CFI (cfiCond769) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function zclGeneral_FindAllScenesForGroup
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_257
          CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond770) CFA_SP SP+-6
          CFI (cfiCond770) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond771 Using cfiCommon0
          CFI (cfiCond771) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond771) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_264
          CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond771) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond771) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond771) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond771) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond771) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond771) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond771) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond771) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond771) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond771) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond771) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond771) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond771) CFA_SP SP+-6
          CFI (cfiCond771) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond772 Using cfiCommon0
          CFI (cfiCond772) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond772) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_265
          CFI (cfiCond772) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond772) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond772) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond772) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond772) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond772) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond772) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond772) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond772) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond772) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond772) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond772) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond772) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond772) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond772) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond772) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond772) CFA_SP SP+-6
          CFI (cfiCond772) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_266
          CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond773) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond773) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond773) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond773) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond773) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond773) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond773) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond773) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond773) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond773) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond773) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond773) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond773) CFA_SP SP+-6
          CFI (cfiCond773) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond774 Using cfiCommon0
          CFI (cfiCond774) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond774) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_267
          CFI (cfiCond774) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond774) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond774) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond774) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond774) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond774) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond774) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond774) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond774) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond774) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond774) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond774) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond774) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond774) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond774) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond774) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond774) CFA_SP SP+-6
          CFI (cfiCond774) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond775 Using cfiCommon0
          CFI (cfiCond775) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond775) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_268
          CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond775) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond775) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond775) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond775) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond775) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond775) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond775) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond775) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond775) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond775) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond775) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond775) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond775) CFA_SP SP+-6
          CFI (cfiCond775) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_269
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond776) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond776) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond776) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond776) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond776) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond776) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond776) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond776) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond776) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+-6
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond777 Using cfiCommon0
          CFI (cfiCond777) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond777) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_270
          CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond777) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond777) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond777) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond777) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond777) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond777) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond777) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond777) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond777) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond777) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond777) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond777) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond777) CFA_SP SP+-6
          CFI (cfiCond777) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond778 Using cfiCommon0
          CFI (cfiCond778) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond778) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_271
          CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond778) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond778) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond778) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond778) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond778) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond778) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond778) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond778) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond778) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond778) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond778) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond778) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond778) CFA_SP SP+-6
          CFI (cfiCond778) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond779 Using cfiCommon0
          CFI (cfiCond779) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond779) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_272
          CFI (cfiCond779) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond779) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond779) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond779) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond779) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond779) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond779) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond779) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond779) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond779) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond779) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond779) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond779) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond779) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond779) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond779) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond779) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond779) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond779) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond779) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond779) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond779) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond779) CFA_SP SP+-6
          CFI (cfiCond779) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond780 Using cfiCommon0
          CFI (cfiCond780) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond780) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_345, ??CrossCallReturnLabel_339
          CFI (cfiCond780) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond780) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond780) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond780) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond780) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond780) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond780) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond780) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond780) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond780) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond780) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond780) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond780) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond780) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond780) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond780) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond780) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond780) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond780) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond780) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond780) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond780) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond780) CFA_SP SP+-6
          CFI (cfiCond780) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_345, ??CrossCallReturnLabel_340
          CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond781) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond781) CFA_SP SP+-6
          CFI (cfiCond781) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiCond782 Using cfiCommon0
          CFI (cfiCond782) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond782) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_345, ??CrossCallReturnLabel_337
          CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond782) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond782) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond782) CFA_SP SP+-6
          CFI (cfiCond782) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond783 Using cfiCommon0
          CFI (cfiCond783) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond783) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_345, ??CrossCallReturnLabel_338
          CFI (cfiCond783) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond783) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond783) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond783) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond783) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond783) CFA_SP SP+-6
          CFI (cfiCond783) CFA_XSP16 add(XSP16, 73)
          CFI Block cfiPicker784 Using cfiCommon1
          CFI (cfiPicker784) NoFunction
          CFI (cfiPicker784) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond702
          CFI EndBlock cfiCond703
          CFI EndBlock cfiCond704
          CFI EndBlock cfiCond705
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiCond709
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiCond713
          CFI EndBlock cfiCond714
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiCond717
          CFI EndBlock cfiCond718
          CFI EndBlock cfiCond719
          CFI EndBlock cfiCond720
          CFI EndBlock cfiCond721
          CFI EndBlock cfiCond722
          CFI EndBlock cfiCond723
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiCond726
          CFI EndBlock cfiCond727
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiCond730
          CFI EndBlock cfiCond731
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiCond734
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiCond757
          CFI EndBlock cfiCond758
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiCond764
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiCond768
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiCond771
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiCond774
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiCond777
          CFI EndBlock cfiCond778
          CFI EndBlock cfiCond779
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiCond782
          CFI EndBlock cfiCond783
          CFI EndBlock cfiPicker784

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond785 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesClient
          CFI Conditional ??CrossCallReturnLabel_331
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond786 Using cfiCommon0
          CFI (cfiCond786) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond786) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond786) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond786) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond786) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond786) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond786) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond786) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond786) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond786) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond786) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond786) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond786) CFA_SP SP+-2
          CFI (cfiCond786) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker787 Using cfiCommon1
          CFI (cfiPicker787) NoFunction
          CFI (cfiPicker787) Picker
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        ; Setup parameters for indirect call
        ; Setup parameters for indirect call
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        MOV       DPL,?V2
        MOV       DPH,?V3
          CFI EndBlock cfiCond785
          CFI EndBlock cfiCond786
          CFI EndBlock cfiPicker787
        REQUIRE ??Subroutine122_0
        ; // Fall through to label ??Subroutine122_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine122_0:
          CFI Block cfiCond788 Using cfiCommon0
          CFI Function zclGeneral_ProcessInGroupsClient
          CFI Conditional ??CrossCallReturnLabel_333
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond789 Using cfiCommon0
          CFI (cfiCond789) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond789) Conditional ??CrossCallReturnLabel_334
          CFI (cfiCond789) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond789) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond789) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond789) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond789) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond789) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond789) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond789) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond789) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond789) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond789) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond789) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond789) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond789) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond789) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond789) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond789) CFA_SP SP+-2
          CFI (cfiCond789) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond790 Using cfiCommon0
          CFI (cfiCond790) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond790) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond790) CFA_SP SP+-2
          CFI (cfiCond790) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function zclGeneral_ProcessInLevelControl
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond791) CFA_SP SP+-2
          CFI (cfiCond791) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond792) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond792) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond792) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond792) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond792) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond792) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond792) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond792) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond792) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond792) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond792) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond792) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond792) CFA_SP SP+-2
          CFI (cfiCond792) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond793) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond793) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond793) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond793) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond793) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond793) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond793) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond793) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond793) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond793) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond793) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond793) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond793) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond793) CFA_SP SP+-2
          CFI (cfiCond793) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiPicker794 Using cfiCommon1
          CFI (cfiPicker794) NoFunction
          CFI (cfiPicker794) Picker
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_350:
        MOV       DPH,A
        MOV       DPL,R0
        RET
          CFI EndBlock cfiCond788
          CFI EndBlock cfiCond789
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiPicker794
// 3227 #endif // ZCL_LEVEL_CTRL
// 3228 
// 3229 #ifdef ZCL_ALARMS
// 3230 /*********************************************************************
// 3231  * @fn      zclGeneral_AddAlarm
// 3232  *
// 3233  * @brief   Add an alarm for a cluster
// 3234  *
// 3235  * @param   endpoint -
// 3236  * @param   alarm - new alarm item
// 3237  *
// 3238  * @return  ZStatus_t
// 3239  */
// 3240 ZStatus_t zclGeneral_AddAlarm( uint8 endpoint, zclGeneral_Alarm_t *alarm )
// 3241 {
// 3242   zclGenAlarmItem_t *pNewItem;
// 3243   zclGenAlarmItem_t *pLoop;
// 3244 
// 3245   // Fill in the new profile list
// 3246   pNewItem = zcl_mem_alloc( sizeof( zclGenAlarmItem_t ) );
// 3247   if ( pNewItem == NULL )
// 3248     return ( ZMemError );
// 3249 
// 3250   // Fill in the plugin record.
// 3251   pNewItem->next = (zclGenAlarmItem_t *)NULL;
// 3252   pNewItem->endpoint =  endpoint;
// 3253   zcl_memcpy( (uint8*)(&pNewItem->alarm), (uint8*)alarm, sizeof ( zclGeneral_Alarm_t ) );
// 3254 
// 3255   // Find spot in list
// 3256   if (  zclGenAlarmTable == NULL )
// 3257   {
// 3258     zclGenAlarmTable = pNewItem;
// 3259   }
// 3260   else
// 3261   {
// 3262     // Look for end of list
// 3263     pLoop = zclGenAlarmTable;
// 3264     while ( pLoop->next != NULL )
// 3265       pLoop = pLoop->next;
// 3266 
// 3267     // Put new item at end of list
// 3268     pLoop->next = pNewItem;
// 3269   }
// 3270 
// 3271   return ( ZSuccess );
// 3272 }
// 3273 
// 3274 /*********************************************************************
// 3275  * @fn      zclGeneral_FindAlarm
// 3276  *
// 3277  * @brief   Find an alarm with alarmCode and clusterID
// 3278  *
// 3279  * @param   endpoint -
// 3280  * @param   groupID - what group the scene belongs to
// 3281  * @param   sceneID - ID to look for scene
// 3282  *
// 3283  * @return  a pointer to the alarm information, NULL if not found
// 3284  */
// 3285 zclGeneral_Alarm_t *zclGeneral_FindAlarm( uint8 endpoint, uint8 alarmCode, uint16 clusterID )
// 3286 {
// 3287   zclGenAlarmItem_t *pLoop;
// 3288 
// 3289   // Look for the alarm
// 3290   pLoop = zclGenAlarmTable;
// 3291   while ( pLoop )
// 3292   {
// 3293     if ( pLoop->endpoint == endpoint &&
// 3294          pLoop->alarm.code == alarmCode && pLoop->alarm.clusterID == clusterID )
// 3295     {
// 3296       return ( &(pLoop->alarm) );
// 3297     }
// 3298     pLoop = pLoop->next;
// 3299   }
// 3300 
// 3301   return ( (zclGeneral_Alarm_t *)NULL );
// 3302 }
// 3303 
// 3304 /*********************************************************************
// 3305  * @fn      zclGeneral_FindEarliestAlarm
// 3306  *
// 3307  * @brief   Find an alarm with the earliest timestamp
// 3308  *
// 3309  * @param   endpoint -
// 3310  *
// 3311  * @return  a pointer to the alarm information, NULL if not found
// 3312  */
// 3313 zclGeneral_Alarm_t *zclGeneral_FindEarliestAlarm( uint8 endpoint )
// 3314 {
// 3315   zclGenAlarmItem_t *pLoop;
// 3316   zclGenAlarmItem_t earliestAlarm;
// 3317   zclGenAlarmItem_t *pEarliestAlarm = &earliestAlarm;
// 3318 
// 3319   pEarliestAlarm->alarm.timeStamp = 0xFFFFFFFF;
// 3320 
// 3321   // Look for alarm with earliest time
// 3322   pLoop = zclGenAlarmTable;
// 3323   while ( pLoop )
// 3324   {
// 3325     if ( pLoop->endpoint == endpoint &&
// 3326          pLoop->alarm.timeStamp < pEarliestAlarm->alarm.timeStamp )
// 3327     {
// 3328       pEarliestAlarm = pLoop;
// 3329     }
// 3330     pLoop = pLoop->next;
// 3331   }
// 3332 
// 3333   if ( pEarliestAlarm->alarm.timeStamp != 0xFFFFFFFF )
// 3334     return ( &(pEarliestAlarm->alarm) );
// 3335 
// 3336   // No alarm
// 3337   return ( (zclGeneral_Alarm_t *)NULL );
// 3338 }
// 3339 
// 3340 /*********************************************************************
// 3341  * @fn      zclGeneral_ResetAlarm
// 3342  *
// 3343  * @brief   Remove an alarm with alarmCode and clusterID
// 3344  *
// 3345  * @param   endpoint -
// 3346  * @param   alarmCode -
// 3347  * @param   clusterID -
// 3348  *
// 3349  * @return  TRUE if removed, FALSE if not found
// 3350  */
// 3351 void zclGeneral_ResetAlarm( uint8 endpoint, uint8 alarmCode, uint16 clusterID )
// 3352 {
// 3353   zclGenAlarmItem_t *pLoop;
// 3354   zclGenAlarmItem_t *pPrev;
// 3355 
// 3356   // Look for end of list
// 3357   pLoop = zclGenAlarmTable;
// 3358   pPrev = NULL;
// 3359   while ( pLoop )
// 3360   {
// 3361     if ( pLoop->endpoint == endpoint &&
// 3362          pLoop->alarm.code == alarmCode && pLoop->alarm.clusterID == clusterID )
// 3363     {
// 3364       if ( pPrev == NULL )
// 3365         zclGenAlarmTable = pLoop->next;
// 3366       else
// 3367         pPrev->next = pLoop->next;
// 3368 
// 3369       // Free the memory
// 3370       zcl_mem_free( pLoop );
// 3371 
// 3372       // Notify the Application so that if the alarm condition still active then
// 3373       // a new notification will be generated, and a new alarm record will be
// 3374       // added to the alarm log
// 3375       // zclGeneral_NotifyReset( alarmCode, clusterID ); // callback function?
// 3376       return;
// 3377     }
// 3378     pPrev = pLoop;
// 3379     pLoop = pLoop->next;
// 3380   }
// 3381 }
// 3382 
// 3383 /*********************************************************************
// 3384  * @fn      zclGeneral_ResetAllAlarms
// 3385  *
// 3386  * @brief   Remove all alarms with endpoint
// 3387  *
// 3388  * @param   endpoint -
// 3389  * @param   notifyApp -
// 3390  *
// 3391  * @return  none
// 3392  */
// 3393 void zclGeneral_ResetAllAlarms( uint8 endpoint, uint8 notifyApp )
// 3394 {
// 3395   zclGenAlarmItem_t *pLoop;
// 3396   zclGenAlarmItem_t *pPrev;
// 3397   zclGenAlarmItem_t *pNext;
// 3398 
// 3399   // Look for end of list
// 3400   pLoop = zclGenAlarmTable;
// 3401   pPrev = NULL;
// 3402   while ( pLoop )
// 3403   {
// 3404     if (  pLoop->endpoint == endpoint )
// 3405     {
// 3406       if ( pPrev == NULL )
// 3407         zclGenAlarmTable = pLoop->next;
// 3408       else
// 3409         pPrev->next = pLoop->next;
// 3410 
// 3411       pNext = pLoop->next;
// 3412 
// 3413       // Free the memory
// 3414       zcl_mem_free( pLoop );
// 3415 
// 3416       pLoop = pNext;
// 3417     }
// 3418     else
// 3419     {
// 3420       pPrev = pLoop;
// 3421       pLoop = pLoop->next;
// 3422     }
// 3423   }
// 3424 
// 3425   if ( notifyApp )
// 3426   {
// 3427     // Notify the Application so that if any alarm conditions still active then
// 3428     // a new notification will be generated, and a new alarm record will be
// 3429     // added to the alarm log
// 3430     // zclGeneral_NotifyResetAll(); // callback function?
// 3431   }
// 3432 }
// 3433 
// 3434 /*********************************************************************
// 3435  * @fn      zclGeneral_ProcessInAlarmsServer
// 3436  *
// 3437  * @brief   Process in the received Alarms Command.
// 3438  *
// 3439  * @param   pInMsg - pointer to the incoming message
// 3440  *
// 3441  * @return  ZStatus_t
// 3442  */
// 3443 static ZStatus_t zclGeneral_ProcessInAlarmsServer( zclIncoming_t *pInMsg,
// 3444                                                    zclGeneral_AppCallbacks_t *pCBs )
// 3445 {
// 3446   zclAlarm_t alarm;
// 3447   zclGeneral_Alarm_t *pAlarm;
// 3448   uint8 *pData = pInMsg->pData;
// 3449   ZStatus_t stat = ZSuccess;
// 3450 
// 3451   switch ( pInMsg->hdr.commandID )
// 3452   {
// 3453     case COMMAND_ALARMS_RESET:
// 3454       if ( pCBs->pfnAlarm )
// 3455       {
// 3456         alarm.cmdID = pInMsg->hdr.commandID;
// 3457         alarm.alarmCode = pData[0];
// 3458         alarm.clusterID = BUILD_UINT16( pData[1], pData[2] );
// 3459 
// 3460         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3461       }
// 3462       else
// 3463       {
// 3464         stat = ZCL_STATUS_FAILURE;
// 3465       }
// 3466       break;
// 3467 
// 3468     case COMMAND_ALARMS_RESET_ALL:
// 3469       if ( pCBs->pfnAlarm )
// 3470       {
// 3471         alarm.cmdID = pInMsg->hdr.commandID;
// 3472 
// 3473         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3474       }
// 3475       else
// 3476       {
// 3477         stat = ZCL_STATUS_FAILURE;
// 3478       }
// 3479       break;
// 3480 
// 3481     case COMMAND_ALARMS_GET:
// 3482       if ( pCBs->pfnAlarm )
// 3483       {
// 3484         alarm.srcAddr = &(pInMsg->msg->srcAddr);
// 3485         alarm.cmdID = pInMsg->hdr.commandID;
// 3486 
// 3487         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3488 
// 3489         pAlarm = zclGeneral_FindEarliestAlarm( pInMsg->msg->endPoint );
// 3490         if ( pAlarm )
// 3491         {
// 3492           // Send a response back
// 3493           zclGeneral_SendAlarmGetResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 3494                                            ZCL_STATUS_SUCCESS, pAlarm->code,
// 3495                                            pAlarm->clusterID, pAlarm->timeStamp,
// 3496                                            true, pInMsg->hdr.transSeqNum );
// 3497           // Remove the entry from the Alarm table
// 3498           zclGeneral_ResetAlarm( pInMsg->msg->endPoint, pAlarm->code, pAlarm->clusterID );
// 3499         }
// 3500         else
// 3501         {
// 3502           // Send a response back
// 3503           zclGeneral_SendAlarmGetResponse( pInMsg->msg->endPoint, &pInMsg->msg->srcAddr,
// 3504                                            ZCL_STATUS_NOT_FOUND, 0, 0, 0,
// 3505                                            true, pInMsg->hdr.transSeqNum );
// 3506         }
// 3507         stat = ZCL_STATUS_CMD_HAS_RSP;
// 3508       }
// 3509       else
// 3510       {
// 3511         stat = ZCL_STATUS_FAILURE;
// 3512       }
// 3513       break;
// 3514 
// 3515     case COMMAND_ALARMS_RESET_LOG:
// 3516       if ( pCBs->pfnAlarm )
// 3517       {
// 3518         alarm.cmdID = pInMsg->hdr.commandID;
// 3519 
// 3520         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3521 
// 3522         zclGeneral_ResetAllAlarms( pInMsg->msg->endPoint, FALSE );
// 3523       }
// 3524       else
// 3525       {
// 3526         stat = ZCL_STATUS_FAILURE;
// 3527       }
// 3528       break;
// 3529 
// 3530 #ifdef SE_UK_EXT
// 3531     case COMMAND_ALARMS_PUBLISH_EVENT_LOG:
// 3532       if ( pCBs->pfnPublishEventLog )
// 3533       {
// 3534         zclPublishEventLog_t eventLog;
// 3535 
// 3536         eventLog.logID = *pData++;
// 3537         eventLog.cmdIndex = *pData++;
// 3538         eventLog.totalCmds = *pData++;
// 3539 
// 3540         // First try to find out number of Sub Log Payloads
// 3541         eventLog.numSubLogs = (pInMsg->pDataLen-3)/(1+4); // event ID + event time
// 3542         if ( eventLog.numSubLogs > 0 )
// 3543         {
// 3544           // Try to alloc space for Log Payload
// 3545           eventLog.pLogs = (zclEventLogPayload_t *)zcl_mem_alloc( sizeof( zclEventLogPayload_t ) *
// 3546                                                                    eventLog.numSubLogs );
// 3547           if ( eventLog.pLogs != NULL )
// 3548           {
// 3549             // Copy Log Payload
// 3550             for ( uint8 i = 0; i < eventLog.numSubLogs; i++ )
// 3551             {
// 3552               eventLog.pLogs[i].eventId = *pData++;
// 3553               eventLog.pLogs[i].eventTime = zcl_build_uint32( pData, 4 );
// 3554               pData += 4;
// 3555             }
// 3556           }
// 3557           else
// 3558           {
// 3559             stat = ZCL_STATUS_SOFTWARE_FAILURE;
// 3560           }
// 3561         }
// 3562         else
// 3563         {
// 3564           eventLog.pLogs = NULL;
// 3565         }
// 3566 
// 3567         if ( stat == ZSuccess )
// 3568         {
// 3569           pCBs->pfnPublishEventLog( &(pInMsg->msg->srcAddr), &eventLog );
// 3570         }
// 3571 
// 3572         if ( eventLog.pLogs != NULL )
// 3573         {
// 3574           zcl_mem_free( eventLog.pLogs );
// 3575         }
// 3576       }
// 3577       break;
// 3578 #endif // SE_UK_EXT
// 3579 
// 3580     default:
// 3581       stat = ZCL_STATUS_UNSUP_CLUSTER_COMMAND;
// 3582       break;
// 3583   }
// 3584 
// 3585   return ( stat );
// 3586 }
// 3587 
// 3588 /*********************************************************************
// 3589  * @fn      zclGeneral_ProcessInAlarmsClient
// 3590  *
// 3591  * @brief   Process in the received Alarms Command.
// 3592  *
// 3593  * @param   pInMsg - pointer to the incoming message
// 3594  *
// 3595  * @return  ZStatus_t
// 3596  */
// 3597 static ZStatus_t zclGeneral_ProcessInAlarmsClient( zclIncoming_t *pInMsg,
// 3598                                                    zclGeneral_AppCallbacks_t *pCBs )
// 3599 {
// 3600   uint8 *pData = pInMsg->pData;
// 3601   zclAlarm_t alarm;
// 3602   ZStatus_t stat = ZSuccess;
// 3603 
// 3604   zcl_memset( (uint8*)&alarm, 0, sizeof( zclAlarm_t ) );
// 3605 
// 3606   switch ( pInMsg->hdr.commandID )
// 3607   {
// 3608     case COMMAND_ALARMS_ALARM:
// 3609       if ( pCBs->pfnAlarm )
// 3610       {
// 3611         alarm.srcAddr = &(pInMsg->msg->srcAddr);
// 3612         alarm.cmdID = pInMsg->hdr.commandID;
// 3613         alarm.alarmCode = pData[0];
// 3614         alarm.clusterID = BUILD_UINT16( pData[1], pData[2] );
// 3615 
// 3616         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3617       }
// 3618       else
// 3619       {
// 3620         stat = ZCL_STATUS_FAILURE;
// 3621       }
// 3622       break;
// 3623 
// 3624     case COMMAND_ALARMS_GET_RSP:
// 3625       if ( pCBs->pfnAlarm )
// 3626       {
// 3627         alarm.srcAddr = &(pInMsg->msg->srcAddr);
// 3628         alarm.cmdID = pInMsg->hdr.commandID;
// 3629         alarm.alarmCode = *pData++;
// 3630         alarm.clusterID = BUILD_UINT16( pData[0], pData[1] );
// 3631 
// 3632         pCBs->pfnAlarm( pInMsg->hdr.fc.direction, &alarm );
// 3633       }
// 3634       else
// 3635       {
// 3636         stat = ZCL_STATUS_FAILURE;
// 3637       }
// 3638       break;
// 3639 
// 3640 #ifdef SE_UK_EXT
// 3641     case COMMAND_ALARMS_GET_EVENT_LOG:
// 3642       if ( pCBs->pfnGetEventLog )
// 3643       {
// 3644         zclGetEventLog_t eventLog;
// 3645 
// 3646         eventLog.logID = *pData++;
// 3647         eventLog.startTime = zcl_build_uint32( pData, 4 );
// 3648         pData += 4;
// 3649         eventLog.endTime = zcl_build_uint32( pData, 4 );
// 3650         pData += 4;
// 3651         eventLog.numEvents = *pData;
// 3652 
// 3653         pCBs->pfnGetEventLog( pInMsg->msg->endPoint, &(pInMsg->msg->srcAddr),
// 3654                               &eventLog, pInMsg->hdr.transSeqNum );
// 3655       }
// 3656       break;
// 3657 #endif // SE_UK_EXT
// 3658 
// 3659     default:
// 3660       stat = ZCL_STATUS_UNSUP_CLUSTER_COMMAND;
// 3661       break;
// 3662   }
// 3663 
// 3664   return ( stat );
// 3665 }
// 3666 #endif // ZCL_ALARMS
// 3667 
// 3668 #ifdef ZCL_LOCATION
// 3669 /*********************************************************************
// 3670  * @fn      zclGeneral_ProcessInLocationServer
// 3671  *
// 3672  * @brief   Process in the received Location Command.
// 3673  *
// 3674  * @param   pInMsg - pointer to the incoming message
// 3675  *
// 3676  * @return  ZStatus_t
// 3677  */
// 3678 static ZStatus_t zclGeneral_ProcessInLocationServer( zclIncoming_t *pInMsg,
// 3679                                                      zclGeneral_AppCallbacks_t *pCBs )
// 3680 {
// 3681   uint8 *pData = pInMsg->pData;
// 3682   zclLocation_t cmd;
// 3683   ZStatus_t stat = ZSuccess;
// 3684 
// 3685   zcl_memset( (uint8*)&cmd, 0, sizeof( zclLocation_t ) );
// 3686 
// 3687   switch ( pInMsg->hdr.commandID )
// 3688   {
// 3689     case COMMAND_LOCATION_SET_ABSOLUTE:
// 3690       cmd.un.absLoc.coordinate1 = BUILD_UINT16( pData[0], pData[1] );
// 3691       pData += 2;
// 3692       cmd.un.absLoc.coordinate2 = BUILD_UINT16( pData[0], pData[1] );
// 3693       pData += 2;
// 3694       cmd.un.absLoc.coordinate3 = BUILD_UINT16( pData[0], pData[1] );
// 3695       pData += 2;
// 3696       cmd.un.absLoc.power = BUILD_UINT16( pData[0], pData[1] );
// 3697       pData += 2;
// 3698       cmd.un.absLoc.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3699 
// 3700       if ( pCBs->pfnLocation )
// 3701       {
// 3702         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3703         cmd.cmdID = pInMsg->hdr.commandID;
// 3704 
// 3705         // Update the absolute location info
// 3706         pCBs->pfnLocation( &cmd );
// 3707       }
// 3708       break;
// 3709 
// 3710     case COMMAND_LOCATION_SET_DEV_CFG:
// 3711       cmd.un.devCfg.power = BUILD_UINT16( pData[0], pData[1] );
// 3712       pData += 2;
// 3713       cmd.un.devCfg.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3714       pData += 2;
// 3715       cmd.un.devCfg.calcPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3716       pData += 2;
// 3717       cmd.un.devCfg.numMeasurements = *pData++;
// 3718       cmd.un.devCfg.reportPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3719 
// 3720       if ( pCBs->pfnLocation )
// 3721       {
// 3722         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3723         cmd.cmdID = pInMsg->hdr.commandID;
// 3724 
// 3725         // Update the device configuration info
// 3726         pCBs->pfnLocation( &cmd );
// 3727       }
// 3728       break;
// 3729 
// 3730     case COMMAND_LOCATION_GET_DEV_CFG:
// 3731       cmd.un.ieeeAddr = pData;
// 3732 
// 3733       if ( pCBs->pfnLocation )
// 3734       {
// 3735         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3736         cmd.cmdID = pInMsg->hdr.commandID;
// 3737         cmd.seqNum = pInMsg->hdr.transSeqNum;
// 3738 
// 3739         // Retreive the Device Configuration
// 3740         pCBs->pfnLocation( &cmd );
// 3741       }
// 3742       stat = ZCL_STATUS_CMD_HAS_RSP;
// 3743       break;
// 3744 
// 3745     case COMMAND_LOCATION_GET_DATA:
// 3746       cmd.un.loc.bitmap.locByte = *pData++;
// 3747       cmd.un.loc.numResponses = *pData++;
// 3748 
// 3749       if ( cmd.un.loc.brdcastResponse == 0 ) // command is sent as a unicast
// 3750         zcl_memcpy( cmd.un.loc.targetAddr, pData, 8 );
// 3751 
// 3752       if ( pCBs->pfnLocation )
// 3753       {
// 3754         cmd.srcAddr = &(pInMsg->msg->srcAddr);
// 3755         cmd.cmdID = pInMsg->hdr.commandID;
// 3756         cmd.seqNum = pInMsg->hdr.transSeqNum;
// 3757 
// 3758         // Retreive the Location Data
// 3759         pCBs->pfnLocation( &cmd );
// 3760       }
// 3761       stat = ZCL_STATUS_CMD_HAS_RSP;
// 3762       break;
// 3763 
// 3764     default:
// 3765       stat = ZFailure;
// 3766       break;
// 3767   }
// 3768 
// 3769   return ( stat );
// 3770 }
// 3771 
// 3772 /*********************************************************************
// 3773  * @fn      zclGeneral_ProcessInLocationDataRsp
// 3774  *
// 3775  * @brief   Process in the received Location Command.
// 3776  *
// 3777  * @param   pInMsg - pointer to the incoming message
// 3778  *
// 3779  * @return  ZStatus_t
// 3780  */
// 3781 static void zclGeneral_ProcessInLocationDataRsp( zclIncoming_t *pInMsg,
// 3782                                                  zclGeneral_AppCallbacks_t *pCBs )
// 3783 {
// 3784   uint8 *pData = pInMsg->pData;
// 3785   zclLocationRsp_t rsp;
// 3786 
// 3787   zcl_memset( (uint8*)&rsp, 0, sizeof( zclLocationRsp_t ) );
// 3788 
// 3789   if ( pCBs->pfnLocationRsp )
// 3790   {
// 3791     if ( pInMsg->hdr.commandID == COMMAND_LOCATION_DATA_RSP )
// 3792       rsp.un.loc.status = *pData++;
// 3793 
// 3794     if ( pInMsg->hdr.commandID != COMMAND_LOCATION_DATA_RSP ||
// 3795          rsp.un.loc.status == ZCL_STATUS_SUCCESS )
// 3796     {
// 3797       rsp.un.loc.data.type = *pData++;
// 3798       rsp.un.loc.data.absLoc.coordinate1 = BUILD_UINT16( pData[0], pData[1] );
// 3799       pData += 2;
// 3800       rsp.un.loc.data.absLoc.coordinate2 = BUILD_UINT16( pData[0], pData[1] );
// 3801       pData += 2;
// 3802 
// 3803       if ( locationType2D( rsp.un.loc.data.type ) == 0 )
// 3804       {
// 3805         rsp.un.loc.data.absLoc.coordinate3 = BUILD_UINT16( pData[0], pData[1] );
// 3806         pData += 2;
// 3807       }
// 3808 
// 3809       if ( pInMsg->hdr.commandID != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 3810       {
// 3811         rsp.un.loc.data.absLoc.power = BUILD_UINT16( pData[0], pData[1] );
// 3812         pData += 2;
// 3813         rsp.un.loc.data.absLoc.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3814         pData += 2;
// 3815       }
// 3816 
// 3817       if ( locationTypeAbsolute( rsp.un.loc.data.type ) == 0 )
// 3818       {
// 3819         if ( pInMsg->hdr.commandID != COMMAND_LOCATION_COMPACT_DATA_NOTIF )
// 3820           rsp.un.loc.data.calcLoc.locationMethod = *pData++;
// 3821 
// 3822         rsp.un.loc.data.calcLoc.qualityMeasure = *pData++;
// 3823         rsp.un.loc.data.calcLoc.locationAge = BUILD_UINT16( pData[0], pData[1] );
// 3824       }
// 3825     }
// 3826 
// 3827     rsp.srcAddr = &(pInMsg->msg->srcAddr);
// 3828     rsp.cmdID = pInMsg->hdr.commandID;
// 3829 
// 3830     // Notify the Application
// 3831     pCBs->pfnLocationRsp( &rsp );
// 3832   }
// 3833 }
// 3834 
// 3835 /*********************************************************************
// 3836  * @fn      zclGeneral_ProcessInLocationClient
// 3837  *
// 3838  * @brief   Process in the received Location Command.
// 3839  *
// 3840  * @param   pInMsg - pointer to the incoming message
// 3841  *
// 3842  * @return  ZStatus_t
// 3843  */
// 3844 static ZStatus_t zclGeneral_ProcessInLocationClient( zclIncoming_t *pInMsg,
// 3845                                                      zclGeneral_AppCallbacks_t *pCBs )
// 3846 {
// 3847   uint8 *pData = pInMsg->pData;
// 3848   zclLocationRsp_t rsp;
// 3849   ZStatus_t stat = ZSuccess;
// 3850 
// 3851   zcl_memset( (uint8*)&rsp, 0, sizeof( zclLocationRsp_t ) );
// 3852 
// 3853   switch ( pInMsg->hdr.commandID )
// 3854   {
// 3855     case COMMAND_LOCATION_DEV_CFG_RSP:
// 3856       if ( pCBs->pfnLocationRsp )
// 3857       {
// 3858         rsp.un.devCfg.status = *pData++;
// 3859         if ( rsp.un.devCfg.status == ZCL_STATUS_SUCCESS )
// 3860         {
// 3861           rsp.un.devCfg.data.power = BUILD_UINT16( pData[0], pData[1] );
// 3862           pData += 2;
// 3863           rsp.un.devCfg.data.pathLossExponent = BUILD_UINT16( pData[0], pData[1] );
// 3864           pData += 2;
// 3865           rsp.un.devCfg.data.calcPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3866           pData += 2;
// 3867           rsp.un.devCfg.data.numMeasurements = *pData++;
// 3868           rsp.un.devCfg.data.reportPeriod = BUILD_UINT16( pData[0], pData[1] );
// 3869 
// 3870           rsp.srcAddr = &(pInMsg->msg->srcAddr);
// 3871           rsp.cmdID = pInMsg->hdr.commandID;
// 3872 
// 3873           // Notify the Application
// 3874           pCBs->pfnLocationRsp( &rsp );
// 3875         }
// 3876       }
// 3877       break;
// 3878 
// 3879     case COMMAND_LOCATION_DATA_RSP:
// 3880     case COMMAND_LOCATION_DATA_NOTIF:
// 3881     case COMMAND_LOCATION_COMPACT_DATA_NOTIF:
// 3882       zclGeneral_ProcessInLocationDataRsp( pInMsg, pCBs );
// 3883       break;
// 3884 
// 3885     case COMMAND_LOCATION_RSSI_PING:
// 3886       if ( pCBs->pfnLocationRsp )
// 3887       {
// 3888         rsp.un.locationType = *pData;
// 3889 
// 3890         rsp.srcAddr = &(pInMsg->msg->srcAddr);
// 3891         rsp.cmdID = pInMsg->hdr.commandID;
// 3892 
// 3893         // Notify the Application
// 3894         pCBs->pfnLocationRsp( &rsp );
// 3895       }
// 3896       break;
// 3897 
// 3898     default:
// 3899       stat = ZFailure;
// 3900       break;
// 3901   }
// 3902 
// 3903   return ( stat );
// 3904 }
// 3905 #endif // ZCL_LOCATION
// 3906 
// 3907 #ifdef ZCL_SCENES
// 3908 #if !defined ( ZCL_STANDALONE )
// 3909 /*********************************************************************
// 3910  * @fn      zclGeneral_ScenesInitNV
// 3911  *
// 3912  * @brief   Initialize the NV Scene Table Items
// 3913  *
// 3914  * @param   none
// 3915  *
// 3916  * @return  number of scenes
// 3917  */
// 3918 static uint8 zclGeneral_ScenesInitNV( void )
// 3919 {
// 3920   uint8  status;
// 3921   uint16 size;
// 3922 
// 3923   size = (uint16)((sizeof ( nvGenScenesHdr_t ))
// 3924                   + ( sizeof( zclGenSceneNVItem_t ) * ZCL_GEN_MAX_SCENES ));
// 3925 
// 3926   status = zcl_nv_item_init( ZCD_NV_SCENE_TABLE, size, NULL );
// 3927 
// 3928   if ( status != ZSUCCESS )
// 3929   {
// 3930     zclGeneral_ScenesSetDefaultNV();
// 3931   }
// 3932 
// 3933   return status;
// 3934 }
// 3935 #endif // ZCL_STANDALONE
// 3936 
// 3937 #if !defined ( ZCL_STANDALONE )
// 3938 /*********************************************************************
// 3939  * @fn          zclGeneral_ScenesSetDefaultNV
// 3940  *
// 3941  * @brief       Write the defaults to NV
// 3942  *
// 3943  * @param       none
// 3944  *
// 3945  * @return      none
// 3946  */
// 3947 static void zclGeneral_ScenesSetDefaultNV( void )
// 3948 {
// 3949   nvGenScenesHdr_t hdr;
// 3950 
// 3951   // Initialize the header
// 3952   hdr.numRecs = 0;
// 3953 
// 3954   // Save off the header
// 3955   zcl_nv_write( ZCD_NV_SCENE_TABLE, 0, sizeof( nvGenScenesHdr_t ), &hdr );
// 3956 }
// 3957 #endif // ZCL_STANDALONE
// 3958 
// 3959 #if !defined ( ZCL_STANDALONE )
// 3960 /*********************************************************************
// 3961  * @fn          zclGeneral_ScenesWriteNV
// 3962  *
// 3963  * @brief       Save the Scene Table in NV
// 3964  *
// 3965  * @param       none
// 3966  *
// 3967  * @return      none
// 3968  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3969 static void zclGeneral_ScenesWriteNV( void )
zclGeneral_ScenesWriteNV:
          CFI Block cfiBlock795 Using cfiCommon0
          CFI Function zclGeneral_ScenesWriteNV
        CODE
// 3970 {
        FUNCALL zclGeneral_ScenesWriteNV, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 72, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesWriteNV, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 73, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 73, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesWriteNV, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 73, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 73, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        MOV       A,#-0xb
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 58
        MOV       A,#-0x3a
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 3971   nvGenScenesHdr_t hdr;
// 3972   zclGenSceneItem_t *pLoop;
// 3973   zclGenSceneNVItem_t item;
// 3974 
// 3975   hdr.numRecs = 0;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 3976 
// 3977   // Look for end of list
// 3978   pLoop = zclGenSceneTable;
        MOV       DPTR,#zclGenSceneTable
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        SJMP      ??zclGeneral_ScenesWriteNV_0
// 3979   while ( pLoop )
// 3980   {
// 3981     // Build the record
// 3982     item.endpoint = pLoop->endpoint;
??zclGeneral_ScenesWriteNV_1:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine63 & 0xFFFF
// 3983     zcl_memcpy( &(item.scene), &(pLoop->scene), sizeof ( zclGeneral_Scene_t ) );
??CrossCallReturnLabel_112:
        INC       DPTR
        INC       DPTR
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V0,R1
        MOV       ?V1,R2
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 72)
        MOV       R4,#0x37
        MOV       R5,#0x0
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_249:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 3984 
// 3985     // Save the record to NV
// 3986     zcl_nv_write( ZCD_NV_SCENE_TABLE,
// 3987             (uint16)((sizeof( nvGenScenesHdr_t )) + (hdr.numRecs * sizeof ( zclGenSceneNVItem_t ))),
// 3988                     sizeof ( zclGenSceneNVItem_t ), &item );
        ; Setup parameters for call to function osal_nv_write
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 71)
        MOV       ?V0,#0x38
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 73)
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_338:
        LCALL     ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_124:
        LCALL     `??osal_nv_write::?relay`; Banked call to: osal_nv_write
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 3989 
// 3990     hdr.numRecs++;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        ADD       A,#0x1
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOVX      @DPTR,A
// 3991 
// 3992     pLoop = pLoop->next;
        LCALL     ?Subroutine45 & 0xFFFF
// 3993   }
??CrossCallReturnLabel_340:
        MOV       R6,A
        MOV       A,R1
??zclGeneral_ScenesWriteNV_0:
        MOV       R7,A
        MOV       A,R6
        ORL       A,R7
        JNZ       ??zclGeneral_ScenesWriteNV_1
// 3994 
// 3995   // Save off the header
// 3996   zcl_nv_write( ZCD_NV_SCENE_TABLE, 0, sizeof( nvGenScenesHdr_t ), &hdr );
        ; Setup parameters for call to function osal_nv_write
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 71)
        MOV       ?V0,#0x2
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 73)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#-0x6f
        MOV       R3,#0x0
        LCALL     `??osal_nv_write::?relay`; Banked call to: osal_nv_write
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 69)
// 3997 }
        MOV       A,#0x3a
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV       R7,#0x3
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock795

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond796 Using cfiCommon0
          CFI Function zclGeneral_ProcessInScenesServer
          CFI Conditional ??CrossCallReturnLabel_339
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_340
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_SP SP+-2
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiPicker798 Using cfiCommon1
          CFI (cfiPicker798) NoFunction
          CFI (cfiPicker798) Picker
        MOV       DPL,R6
        MOV       DPH,R7
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiPicker798
        REQUIRE ??Subroutine123_0
        ; // Fall through to label ??Subroutine123_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine123_0:
          CFI Block cfiCond799 Using cfiCommon0
          CFI Function zclGeneral_ProcessInIdentity
          CFI Conditional ??CrossCallReturnLabel_337
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond800 Using cfiCommon0
          CFI (cfiCond800) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond800) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond800) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond800) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond800) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond800) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond800) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond800) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond800) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond800) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond800) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond800) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond800) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond800) CFA_SP SP+-2
          CFI (cfiCond800) CFA_XSP16 add(XSP16, 73)
          CFI Block cfiCond801 Using cfiCommon0
          CFI (cfiCond801) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond801) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond801) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond801) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond801) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond801) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond801) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond801) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond801) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond801) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond801) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond801) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond801) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond801) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond801) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond801) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond801) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond801) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond801) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond801) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond801) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond801) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond801) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond801) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond801) CFA_SP SP+-2
          CFI (cfiCond801) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond802 Using cfiCommon0
          CFI (cfiCond802) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond802) Conditional ??CrossCallReturnLabel_340
          CFI (cfiCond802) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond802) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond802) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond802) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond802) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond802) CFA_SP SP+-2
          CFI (cfiCond802) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiPicker803 Using cfiCommon1
          CFI (cfiPicker803) NoFunction
          CFI (cfiPicker803) Picker
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_345:
        RET
          CFI EndBlock cfiCond799
          CFI EndBlock cfiCond800
          CFI EndBlock cfiCond801
          CFI EndBlock cfiCond802
          CFI EndBlock cfiPicker803

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond804 Using cfiCommon0
          CFI Function zclGeneral_SendGroupRequest
          CFI Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_43
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond805 Using cfiCommon0
          CFI (cfiCond805) Function zclGeneral_SendSceneRequest
          CFI (cfiCond805) Conditional ??CrossCallReturnLabel_341, ??CrossCallReturnLabel_44
          CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond805) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond805) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond805) CFA_SP SP+-4
          CFI (cfiCond805) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond806 Using cfiCommon0
          CFI (cfiCond806) Function zclGeneral_SendAddGroupRequest
          CFI (cfiCond806) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_72
          CFI (cfiCond806) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond806) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond806) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond806) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond806) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond806) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond806) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond806) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond806) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond806) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond806) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond806) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond806) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond806) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond806) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond806) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond806) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond806) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond806) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond806) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond806) CFA_SP SP+-4
          CFI (cfiCond806) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond807 Using cfiCommon0
          CFI (cfiCond807) Function zclGeneral_SendSceneGetMembershipResponse
          CFI (cfiCond807) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_73
          CFI (cfiCond807) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond807) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond807) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond807) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond807) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond807) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond807) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond807) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond807) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond807) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond807) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond807) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond807) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond807) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond807) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond807) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond807) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond807) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond807) CFA_SP SP+-4
          CFI (cfiCond807) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond808 Using cfiCommon0
          CFI (cfiCond808) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond808) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_240
          CFI (cfiCond808) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond808) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond808) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond808) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond808) CFA_SP SP+-4
          CFI (cfiCond808) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond809 Using cfiCommon0
          CFI (cfiCond809) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond809) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_241
          CFI (cfiCond809) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond809) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond809) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond809) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond809) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond809) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond809) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond809) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond809) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond809) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond809) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond809) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond809) CFA_SP SP+-4
          CFI (cfiCond809) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond810 Using cfiCommon0
          CFI (cfiCond810) Function zclGeneral_ReadSceneCountCB
          CFI (cfiCond810) Conditional ??CrossCallReturnLabel_344, ??CrossCallReturnLabel_239
          CFI (cfiCond810) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond810) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond810) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond810) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond810) CFA_SP SP+-4
          CFI (cfiCond810) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond811 Using cfiCommon0
          CFI (cfiCond811) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond811) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_274
          CFI (cfiCond811) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond811) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond811) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond811) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond811) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond811) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond811) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond811) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond811) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond811) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond811) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond811) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond811) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond811) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond811) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond811) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond811) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond811) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond811) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond811) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond811) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond811) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond811) CFA_SP SP+-4
          CFI (cfiCond811) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond812 Using cfiCommon0
          CFI (cfiCond812) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond812) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_275
          CFI (cfiCond812) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond812) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond812) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond812) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond812) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond812) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond812) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond812) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond812) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond812) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond812) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond812) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond812) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond812) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond812) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond812) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond812) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond812) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond812) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond812) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond812) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond812) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond812) CFA_SP SP+-4
          CFI (cfiCond812) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond813 Using cfiCommon0
          CFI (cfiCond813) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond813) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_276
          CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond813) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond813) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond813) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond813) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond813) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond813) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond813) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond813) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond813) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond813) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond813) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond813) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond813) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond813) CFA_SP SP+-4
          CFI (cfiCond813) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond814 Using cfiCommon0
          CFI (cfiCond814) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond814) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_277
          CFI (cfiCond814) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond814) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond814) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond814) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond814) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond814) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond814) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond814) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond814) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond814) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond814) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond814) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond814) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond814) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond814) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond814) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond814) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond814) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond814) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond814) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond814) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond814) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond814) CFA_SP SP+-4
          CFI (cfiCond814) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond815 Using cfiCommon0
          CFI (cfiCond815) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond815) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_278
          CFI (cfiCond815) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond815) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond815) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond815) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond815) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond815) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond815) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond815) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond815) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond815) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond815) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond815) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond815) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond815) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond815) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond815) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond815) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond815) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond815) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond815) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond815) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond815) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond815) CFA_SP SP+-4
          CFI (cfiCond815) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond816 Using cfiCommon0
          CFI (cfiCond816) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond816) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_273
          CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond816) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond816) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond816) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond816) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond816) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond816) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond816) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond816) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond816) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond816) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond816) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond816) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond816) CFA_SP SP+-4
          CFI (cfiCond816) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond817 Using cfiCommon0
          CFI (cfiCond817) Function zclGeneral_HdlInSpecificCommands
          CFI (cfiCond817) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_256
          CFI (cfiCond817) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond817) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond817) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond817) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond817) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond817) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond817) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond817) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond817) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond817) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond817) CFA_SP SP+-4
          CFI (cfiCond817) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond818 Using cfiCommon0
          CFI (cfiCond818) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond818) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_258
          CFI (cfiCond818) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond818) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond818) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond818) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond818) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond818) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond818) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond818) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond818) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond818) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond818) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond818) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond818) CFA_SP SP+-4
          CFI (cfiCond818) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond819 Using cfiCommon0
          CFI (cfiCond819) Function zclGeneral_ProcessInGroupsServer
          CFI (cfiCond819) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_259
          CFI (cfiCond819) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond819) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond819) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond819) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond819) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond819) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond819) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond819) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond819) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond819) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond819) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond819) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond819) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond819) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond819) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond819) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond819) CFA_SP SP+-4
          CFI (cfiCond819) CFA_XSP16 add(XSP16, 76)
          CFI Block cfiCond820 Using cfiCommon0
          CFI (cfiCond820) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond820) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_260
          CFI (cfiCond820) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond820) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond820) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond820) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond820) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond820) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond820) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond820) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond820) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond820) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond820) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond820) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond820) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond820) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond820) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond820) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond820) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond820) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond820) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond820) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond820) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond820) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond820) CFA_SP SP+-4
          CFI (cfiCond820) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond821 Using cfiCommon0
          CFI (cfiCond821) Function zclGeneral_ProcessInGroupsClient
          CFI (cfiCond821) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_261
          CFI (cfiCond821) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond821) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond821) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond821) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond821) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond821) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond821) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond821) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond821) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond821) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond821) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond821) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond821) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond821) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond821) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond821) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond821) CFA_SP SP+-4
          CFI (cfiCond821) CFA_XSP16 add(XSP16, 50)
          CFI Block cfiCond822 Using cfiCommon0
          CFI (cfiCond822) Function zclGeneral_AddScene
          CFI (cfiCond822) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_262
          CFI (cfiCond822) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond822) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond822) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond822) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond822) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond822) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond822) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond822) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond822) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond822) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond822) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond822) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond822) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond822) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond822) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond822) CFA_SP SP+-4
          CFI (cfiCond822) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond823 Using cfiCommon0
          CFI (cfiCond823) Function zclGeneral_AddScene
          CFI (cfiCond823) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_263
          CFI (cfiCond823) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond823) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond823) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond823) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond823) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond823) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond823) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond823) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond823) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond823) CFA_SP SP+-4
          CFI (cfiCond823) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond824 Using cfiCommon0
          CFI (cfiCond824) Function zclGeneral_FindAllScenesForGroup
          CFI (cfiCond824) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_257
          CFI (cfiCond824) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond824) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond824) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond824) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond824) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond824) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond824) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond824) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond824) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond824) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond824) CFA_SP SP+-4
          CFI (cfiCond824) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond825 Using cfiCommon0
          CFI (cfiCond825) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond825) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_264
          CFI (cfiCond825) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond825) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond825) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond825) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond825) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond825) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond825) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond825) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond825) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond825) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond825) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond825) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond825) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond825) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond825) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond825) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond825) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond825) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond825) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond825) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond825) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond825) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond825) CFA_SP SP+-4
          CFI (cfiCond825) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond826 Using cfiCommon0
          CFI (cfiCond826) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond826) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_265
          CFI (cfiCond826) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond826) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond826) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond826) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond826) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond826) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond826) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond826) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond826) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond826) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond826) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond826) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond826) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond826) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond826) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond826) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond826) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond826) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond826) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond826) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond826) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond826) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond826) CFA_SP SP+-4
          CFI (cfiCond826) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond827 Using cfiCommon0
          CFI (cfiCond827) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond827) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_266
          CFI (cfiCond827) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond827) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond827) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond827) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond827) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond827) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond827) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond827) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond827) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond827) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond827) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond827) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond827) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond827) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond827) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond827) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond827) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond827) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond827) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond827) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond827) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond827) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond827) CFA_SP SP+-4
          CFI (cfiCond827) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond828 Using cfiCommon0
          CFI (cfiCond828) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond828) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_267
          CFI (cfiCond828) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond828) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond828) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond828) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond828) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond828) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond828) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond828) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond828) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond828) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond828) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond828) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond828) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond828) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond828) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond828) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond828) CFA_SP SP+-4
          CFI (cfiCond828) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond829 Using cfiCommon0
          CFI (cfiCond829) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond829) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_268
          CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond829) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond829) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond829) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond829) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond829) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond829) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond829) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond829) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond829) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond829) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond829) CFA_SP SP+-4
          CFI (cfiCond829) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond830 Using cfiCommon0
          CFI (cfiCond830) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond830) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_269
          CFI (cfiCond830) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond830) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond830) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond830) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond830) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond830) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond830) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond830) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond830) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond830) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond830) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond830) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond830) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond830) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond830) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond830) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond830) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond830) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond830) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond830) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond830) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond830) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond830) CFA_SP SP+-4
          CFI (cfiCond830) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond831 Using cfiCommon0
          CFI (cfiCond831) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond831) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_270
          CFI (cfiCond831) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond831) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond831) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond831) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond831) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond831) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond831) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond831) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond831) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond831) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond831) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond831) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond831) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond831) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond831) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond831) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond831) CFA_SP SP+-4
          CFI (cfiCond831) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond832 Using cfiCommon0
          CFI (cfiCond832) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond832) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_271
          CFI (cfiCond832) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond832) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond832) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond832) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond832) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond832) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond832) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond832) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond832) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond832) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond832) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond832) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond832) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond832) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond832) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond832) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond832) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond832) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond832) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond832) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond832) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond832) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond832) CFA_SP SP+-4
          CFI (cfiCond832) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond833 Using cfiCommon0
          CFI (cfiCond833) Function zclGeneral_ProcessInScenesClient
          CFI (cfiCond833) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_272
          CFI (cfiCond833) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond833) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond833) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond833) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond833) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond833) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond833) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond833) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond833) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond833) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond833) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond833) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond833) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond833) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond833) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond833) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond833) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond833) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond833) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond833) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond833) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond833) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond833) CFA_SP SP+-4
          CFI (cfiCond833) CFA_XSP16 add(XSP16, 87)
          CFI Block cfiCond834 Using cfiCommon0
          CFI (cfiCond834) Function zclGeneral_ProcessInScenesServer
          CFI (cfiCond834) Conditional ??CrossCallReturnLabel_345, ??CrossCallReturnLabel_339
          CFI (cfiCond834) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond834) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond834) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond834) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond834) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond834) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond834) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond834) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond834) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond834) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond834) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond834) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond834) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond834) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond834) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond834) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond834) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond834) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond834) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond834) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond834) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond834) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond834) CFA_SP SP+-4
          CFI (cfiCond834) CFA_XSP16 add(XSP16, 82)
          CFI Block cfiCond835 Using cfiCommon0
          CFI (cfiCond835) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond835) Conditional ??CrossCallReturnLabel_345, ??CrossCallReturnLabel_340
          CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond835) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond835) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond835) CFA_SP SP+-4
          CFI (cfiCond835) CFA_XSP16 add(XSP16, 69)
          CFI Block cfiCond836 Using cfiCommon0
          CFI (cfiCond836) Function zclGeneral_ProcessInIdentity
          CFI (cfiCond836) Conditional ??CrossCallReturnLabel_345, ??CrossCallReturnLabel_337
          CFI (cfiCond836) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond836) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond836) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond836) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond836) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond836) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond836) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond836) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond836) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond836) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond836) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond836) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond836) CFA_SP SP+-4
          CFI (cfiCond836) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond837 Using cfiCommon0
          CFI (cfiCond837) Function zclGeneral_ScenesWriteNV
          CFI (cfiCond837) Conditional ??CrossCallReturnLabel_345, ??CrossCallReturnLabel_338
          CFI (cfiCond837) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond837) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond837) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond837) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond837) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond837) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond837) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond837) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond837) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond837) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond837) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond837) CFA_SP SP+-4
          CFI (cfiCond837) CFA_XSP16 add(XSP16, 73)
          CFI Block cfiPicker838 Using cfiCommon1
          CFI (cfiPicker838) NoFunction
          CFI (cfiPicker838) Picker
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_351:
        MOV       R1,A
        MOV       A,R0
        RET
          CFI EndBlock cfiCond804
          CFI EndBlock cfiCond805
          CFI EndBlock cfiCond806
          CFI EndBlock cfiCond807
          CFI EndBlock cfiCond808
          CFI EndBlock cfiCond809
          CFI EndBlock cfiCond810
          CFI EndBlock cfiCond811
          CFI EndBlock cfiCond812
          CFI EndBlock cfiCond813
          CFI EndBlock cfiCond814
          CFI EndBlock cfiCond815
          CFI EndBlock cfiCond816
          CFI EndBlock cfiCond817
          CFI EndBlock cfiCond818
          CFI EndBlock cfiCond819
          CFI EndBlock cfiCond820
          CFI EndBlock cfiCond821
          CFI EndBlock cfiCond822
          CFI EndBlock cfiCond823
          CFI EndBlock cfiCond824
          CFI EndBlock cfiCond825
          CFI EndBlock cfiCond826
          CFI EndBlock cfiCond827
          CFI EndBlock cfiCond828
          CFI EndBlock cfiCond829
          CFI EndBlock cfiCond830
          CFI EndBlock cfiCond831
          CFI EndBlock cfiCond832
          CFI EndBlock cfiCond833
          CFI EndBlock cfiCond834
          CFI EndBlock cfiCond835
          CFI EndBlock cfiCond836
          CFI EndBlock cfiCond837
          CFI EndBlock cfiPicker838
// 3998 #endif // ZCL_STANDALONE
// 3999 
// 4000 #if !defined ( ZCL_STANDALONE )
// 4001 /*********************************************************************
// 4002  * @fn          zclGeneral_ScenesRestoreFromNV
// 4003  *
// 4004  * @brief       Restore the Scene table from NV
// 4005  *
// 4006  * @param       none
// 4007  *
// 4008  * @return      Number of entries restored
// 4009  */
// 4010 static uint16 zclGeneral_ScenesRestoreFromNV( void )
// 4011 {
// 4012   uint16 x;
// 4013   nvGenScenesHdr_t hdr;
// 4014 
// 4015   zclGenSceneNVItem_t item;
// 4016   uint16 numAdded = 0;
// 4017 
// 4018   if ( zcl_nv_read( ZCD_NV_SCENE_TABLE, 0, sizeof(nvGenScenesHdr_t), &hdr ) == ZSuccess )
// 4019   {
// 4020     // Read in the device list
// 4021     for ( x = 0; x < hdr.numRecs; x++ )
// 4022     {
// 4023       if ( zcl_nv_read( ZCD_NV_SCENE_TABLE,
// 4024                 (uint16)(sizeof(nvGenScenesHdr_t) + (x * sizeof ( zclGenSceneNVItem_t ))),
// 4025                                   sizeof ( zclGenSceneNVItem_t ), &item ) == ZSUCCESS )
// 4026       {
// 4027         // Add the scene
// 4028         if ( zclGeneral_AddScene( item.endpoint, &(item.scene) ) == ZSuccess )
// 4029         {
// 4030           numAdded++;
// 4031         }
// 4032       }
// 4033     }
// 4034   }
// 4035 
// 4036   return ( numAdded );
// 4037 }
// 4038 #endif // ZCL_STANDALONE
// 4039 
// 4040 #if !defined ( ZCL_STANDALONE )
// 4041 /*********************************************************************
// 4042  * @fn          zclGeneral_ScenesInit
// 4043  *
// 4044  * @brief       Initialize the scenes table
// 4045  *
// 4046  * @param       none
// 4047  *
// 4048  * @return      none
// 4049  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 4050 void zclGeneral_ScenesInit( void )
zclGeneral_ScenesInit:
          CFI Block cfiBlock839 Using cfiCommon0
          CFI Function zclGeneral_ScenesInit
        CODE
// 4051 {
        FUNCALL zclGeneral_ScenesInit, osal_nv_item_init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 70, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 70, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 72, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 72, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 72, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 72, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zclGeneral_ScenesInit, zclGeneral_AddScene
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 68, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 68, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 58
        MOV       A,#-0x3a
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
// 4052   // Initialize NV items
// 4053   zclGeneral_ScenesInitNV();
        ; Setup parameters for call to function osal_nv_item_init
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 70)
        MOV       R4,#-0x7e
        MOV       R5,#0x3
        MOV       R2,#-0x6f
        MOV       R3,#0x0
        LCALL     `??osal_nv_item_init::?relay`; Banked call to: osal_nv_item_init
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
        MOV       A,R1
        JZ        ??zclGeneral_ScenesInit_0
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        LCALL     ??Subroutine94_0 & 0xFFFF
??CrossCallReturnLabel_162:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 70)
        MOV       ?V0,#0x2
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 72)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#-0x6f
        MOV       R3,#0x0
        LCALL     `??osal_nv_write::?relay`; Banked call to: osal_nv_write
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
// 4054 
// 4055   // Restore the Scene table
// 4056   zclGeneral_ScenesRestoreFromNV();
??zclGeneral_ScenesInit_0:
        ; Setup parameters for call to function osal_nv_read
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 70)
        MOV       ?V0,#0x2
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 72)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#-0x6f
        MOV       R3,#0x0
        LCALL     `??osal_nv_read::?relay`; Banked call to: osal_nv_read
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
        MOV       A,R1
        JNZ       ??zclGeneral_ScenesInit_1
        MOV       R6,#0x0
        MOV       R7,#0x0
        SJMP      ??zclGeneral_ScenesInit_2
??zclGeneral_ScenesInit_3:
        ; Setup parameters for call to function osal_nv_read
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 70)
        MOV       ?V0,#0x38
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 72)
        MOV       A,R6
        MOV       R0,A
        MOV       A,R7
        MOV       R1,A
        MOV       A,R0
        LCALL     ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_125:
        LCALL     `??osal_nv_read::?relay`; Banked call to: osal_nv_read
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
        MOV       A,R1
        JNZ       ??zclGeneral_ScenesInit_4
        ; Setup parameters for call to function zclGeneral_AddScene
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??zclGeneral_AddScene::?relay`; Banked call to: zclGeneral_AddScene
??zclGeneral_ScenesInit_4:
        INC       R6
        MOV       A,R6
        JNZ       ??zclGeneral_ScenesInit_2
        INC       R7
??zclGeneral_ScenesInit_2:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_81:
        CLR       C
        MOV       A,R6
        SUBB      A,R0
        MOV       A,R7
        SUBB      A,R1
        JC        ??zclGeneral_ScenesInit_3
// 4057 }
??zclGeneral_ScenesInit_1:
        MOV       A,#0x3a
        SJMP      ??Subroutine124_0
          CFI EndBlock cfiBlock839

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond840 Using cfiCommon0
          CFI Function zclGeneral_ScenesWriteNV
          CFI Conditional ??CrossCallReturnLabel_124
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 73)
          CFI Block cfiCond841 Using cfiCommon0
          CFI (cfiCond841) Function zclGeneral_ScenesInit
          CFI (cfiCond841) Conditional ??CrossCallReturnLabel_125
          CFI (cfiCond841) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond841) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond841) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond841) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond841) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond841) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond841) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond841) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond841) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond841) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond841) CFA_SP SP+-2
          CFI (cfiCond841) CFA_XSP16 add(XSP16, 72)
          CFI Block cfiPicker842 Using cfiCommon1
          CFI (cfiPicker842) NoFunction
          CFI (cfiPicker842) Picker
        MOV       B,#0x38
        MUL       AB
        MOV       R0,A
        MOV       R2,B
        MOV       B,#0x38
        MOV       A,R1
        MUL       AB
        ADD       A,R2
        MOV       R1,A
        MOV       A,R0
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R1
        MOV       R5,A
        MOV       R2,#-0x6f
        MOV       R3,#0x0
        RET
          CFI EndBlock cfiCond840
          CFI EndBlock cfiCond841
          CFI EndBlock cfiPicker842

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock843 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL     ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_228:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,#0x2
          CFI EndBlock cfiBlock843
        REQUIRE ??Subroutine124_0
        ; // Fall through to label ??Subroutine124_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine124_0:
          CFI Block cfiBlock844 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock844
        REQUIRE ??Subroutine125_0
        ; // Fall through to label ??Subroutine125_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine125_0:
          CFI Block cfiBlock845 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x2
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock845
// 4058 #endif // ZCL_STANDALONE
// 4059 
// 4060 #if !defined ( ZCL_STANDALONE )
// 4061 /*********************************************************************
// 4062  * @fn          zclGeneral_ScenesSave
// 4063  *
// 4064  * @brief       Save the scenes table
// 4065  *
// 4066  * @param       none
// 4067  *
// 4068  * @return      none
// 4069  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 4070 void zclGeneral_ScenesSave( void )
zclGeneral_ScenesSave:
          CFI Block cfiBlock846 Using cfiCommon0
          CFI Function zclGeneral_ScenesSave
        CODE
// 4071 {
        FUNCALL zclGeneral_ScenesSave, zclGeneral_ScenesWriteNV
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 4072   // Update NV
// 4073   zclGeneral_ScenesWriteNV();
        ; Setup parameters for call to function zclGeneral_ScenesWriteNV
        LCALL     `??zclGeneral_ScenesWriteNV::?relay`; Banked call to: zclGeneral_ScenesWriteNV
// 4074 }
        LJMP      ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock846

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_RegisterCmdCallbacks::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_RegisterCmdCallbacks

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendIdentify::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendIdentifyEZModeInvoke::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentifyEZModeInvoke

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendIdentifyUpdateCommState::?rela`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentifyUpdateCommState

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendIdentifyQueryResponse::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendIdentifyQueryResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendGroupRequest::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendAddGroupRequest::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendAddGroupRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendGroupGetMembershipRequest::?re`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupGetMembershipRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendGroupResponse::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendGroupViewResponse::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendGroupViewResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendAddSceneRequest::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendAddSceneRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendSceneRequest::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendSceneResponse::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendSceneViewRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneViewRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendSceneGetMembershipResponse::?r`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendSceneGetMembershipResponse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclGeneral_SendLevelControlMoveToLevelRequest:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendLevelControlMoveToLevelRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendLevelControlMoveRequest::?rela`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendLevelControlMoveRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendLevelControlStepRequest::?rela`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendLevelControlStepRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_SendLevelControlStopRequest::?rela`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_SendLevelControlStopRequest

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_HdlIncoming::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_HdlIncoming

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_HdlInSpecificCommands::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_HdlInSpecificCommands

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ProcessInIdentity::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInIdentity

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_AddGroup::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_AddGroup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ProcessInGroupsServer::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInGroupsServer

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ProcessInGroupsClient::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInGroupsClient

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_AddScene::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_AddScene

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_FindScene::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_FindScene

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_FindAllScenesForGroup::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_FindAllScenesForGroup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_RemoveScene::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_RemoveScene

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_RemoveAllScenes::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_RemoveAllScenes

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_CountScenes::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_CountScenes

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_CountAllScenes::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_CountAllScenes

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ReadSceneCountCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ReadSceneCountCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ProcessInScenesServer::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInScenesServer

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ProcessInScenesClient::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInScenesClient

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ProcessInLevelControl::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ProcessInLevelControl

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ScenesWriteNV::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ScenesWriteNV

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ScenesInit::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ScenesInit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zclGeneral_ScenesSave::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclGeneral_ScenesSave

        END
// 4075 #endif // ZCL_STANDALONE
// 4076 
// 4077 #endif // ZCL_SCENES
// 4078 
// 4079 /***************************************************************************
// 4080 ****************************************************************************/
// 
// 9 289 bytes in segment BANKED_CODE
//   234 bytes in segment BANK_RELAYS
//     5 bytes in segment XDATA_Z
// 
//   234 bytes of CODE     memory
// 9 289 bytes of HUGECODE memory
//     5 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
